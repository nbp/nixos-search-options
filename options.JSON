[{"declarations":["nixos/modules/system/boot/modprobe.nix"],"default":"","description":"List of names of kernel modules that should not be loaded\nautomatically by the hardware probing code.\n","example":"","internal":false,"name":"boot.blacklistedKernelModules","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"","description":"Whether to delete all files in <filename>/tmp</filename> during boot.\n","example":"","internal":false,"name":"boot.cleanTmpDir","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"The kernel console log level.  Only log messages with a\npriority numerically less than this will appear on the\nconsole.\n","example":"","internal":false,"name":"boot.consoleLogLevel","value":"","visible":true},{"declarations":["nixos/modules/misc/crashdump.nix"],"default":"","description":"If enabled, NixOS will set up a kernel that will\nboot on crash, and leave the user to a stage1 debug1devices\ninteractive shell to be able to save the crashed kernel dump.\nIt also activates the NMI watchdog.\n","example":"","internal":false,"name":"boot.crashDump.enable","value":"","visible":true},{"declarations":["nixos/modules/misc/crashdump.nix"],"default":"","description":"This will override the boot.kernelPackages, and will add some\nkernel configuration parameters for the crash dump to work.\n","example":"","internal":false,"name":"boot.crashDump.kernelPackages","value":"","visible":true},{"declarations":["nixos/modules/misc/crashdump.nix"],"default":"","description":"Parameters that will be passed to the kernel kexec-ed on crash.\n","example":"","internal":false,"name":"boot.crashDump.kernelParams","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"","description":"Size limit for the /dev/shm tmpfs. Look at mount(8), tmpfs size option,\nfor the accepted syntax.\n","example":"","internal":false,"name":"boot.devShmSize","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"","description":"Size limit for the /dev tmpfs. Look at mount(8), tmpfs size option,\nfor the accepted syntax.\n","example":"","internal":false,"name":"boot.devSize","value":"","visible":true},{"declarations":["nixos/modules/system/boot/modprobe.nix"],"default":"","description":"Any additional configuration to be appended to the generated\n<filename>modprobe.conf</filename>.  This is typically used to\nspecify module options.  See\n<citerefentry><refentrytitle>modprobe.conf</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"boot.extraModprobeConfig","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"A list of additional packages supplying kernel modules.","example":"","internal":false,"name":"boot.extraModulePackages","value":"","visible":true},{"declarations":["nixos/modules/tasks/kbd.nix"],"default":"","description":"Tty (virtual console) devices, in addition to the consoles on\nwhich mingetty and syslogd run, that must be initialised.\nOnly useful if you have some program that you want to run on\nsome fixed console.  For example, the NixOS installation CD\nopens the manual in a web browser on console 7, so it sets\n<option>boot.extraTTYs</option> to <literal>[\"tty7\"]</literal>.\n","example":"","internal":false,"name":"boot.extraTTYs","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"Whether to try to load kernel modules for all detected hardware.\nUsually this does a good job of providing you with the modules\nyou need, but sometimes it can crash the system or cause other\nnasty effects.\n","example":"","internal":false,"name":"boot.hardwareScan","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"The set of kernel modules in the initial ramdisk used during the\nboot process.  This set must include all modules necessary for\nmounting the root device.  That is, it should include modules\nfor the physical device (e.g., SCSI drivers) and for the file\nsystem (e.g., ext3).  The set specified here is automatically\nclosed under the module dependency relation, i.e., all\ndependencies of the modules list here are included\nautomatically.  The modules listed here are available in the\ninitrd, but are only loaded on demand (e.g., the ext3 module is\nloaded automatically when an ext3 filesystem is mounted, and\nmodules for PCI devices are loaded when they match the PCI ID\nof a device in your system).  To force a module to be loaded,\ninclude it in <option>boot.initrd.kernelModules</option>.\n","example":"","internal":false,"name":"boot.initrd.availableKernelModules","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Whether to run <command>fsck</command> on journaling filesystems such as ext3.\n","example":"","internal":false,"name":"boot.initrd.checkJournalingFS","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"List of modules that are always loaded by the initrd.","example":"","internal":false,"name":"boot.initrd.kernelModules","value":"","visible":true},{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"","description":"A list of cryptographic kernel modules needed to decrypt the root device(s).\nThe default includes all common modules.\n","example":"","internal":false,"name":"boot.initrd.luks.cryptoModules","value":"","visible":true},{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"","description":"The list of devices that should be decrypted using LUKS before trying to mount the\nroot partition. This works for both LVM-over-LUKS and LUKS-over-LVM setups.\n\nThe devices are decrypted to the device mapper names defined.\n\nMake sure that initrd has the crypto modules needed for decryption.\n","example":"","internal":false,"name":"boot.initrd.luks.devices","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to allow TRIM requests to the underlying device. This option\nhas security implications, please read the LUKS documentation before\nactivating in.\n","example":"","internal":false,"name":"boot.initrd.luks.devices.*.allowDiscards","value":"","visible":true},{"declarations":[],"default":"","description":"Path of the underlying block device.","example":"","internal":false,"name":"boot.initrd.luks.devices.*.device","value":"","visible":true},{"declarations":[],"default":"","description":"The name of the file (can be a raw device or a partition) that\nshould be used as the decryption key for the encrypted device. If\nnot specified, you will be prompted for a passphrase instead.\n","example":"","internal":false,"name":"boot.initrd.luks.devices.*.keyFile","value":"","visible":true},{"declarations":[],"default":"","description":"The size of the key file. Use this if only the beginning of the\nkey file should be used as a key (often the case if a raw device\nor partition is used as key file). If not specified, the whole\n<literal>keyFile</literal> will be used decryption, instead of just\nthe first <literal>keyFileSize</literal> bytes.\n","example":"","internal":false,"name":"boot.initrd.luks.devices.*.keyFileSize","value":"","visible":true},{"declarations":[],"default":"","description":"Named to be used for the generated device in /dev/mapper.","example":"","internal":false,"name":"boot.initrd.luks.devices.*.name","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the luksOpen will be attempted before LVM scan or after it.","example":"","internal":false,"name":"boot.initrd.luks.devices.*.preLVM","value":"","visible":true},{"declarations":[],"default":"","description":"The options to use for this LUKS device in Yubikey-PBA.\nIf null (the default), Yubikey-PBA will be disabled for this device.\n","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey","value":"","visible":true},{"declarations":[],"default":"","description":"Time in seconds to wait before attempting to find the Yubikey","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.gracePeriod","value":"","visible":true},{"declarations":[],"default":"","description":"How much the iteration count for PBKDF2 is increased at each successful authentication","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.iterationStep","value":"","visible":true},{"declarations":[],"default":"","description":"Length of the LUKS slot key derived with PBKDF2 in byte","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.keyLength","value":"","visible":true},{"declarations":[],"default":"","description":"Path where the ramfs used to update the LUKS key will be mounted in stage-1","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.ramfsMountPoint","value":"","visible":true},{"declarations":[],"default":"","description":"Length of the new salt in byte (64 is the effective maximum)","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.saltLength","value":"","visible":true},{"declarations":[],"default":"","description":"Which slot on the Yubikey to challenge","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.slot","value":"","visible":true},{"declarations":[],"default":"","description":"Options related to the storing the salt","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.storage","value":"","visible":true},{"declarations":[],"default":"","description":"An unencrypted device that will temporarily be mounted in stage-1.\nMust contain the current salt to create the challenge for this LUKS device.\n","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.storage.device","value":"","visible":true},{"declarations":[],"default":"","description":"The filesystem of the unencrypted device","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.storage.fsType","value":"","visible":true},{"declarations":[],"default":"","description":"Path where the unencrypted device will be mounted in stage-1","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.storage.mountPoint","value":"","visible":true},{"declarations":[],"default":"","description":"Absolute path of the salt on the unencrypted device with\nthat device's root directory as \"/\".\n","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.storage.path","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to use a passphrase and a Yubikey (true), or only a Yubikey (false)","example":"","internal":false,"name":"boot.initrd.luks.devices.*.yubikey.twoFactor","value":"","visible":true},{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"","description":"Unless enabled, encryption keys can be easily recovered by an attacker with physical\naccess to any machine with PCMCIA, ExpressCard, ThunderBolt or FireWire port.\nMore information: http://en.wikipedia.org/wiki/DMA_attack\n\nThis option blacklists FireWire drivers, but doesn't remove them. You can manually\nload the drivers if you need to use a FireWire device, but don't forget to unload them!\n","example":"","internal":false,"name":"boot.initrd.luks.mitigateDMAAttacks","value":"","visible":true},{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"","description":"Enables support for authenticating with a Yubikey on LUKS devices.\nSee the NixOS wiki for information on how to properly setup a LUKS device\nand a Yubikey to work with this feature.\n","example":"","internal":false,"name":"boot.initrd.luks.yubikeySupport","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Contents of <filename>/etc/mdadm.conf</filename> in stage 1.\n","example":"","internal":false,"name":"boot.initrd.mdadmConf","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed immediately after stage 1 of the\nboot has loaded kernel modules and created device nodes in\n<filename>/dev</filename>.\n","example":"","internal":false,"name":"boot.initrd.postDeviceCommands","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed immediately after the stage 1\nfilesystems have been mounted.\n","example":"","internal":false,"name":"boot.initrd.postMountCommands","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed immediately before LVM discovery.\n","example":"","internal":false,"name":"boot.initrd.preLVMCommands","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"","description":"Names of supported filesystem types in the initial ramdisk.","example":"","internal":false,"name":"boot.initrd.supportedFilesystems","value":"","visible":true},{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":"","description":"Whether this NixOS machine is a lightweight container running\nin another NixOS system.\n","example":"","internal":false,"name":"boot.isContainer","value":"","visible":true},{"declarations":["nixos/modules/config/sysctl.nix"],"default":"","description":"Runtime parameters of the Linux kernel, as set by\n<citerefentry><refentrytitle>sysctl</refentrytitle>\n<manvolnum>8</manvolnum></citerefentry>.  Note that sysctl\nparameters names must be enclosed in quotes\n(e.g. <literal>\"vm.swappiness\"</literal> instead of\n<literal>vm.swappiness</literal>).  The value of each\nparameter may be a string, integer, boolean, or null\n(signifying the option will not appear at all).\n","example":"","internal":false,"name":"boot.kernel.sysctl","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"The set of kernel modules to be loaded in the second stage of\nthe boot process.  Note that modules that are needed to\nmount the root file system should be added to\n<option>boot.initrd.availableKernelModules</option> or\n<option>boot.initrd.kernelModules</option>.\n","example":"","internal":false,"name":"boot.kernelModules","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"This option allows you to override the Linux kernel used by\nNixOS.  Since things like external kernel module packages are\ntied to the kernel you're using, it also overrides those.\nThis option is a function that takes Nixpkgs as an argument\n(as a convenience), and returns an attribute set containing at\nthe very least an attribute <varname>kernel</varname>.\nAdditional attributes may be needed depending on your\nconfiguration.  For instance, if you use the NVIDIA X driver,\nthen it also needs to contain an attribute\n<varname>nvidia_x11</varname>.\n","example":"","internal":false,"name":"boot.kernelPackages","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"Parameters added to the kernel command line.","example":"","internal":false,"name":"boot.kernelParams","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/efi.nix"],"default":"","description":"Whether or not the installation process should modify efi boot variables.","example":"","internal":false,"name":"boot.loader.efi.canTouchEfiVariables","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/efi.nix"],"default":"","description":"Where the EFI System Partition is mounted.","example":"","internal":false,"name":"boot.loader.efi.efiSysMountPoint","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/generations-dir/generations-dir.nix"],"default":"","description":"\n          Whether copy the necessary boot files into /boot, so\n          /nix/store is not needed by the boot loader.\n        ","example":"","internal":false,"name":"boot.loader.generationsDir.copyKernels","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/generations-dir/generations-dir.nix"],"default":"","description":"Whether to create symlinks to the system generations under\n<literal>/boot</literal>.  When enabled,\n<literal>/boot/default/kernel</literal>,\n<literal>/boot/default/initrd</literal>, etc., are updated to\npoint to the current generation's kernel image, initial RAM\ndisk, and other bootstrap files.\n\nThis optional is not necessary with boot loaders such as GNU GRUB\nfor which the menu is updated to point to the latest bootstrap\nfiles.  However, it is needed for U-Boot on platforms where the\nboot command line is stored in flash memory rather than in a\nmenu file.\n","example":"","internal":false,"name":"boot.loader.generationsDir.enable","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Maximum of configurations in boot menu. GRUB has problems when\nthere are too many entries.\n","example":"","internal":false,"name":"boot.loader.grub.configurationLimit","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"GRUB entry name instead of default.\n","example":"","internal":false,"name":"boot.loader.grub.configurationName","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Whether the GRUB menu builder should copy kernels and initial\nramdisks to /boot.  This is done automatically if /boot is\non a different partition than /.\n","example":"","internal":false,"name":"boot.loader.grub.copyKernels","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Index of the default menu item to be booted.\n","example":"","internal":false,"name":"boot.loader.grub.default","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"The device on which the GRUB boot loader will be installed.\nThe special value <literal>nodev</literal> means that a GRUB\nboot menu will be generated, but GRUB itself will not\nactually be installed.  To install GRUB on multiple devices,\nuse <literal>boot.loader.grub.devices</literal>.\n","example":"","internal":false,"name":"boot.loader.grub.device","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"The devices on which the boot loader, GRUB, will be\ninstalled. Can be used instead of <literal>device</literal> to\ninstall grub into multiple devices (e.g., if as softraid arrays holding /boot).\n","example":"","internal":false,"name":"boot.loader.grub.devices","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Whether to enable the GNU GRUB boot loader.\n","example":"","internal":false,"name":"boot.loader.grub.enable","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"The relative path of /boot within the parent volume. Leave empty\nif /boot is not a btrfs subvolume.\n","example":"","internal":false,"name":"boot.loader.grub.explicitBootRoot","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Additional GRUB commands inserted in the configuration file\njust before the menu entries.\n","example":"","internal":false,"name":"boot.loader.grub.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Any additional entries you want added to the GRUB boot menu.\n","example":"","internal":false,"name":"boot.loader.grub.extraEntries","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Whether extraEntries are included before the default option.\n","example":"","internal":false,"name":"boot.loader.grub.extraEntriesBeforeNixOS","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"A set of files to be copied to <filename>/boot</filename>.\nEach attribute name denotes the destination file name in\n<filename>/boot</filename>, while the corresponding\nattribute value specifies the source file.\n","example":"","internal":false,"name":"boot.loader.grub.extraFiles","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Additional GRUB commands inserted in the configuration file\nat the start of each NixOS menu entry.\n","example":"","internal":false,"name":"boot.loader.grub.extraPerEntryConfig","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Additional bash commands to be run at the script that\nprepares the grub menu entries.\n","example":"","internal":false,"name":"boot.loader.grub.extraPrepareConfig","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/memtest.nix"],"default":"","description":"Make Memtest86+, a memory testing program, available from the\nGRUB boot menu.\n","example":"","internal":false,"name":"boot.loader.grub.memtest86.enable","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/memtest.nix"],"default":"","description":"Parameters added to the Memtest86+ command line. As of memtest86+ 5.01\nthe following list of (apparently undocumented) parameters are\naccepted:\n\n<itemizedlist>\n\n<listitem>\n  <para><literal>console=...</literal>, set up a serial console.\n  Examples:\n  <literal>console=ttyS0</literal>,\n  <literal>console=ttyS0,9600</literal> or\n  <literal>console=ttyS0,115200n8</literal>.</para>\n</listitem>\n\n<listitem>\n  <para><literal>btrace</literal>, enable boot trace.</para>\n</listitem>\n\n<listitem>\n  <para><literal>maxcpus=N</literal>, limit number of CPUs.</para>\n</listitem>\n\n<listitem>\n  <para><literal>onepass</literal>, run one pass and exit if there\n  are no errors.</para>\n</listitem>\n\n<listitem>\n  <para><literal>tstlist=...</literal>, list of tests to run.\n  Example: <literal>0,1,2</literal>.</para>\n</listitem>\n\n<listitem>\n  <para><literal>cpumask=...</literal>, set a CPU mask, to select CPUs\n  to use for testing.</para>\n</listitem>\n\n</itemizedlist>\n\nThis list of command line options was obtained by reading the\nMemtest86+ source code.\n","example":"","internal":false,"name":"boot.loader.grub.memtest86.params","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Background image used for GRUB.  It must be a 640x480,\n14-colour image in XPM format, optionally compressed with\n<command>gzip</command> or <command>bzip2</command>.  Set to\n<literal>null</literal> to run GRUB in text mode.\n","example":"","internal":false,"name":"boot.loader.grub.splashImage","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Timeout (in seconds) until GRUB boots the default menu item.\n","example":"","internal":false,"name":"boot.loader.grub.timeout","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"The version of GRUB to use: <literal>1</literal> for GRUB\nLegacy (versions 0.9x), or <literal>2</literal> (the\ndefault) for GRUB 2.\n","example":"","internal":false,"name":"boot.loader.grub.version","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/gummiboot/gummiboot.nix"],"default":"","description":"Whether to enable the gummiboot UEFI boot manager","example":"","internal":false,"name":"boot.loader.gummiboot.enable","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/gummiboot/gummiboot.nix"],"default":"","description":"Timeout (in seconds) for how long to show the menu (null if none).\nNote that even with no timeout the menu can be forced if the space\nkey is pressed during bootup\n","example":"","internal":false,"name":"boot.loader.gummiboot.timeout","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/init-script/init-script.nix"],"default":"","description":"Some systems require a /sbin/init script which is started.\nOr having it makes starting NixOS easier.\nThis applies to some kind of hosting services and user mode linux.\n\nAdditionally this script will create\n/boot/init-other-configurations-contents.txt containing\ncontents of remaining configurations. You can copy paste them into\n/sbin/init manually running a rescue system or such.\n","example":"","internal":false,"name":"boot.loader.initScript.enable","value":"","visible":true},{"declarations":["nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix"],"default":"","description":"Whether to create files with the system generations in\n<literal>/boot</literal>.\n<literal>/boot/old</literal> will hold files from old generations.\n","example":"","internal":false,"name":"boot.loader.raspberryPi.enable","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"","description":"Shell commands to be executed just before systemd is started.\n","example":"","internal":false,"name":"boot.postBootCommands","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Device for manual resume attempt during boot, specified using\nthe device's major and minor number as\n<literal><replaceable>major</replaceable>:<replaceable>minor</replaceable></literal>.\n","example":"","internal":false,"name":"boot.resumeDevice","value":"","visible":true},{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"","description":"Size limit for the /run tmpfs. Look at mount(8), tmpfs size option,\nfor the accepted syntax.\n","example":"","internal":false,"name":"boot.runSize","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"ZFS uses a system's hostid to determine if a storage pool (zpool) is\nnative to this system, and should thus be imported automatically.\nUnfortunately, this hostid can change under linux from boot to boot (by\nchanging network adapters, for instance). Specify a unique 32 bit hostid in\nhex here for zfs to prevent getting a random hostid between boots and having to\nmanually import pools.\n","example":"","internal":false,"name":"boot.spl.hostid","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"","description":"Names of supported filesystem types.","example":"","internal":false,"name":"boot.supportedFilesystems","value":"","visible":true},{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"","description":"Whether to activate VESA video mode on boot.\n","example":"","internal":false,"name":"boot.vesa","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Use the git version of the SPL and ZFS packages.\nNote that these are unreleased versions, with less testing, and therefore\nmay be more unstable.\n","example":"","internal":false,"name":"boot.zfs.useGit","value":"","visible":true},{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":"","description":"A set of NixOS system configurations to be run as lightweight\ncontainers.  Each container appears as a service\n<literal>container-<replaceable>name</replaceable></literal>\non the host system, allowing it to be started and stopped via\n<command>systemctl</command> .\n","example":"","internal":false,"name":"containers","value":"","visible":true},{"declarations":[],"default":"","description":"A specification of the desired configuration of this\ncontainer, as a NixOS module.\n","example":"","internal":false,"name":"containers.<name>.config","value":"","visible":true},{"declarations":[],"default":"","description":"The IPv4 address assigned to the host interface.\n","example":"","internal":false,"name":"containers.<name>.hostAddress","value":"","visible":true},{"declarations":[],"default":"","description":"The IPv4 address assigned to <literal>eth0</literal>\nin the container.\n","example":"","internal":false,"name":"containers.<name>.localAddress","value":"","visible":true},{"declarations":[],"default":"","description":"As an alternative to specifying\n<option>config</option>, you can specify the path to\nthe evaluated NixOS system configuration, typically a\nsymlink to a system profile.\n","example":"","internal":false,"name":"containers.<name>.path","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to give the container its own private virtual\nEthernet interface.  The interface is called\n<literal>eth0</literal>, and is hooked up to the interface\n<literal>ve-<replaceable>container-name</replaceable></literal>\non the host.  If this option is not set, then the\ncontainer shares the network interfaces of the host,\nand can bind to any port on any interface.\n","example":"","internal":false,"name":"containers.<name>.privateNetwork","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"The shell executable that is linked system-wide to\n<literal>/bin/sh</literal>. Please note that NixOS assumes all\nover the place that shell to be Bash, so override the default\nsetting only if you know exactly what you're doing.\n","example":"","internal":false,"name":"environment.binsh","value":"","visible":true},{"declarations":["nixos/modules/programs/blcr.nix"],"default":"","description":"Whether to enable support for the BLCR checkpointing tool.","example":"","internal":false,"name":"environment.blcr.enable","value":"","visible":true},{"declarations":["nixos/modules/misc/check-config.nix"],"default":"","description":"Whether to check the validity of the entire configuration.\n","example":"","internal":false,"name":"environment.checkConfigurationOptions","value":"","visible":true},{"declarations":["nixos/modules/system/etc/etc.nix"],"default":"","description":"Set of files that have to be linked in <filename>/etc</filename>.\n","example":"","internal":false,"name":"environment.etc","value":"","visible":true},{"declarations":[],"default":"","description":"Whether this /etc file should be generated.  This\noption allows specific /etc files to be disabled.\n","example":"","internal":false,"name":"environment.etc.<name?>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"GID of created file. Only takes affect when the file is\ncopied (that is, the mode is not 'symlink').\n","example":"","internal":false,"name":"environment.etc.<name?>.gid","value":"","visible":true},{"declarations":[],"default":"","description":"If set to something else than <literal>symlink</literal>,\nthe file is copied instead of symlinked, with the given\nfile mode.\n","example":"","internal":false,"name":"environment.etc.<name?>.mode","value":"","visible":true},{"declarations":[],"default":"","description":"Path of the source file.","example":"","internal":false,"name":"environment.etc.<name?>.source","value":"","visible":true},{"declarations":[],"default":"","description":"Name of symlink (relative to\n<filename>/etc</filename>).  Defaults to the attribute\nname.\n","example":"","internal":false,"name":"environment.etc.<name?>.target","value":"","visible":true},{"declarations":[],"default":"","description":"Text of the file.","example":"","internal":false,"name":"environment.etc.<name?>.text","value":"","visible":true},{"declarations":[],"default":"","description":"UID of created file. Only takes affect when the file is\ncopied (that is, the mode is not 'symlink').\n","example":"","internal":false,"name":"environment.etc.<name?>.uid","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during global environment initialisation\nafter all variables and profileVariables have been set.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","example":"","internal":false,"name":"environment.extraInit","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":"","description":"Which packages gnome should exclude from the default environment","example":"","internal":false,"name":"environment.gnome3.excludePackages","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":"","description":"Which Gnome 3 package set to use.","example":"","internal":false,"name":"environment.gnome3.packageSet","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during interactive shell initialisation.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","example":"","internal":false,"name":"environment.interactiveShellInit","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":"","description":"This option is obsolete.  Please use <option>environment.systemPackages</option> instead.","example":"","internal":false,"name":"environment.kdePackages","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during login shell initialisation.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","example":"","internal":false,"name":"environment.loginShellInit","value":"","visible":true},{"declarations":["nixos/modules/config/no-x-libs.nix"],"default":"","description":"Switch off the options in the default configuration that\nrequire X11 libraries. This includes client-side font\nconfiguration and SSH forwarding of X11 authentication\nin. Thus, you probably do not want to enable this option if\nyou want to run X11 programs on this machine via SSH.\n","example":"","internal":false,"name":"environment.noXlibs","value":"","visible":true},{"declarations":["nixos/modules/config/system-path.nix"],"default":"","description":"List of directories to be symlinked in `/run/current-system/sw'.","example":"","internal":false,"name":"environment.pathsToLink","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"A function which given a profile path should give back\na set of environment variables for that profile.\n","example":"","internal":false,"name":"environment.profileVariables","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"A list of profiles used to setup the global environment.\n","example":"","internal":false,"name":"environment.profiles","value":"","visible":true},{"declarations":["nixos/modules/config/system-environment.nix"],"default":"","description":"A set of environment variables used in the global environment.\nThese variables will be set by PAM.\nThe value of each variable can be either a string or a list of\nstrings.  The latter is concatenated, interspersed with colon\ncharacters.\n","example":"","internal":false,"name":"environment.sessionVariables","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"An attribute set that maps aliases (the top level attribute names in\nthis option) to command strings or directly to build outputs. The\naliases are added to all users' shells.\n","example":"","internal":false,"name":"environment.shellAliases","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during shell initialisation.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","example":"","internal":false,"name":"environment.shellInit","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"A list of permissible login shells for user accounts.\nNo need to mention <literal>/bin/sh</literal>\nhere, it is placed into this list implicitly.\n","example":"","internal":false,"name":"environment.shells","value":"","visible":true},{"declarations":["nixos/modules/config/system-path.nix"],"default":"","description":"The set of packages that appear in\n/run/current-system/sw.  These packages are\nautomatically available to all users, and are\nautomatically updated every time you rebuild the system\nconfiguration.  (The latter is the main difference with\ninstalling them in the default profile,\n<filename>/nix/var/nix/profiles/default</filename>.\n","example":"","internal":false,"name":"environment.systemPackages","value":"","visible":true},{"declarations":["nixos/modules/config/unix-odbc-drivers.nix"],"default":"","description":"Specifies Unix ODBC drivers to be registered in\n<filename>/etc/odbcinst.ini</filename>.  You may also want to\nadd <literal>pkgs.unixODBC</literal> to the system path to get\na command line client to connnect to ODBC databases.\n","example":"","internal":false,"name":"environment.unixODBCDrivers","value":"","visible":true},{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"A set of environment variables used in the global environment.\nThese variables will be set on shell initialisation.\nThe value of each variable can be either a string or a list of\nstrings.  The latter is concatenated, interspersed with colon\ncharacters.\n","example":"","internal":false,"name":"environment.variables","value":"","visible":true},{"declarations":["nixos/modules/programs/wvdial.nix"],"default":"","description":"Contents of the \"Dialer Defaults\" section of\n<filename>/etc/wvdial.conf</filename>.\n","example":"","internal":false,"name":"environment.wvdial.dialerDefaults","value":"","visible":true},{"declarations":["nixos/modules/programs/wvdial.nix"],"default":"","description":"Default ppp settings for wvdial.","example":"","internal":false,"name":"environment.wvdial.pppDefaults","value":"","visible":true},{"declarations":["nixos/modules/tasks/encrypted-devices.nix","nixos/modules/tasks/filesystems.nix","nixos/modules/system/boot/stage-1.nix"],"default":"","description":"The file systems to be mounted.  It must include an entry for\nthe root directory (<literal>mountPoint = \"/\"</literal>).  Each\nentry in the list is an attribute set with the following fields:\n<literal>mountPoint</literal>, <literal>device</literal>,\n<literal>fsType</literal> (a file system type recognised by\n<command>mount</command>; defaults to\n<literal>\"auto\"</literal>), and <literal>options</literal>\n(the mount options passed to <command>mount</command> using the\n<option>-o</option> flag; defaults to <literal>\"defaults\"</literal>).\n\nInstead of specifying <literal>device</literal>, you can also\nspecify a volume label (<literal>label</literal>) for file\nsystems that support it, such as ext2/ext3 (see <command>mke2fs\n-L</command>).\n","example":"","internal":false,"name":"fileSystems","value":"","visible":true},{"declarations":[],"default":"","description":"If the device does not currently contain a filesystem (as\ndetermined by <command>blkid</command>, then automatically\nformat it with the filesystem type specified in\n<option>fsType</option>.  Use with caution.\n","example":"","internal":false,"name":"fileSystems.<name?>.autoFormat","value":"","visible":true},{"declarations":[],"default":"","description":"Location of the device.","example":"","internal":false,"name":"fileSystems.<name?>.device","value":"","visible":true},{"declarations":[],"default":"","description":"Location of the backing encrypted device","example":"","internal":false,"name":"fileSystems.<name?>.encrypted.blkDev","value":"","visible":true},{"declarations":[],"default":"","description":"The block device is backed by an encrypted one, adds this device as a initrd luks entry","example":"","internal":false,"name":"fileSystems.<name?>.encrypted.enable","value":"","visible":true},{"declarations":[],"default":"","description":"File system location of keyfile","example":"","internal":false,"name":"fileSystems.<name?>.encrypted.keyFile","value":"","visible":true},{"declarations":[],"default":"","description":"Label of the backing encrypted device","example":"","internal":false,"name":"fileSystems.<name?>.encrypted.label","value":"","visible":true},{"declarations":[],"default":"","description":"Type of the file system.","example":"","internal":false,"name":"fileSystems.<name?>.fsType","value":"","visible":true},{"declarations":[],"default":"","description":"Label of the device (if any).","example":"","internal":false,"name":"fileSystems.<name?>.label","value":"","visible":true},{"declarations":[],"default":"","description":"Location of the mounted the file system.","example":"","internal":false,"name":"fileSystems.<name?>.mountPoint","value":"","visible":true},{"declarations":[],"default":"","description":"If set, this file system will be mounted in the initial\nramdisk.  By default, this applies to the root file system\nand to the file system containing\n<filename>/nix/store</filename>.\n","example":"","internal":false,"name":"fileSystems.<name?>.neededForBoot","value":"","visible":true},{"declarations":[],"default":"","description":"Disable running fsck on this filesystem.","example":"","internal":false,"name":"fileSystems.<name?>.noCheck","value":"","visible":true},{"declarations":[],"default":"","description":"Options used to mount the file system.","example":"","internal":false,"name":"fileSystems.<name?>.options","value":"","visible":true},{"declarations":["nixos/modules/config/fonts/corefonts.nix"],"default":"","description":"Whether to include Microsoft's proprietary Core Fonts.  These fonts\nare redistributable, but only verbatim, among other restrictions.\nSee <link xlink:href=\"http://corefonts.sourceforge.net/eula.htm\"/>\nfor details.\n","example":"","internal":false,"name":"fonts.enableCoreFonts","value":"","visible":true},{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":"","description":"If enabled, a Fontconfig configuration file will be built\npointing to a set of default fonts.  If you don't care about\nrunning X11 applications or any other program that uses\nFontconfig, you can turn this option off and prevent a\ndependency on all those fonts.\n","example":"","internal":false,"name":"fonts.enableFontConfig","value":"","visible":true},{"declarations":["nixos/modules/config/fonts/fontdir.nix"],"default":"","description":"Whether to create a directory with links to all fonts in\n<filename>/run/current-system/sw/share/X11-fonts</filename>.\n","example":"","internal":false,"name":"fonts.enableFontDir","value":"","visible":true},{"declarations":["nixos/modules/config/fonts/ghostscript.nix"],"default":"","description":"Whether to add the fonts provided by Ghostscript (such as\nvarious URW fonts and the “Base-14” Postscript fonts) to the\nlist of system fonts, making them available to X11\napplications.\n","example":"","internal":false,"name":"fonts.enableGhostscriptFonts","value":"","visible":true},{"declarations":["nixos/modules/config/fonts/fonts.nix"],"default":"","description":"List of primary font paths.","example":"","internal":false,"name":"fonts.fonts","value":"","visible":true},{"declarations":["nixos/modules/config/gnu.nix"],"default":"","description":"When enabled, GNU software is chosen by default whenever a there is\n          a choice between GNU and non-GNU software (e.g., GNU lsh\n          vs. OpenSSH).\n","example":"","internal":false,"name":"gnu","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/amd-hybrid-graphics.nix"],"default":"","description":"Completely disable the AMD graphics card and use the\nintegrated graphics processor instead.\n","example":"","internal":false,"name":"hardware.amdHybridGraphics.disable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/bluetooth.nix"],"default":"","description":"Whether to enable support for Bluetooth.","example":"","internal":false,"name":"hardware.bluetooth.enable","value":"","visible":true},{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":"","description":"Enable the bumblebee daemon to manage Optimus hybrid video cards.\nThis should power off secondary GPU until its use is requested\nby running an application with optirun.\n\nOnly nvidia driver is supported so far.\n","example":"","internal":false,"name":"hardware.bumblebee.enable","value":"","visible":true},{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":"","description":"Group for bumblebee socket","example":"","internal":false,"name":"hardware.bumblebee.group","value":"","visible":true},{"declarations":["nixos/modules/hardware/cpu/amd-microcode.nix"],"default":"","description":"Update the CPU microcode for AMD processors.\n","example":"","internal":false,"name":"hardware.cpu.amd.updateMicrocode","value":"","visible":true},{"declarations":["nixos/modules/hardware/cpu/intel-microcode.nix"],"default":"","description":"Update the CPU microcode for Intel processors.\n","example":"","internal":false,"name":"hardware.cpu.intel.updateMicrocode","value":"","visible":true},{"declarations":["nixos/modules/hardware/all-firmware.nix"],"default":"","description":"Turn on this option if you want to enable all the firmware shipped with Debian/Ubuntu.\n","example":"","internal":false,"name":"hardware.enableAllFirmware","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"List of directories containing firmware files.  Such files\nwill be loaded automatically if the kernel asks for them\n(i.e., when it has detected specific hardware that requires\nfirmware to function).  If more than one path contains a\nfirmware file with the same name, the first path in the list\ntakes precedence.  Note that you must rebuild your system if\nyou add files to any of these directories.  For quick testing,\nput firmware files in /root/test-firmware and add that\ndirectory to the list.\nNote that you can also add firmware packages to this\nlist as these are directories in the nix store.\n","example":"","internal":false,"name":"hardware.firmware","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/nvidia-optimus.nix"],"default":"","description":"Completely disable the NVIDIA graphics card and use the\nintegrated graphics processor instead.\n","example":"","internal":false,"name":"hardware.nvidiaOptimus.disable","value":"","visible":true},{"declarations":["nixos/modules/hardware/opengl.nix"],"default":"","description":"Whether to enable accelerated OpenGL rendering through the\nDirect Rendering Interface (DRI).\n","example":"","internal":false,"name":"hardware.opengl.driSupport","value":"","visible":true},{"declarations":["nixos/modules/hardware/opengl.nix"],"default":"","description":"On 64-bit systems, whether to support Direct Rendering for\n32-bit applications (such as Wine).  This is currently only\nsupported for the <literal>nvidia</literal> driver and for\n<literal>Mesa</literal>.\n","example":"","internal":false,"name":"hardware.opengl.driSupport32Bit","value":"","visible":true},{"declarations":["nixos/modules/hardware/opengl.nix"],"default":"","description":"Make S3TC(S3 Texture Compression) via libtxc_dxtn available\nto OpenGL drivers instead of the patent-free S2TC replacement.\n\nUsing this library may require a patent license depending on your location.\n","example":"","internal":false,"name":"hardware.opengl.s3tcSupport","value":"","visible":true},{"declarations":["nixos/modules/hardware/pcmcia.nix"],"default":"","description":"Path to the configuration file which maps the memory, IRQs\nand ports used by the PCMCIA hardware.\n","example":"","internal":false,"name":"hardware.pcmcia.config","value":"","visible":true},{"declarations":["nixos/modules/hardware/pcmcia.nix"],"default":"","description":"Enable this option to support PCMCIA card.\n","example":"","internal":false,"name":"hardware.pcmcia.enable","value":"","visible":true},{"declarations":["nixos/modules/hardware/pcmcia.nix"],"default":"","description":"List of firmware used to handle specific PCMCIA card.\n","example":"","internal":false,"name":"hardware.pcmcia.firmware","value":"","visible":true},{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"The path to the configuration the PulseAudio server\nshould use. By default, the \"default.pa\" configuration\nfrom the PulseAudio distribution is used.\n","example":"","internal":false,"name":"hardware.pulseaudio.configFile","value":"","visible":true},{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"The log level that the system-wide pulseaudio daemon should use,\nif activated.\n","example":"","internal":false,"name":"hardware.pulseaudio.daemon.logLevel","value":"","visible":true},{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"Whether to enable the PulseAudio sound server.\n","example":"","internal":false,"name":"hardware.pulseaudio.enable","value":"","visible":true},{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"The PulseAudio derivation to use.  This can be used to enable\nfeatures (such as JACK support) that are not enabled in the\ndefault PulseAudio in Nixpkgs.\n","example":"","internal":false,"name":"hardware.pulseaudio.package","value":"","visible":true},{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"If false, a PulseAudio server is launched automatically for\neach user that tries to use the sound system. The server runs\nwith user privileges. This is the recommended and most secure\nway to use PulseAudio. If true, one system-wide PulseAudio\nserver is launched on boot, running as the user \"pulse\".\nPlease read the PulseAudio documentation for more details.\n","example":"","internal":false,"name":"hardware.pulseaudio.systemWide","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":"","description":"Enable support for SANE scanners.","example":"","internal":false,"name":"hardware.sane.enable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":"","description":"Packages providing extra SANE backends to enable.","example":"","internal":false,"name":"hardware.sane.extraBackends","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":"","description":"Use a development snapshot of SANE scanner drivers.","example":"","internal":false,"name":"hardware.sane.snapshot","value":"","visible":true},{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":"","description":"Enable sensitivity and speed configuration for trackpoints.\n","example":"","internal":false,"name":"hardware.trackpoint.enable","value":"","visible":true},{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":"","description":"Configure the trackpoint sensitivity. By default, the kernel\nconfigures 128.\n","example":"","internal":false,"name":"hardware.trackpoint.sensitivity","value":"","visible":true},{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":"","description":"Configure the trackpoint sensitivity. By default, the kernel\nconfigures 97.\n","example":"","internal":false,"name":"hardware.trackpoint.speed","value":"","visible":true},{"declarations":["nixos/modules/config/i18n.nix"],"default":"","description":"The font used for the virtual consoles.  Leave empty to use\nwhatever the <command>setfont</command> program considers the\ndefault font.\n","example":"","internal":false,"name":"i18n.consoleFont","value":"","visible":true},{"declarations":["nixos/modules/config/i18n.nix"],"default":"","description":"The keyboard mapping table for the virtual consoles.\n","example":"","internal":false,"name":"i18n.consoleKeyMap","value":"","visible":true},{"declarations":["nixos/modules/config/i18n.nix"],"default":"","description":"The default locale.  It determines the language for program\nmessages, the format for dates and times, sort order, and so on.\nIt also determines the character set, such as UTF-8.\n","example":"","internal":false,"name":"i18n.defaultLocale","value":"","visible":true},{"declarations":["nixos/modules/config/i18n.nix"],"default":"","description":"List of locales that the system should support.  The value\n<literal>\"all\"</literal> means that all locales supported by\nGlibc will be installed.  A full list of supported locales\ncan be found at <link\nxlink:href=\"http://sourceware.org/cgi-bin/cvsweb.cgi/libc/localedata/SUPPORTED?cvsroot=glibc\"/>.\n","example":"","internal":false,"name":"i18n.supportedLocales","value":"","visible":true},{"declarations":["nixos/modules/system/upstart/upstart.nix"],"default":"","description":"This option is a legacy method to define system services,\ndating from the era where NixOS used Upstart instead of\nsystemd.  You should use <option>systemd.services</option>\ninstead.  Services defined using <option>jobs</option> are\nmapped automatically to <option>systemd.services</option>, but\nmay not work perfectly; in particular, most\n<option>startOn</option> conditions are not supported.\n","example":"","internal":false,"name":"jobs","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"jobs.<name?>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"jobs.<name?>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"jobs.<name?>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"jobs.<name?>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Determines how systemd detects when a daemon should be\nconsidered “running”.  The value <literal>none</literal> means\nthat the daemon is considered ready immediately.  The value\n<literal>fork</literal> means that the daemon will fork once.\nThe value <literal>daemon</literal> means that the daemon will\nfork twice.  The value <literal>stop</literal> means that the\ndaemon will raise the SIGSTOP signal to indicate readiness.\n","example":"","internal":false,"name":"jobs.<name?>.daemonType","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"jobs.<name?>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"jobs.<name?>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Environment variables passed to the service's processes.","example":"","internal":false,"name":"jobs.<name?>.environment","value":"","visible":true},{"declarations":[],"default":"","description":"Command to start the job's main process.  If empty, the\njob has no main process, but can still have pre/post-start\nand pre/post-stop scripts, and is considered “running”\nuntil it is stopped.\n","example":"","internal":false,"name":"jobs.<name?>.exec","value":"","visible":true},{"declarations":[],"default":"","description":"Name of the job, mapped to the systemd unit\n<literal><replaceable>name</replaceable>.service</literal>.\n","example":"","internal":false,"name":"jobs.<name?>.name","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"jobs.<name?>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Packages added to the job's <envar>PATH</envar> environment variable.\nBoth the <filename>bin</filename> and <filename>sbin</filename>\nsubdirectories of each package are added.\n","example":"","internal":false,"name":"jobs.<name?>.path","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed after the job is started (i.e. after\nthe job's main process is started), but before the job is\nconsidered “running”.\n","example":"","internal":false,"name":"jobs.<name?>.postStart","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed after the job has stopped\n(i.e. after the job's main process has terminated).\n","example":"","internal":false,"name":"jobs.<name?>.postStop","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed before the service's main process\nis started.\n","example":"","internal":false,"name":"jobs.<name?>.preStart","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed before the job is stopped\n(i.e. before systemd kills the job's main process).  This can\nbe used to cleanly shut down a daemon.\n","example":"","internal":false,"name":"jobs.<name?>.preStop","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the service should be reloaded during a NixOS\nconfiguration switch if its definition has changed.  If\nenabled, the value of <option>restartIfChanged</option> is\nignored.\n","example":"","internal":false,"name":"jobs.<name?>.reloadIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"jobs.<name?>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"jobs.<name?>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to restart the job automatically if its process\nends unexpectedly.\n","example":"","internal":false,"name":"jobs.<name?>.respawn","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the service should be restarted during a NixOS\nconfiguration switch if its definition has changed.\n","example":"","internal":false,"name":"jobs.<name?>.restartIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"jobs.<name?>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed as the service's main process.","example":"","internal":false,"name":"jobs.<name?>.script","value":"","visible":true},{"declarations":[],"default":"","description":"Arguments passed to the main process script.","example":"","internal":false,"name":"jobs.<name?>.scriptArgs","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Service]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.service</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"jobs.<name?>.serviceConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Run the daemon as a different group.\n","example":"","internal":false,"name":"jobs.<name?>.setgid","value":"","visible":true},{"declarations":[],"default":"","description":"Run the daemon as a different user.\n","example":"","internal":false,"name":"jobs.<name?>.setuid","value":"","visible":true},{"declarations":[],"default":"","description":"Automatically start this unit at the given date/time, which\nmust be in the format described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.  This is equivalent\nto adding a corresponding timer unit with\n<option>OnCalendar</option> set to the value given here.\n","example":"","internal":false,"name":"jobs.<name?>.startAt","value":"","visible":true},{"declarations":[],"default":"","description":"The Upstart event that triggers this job to be started.  Some\nare mapped to systemd dependencies; otherwise you will get a\nwarning.  If empty, the job will not start automatically.\n","example":"","internal":false,"name":"jobs.<name?>.startOn","value":"","visible":true},{"declarations":[],"default":"","description":"If set, a changed unit is restarted by calling\n<command>systemctl stop</command> in the old configuration,\nthen <command>systemctl start</command> in the new one.\nOtherwise, it is restarted in a single step using\n<command>systemctl restart</command> in the new configuration.\nThe latter is less correct because it runs the\n<literal>ExecStop</literal> commands from the new\nconfiguration.\n","example":"","internal":false,"name":"jobs.<name?>.stopIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"Ignored; this was the Upstart event that triggers this job to be stopped.\n","example":"","internal":false,"name":"jobs.<name?>.stopOn","value":"","visible":true},{"declarations":[],"default":"","description":"Whether this job is a task rather than a service.  Tasks\nare executed only once, while services are restarted when\nthey exit.\n","example":"","internal":false,"name":"jobs.<name?>.task","value":"","visible":true},{"declarations":[],"default":"","description":"Generated definition of the systemd unit corresponding to this job.","example":"","internal":false,"name":"jobs.<name?>.unit","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"jobs.<name?>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"jobs.<name?>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"jobs.<name?>.wants","value":"","visible":true},{"declarations":["nixos/modules/config/krb5.nix"],"default":"","description":"Default realm.","example":"","internal":false,"name":"krb5.defaultRealm","value":"","visible":true},{"declarations":["nixos/modules/config/krb5.nix"],"default":"","description":"Default domain realm.","example":"","internal":false,"name":"krb5.domainRealm","value":"","visible":true},{"declarations":["nixos/modules/config/krb5.nix"],"default":"","description":"Whether to enable Kerberos V.","example":"","internal":false,"name":"krb5.enable","value":"","visible":true},{"declarations":["nixos/modules/config/krb5.nix"],"default":"","description":"Kerberos Domain Controller","example":"","internal":false,"name":"krb5.kdc","value":"","visible":true},{"declarations":["nixos/modules/config/krb5.nix"],"default":"","description":"Kerberos Admin Server","example":"","internal":false,"name":"krb5.kerberosAdminServer","value":"","visible":true},{"declarations":["nixos/modules/misc/lib.nix"],"default":"","description":"This option allows modules to define helper functions, constants, etc.\n","example":"","internal":false,"name":"lib","value":"","visible":true},{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":"","description":"Additional configurations to build.\n","example":"","internal":false,"name":"nesting.children","value":"","visible":true},{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":"","description":"Additional configurations to build based on the current\nconfiguration which is has a lower priority.\n","example":"","internal":false,"name":"nesting.clone","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"","description":"Obsolete. Use <option>networking.wireless.interfaces</option> instead.","example":"","internal":false,"name":"networking.WLANInterface","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"This option allows you to define bond devices that aggregate multiple,\nunderlying networking interfaces together. The value of this option is\nan attribute set. Each attribute specifies a bond, with the attribute\nname specifying the name of the bond's network interface\n","example":"","internal":false,"name":"networking.bonds","value":"","visible":true},{"declarations":[],"default":"","description":"The interfaces to bond together","example":"","internal":false,"name":"networking.bonds.<name>.interfaces","value":"","visible":true},{"declarations":[],"default":"","description":"Miimon is the number of millisecond in between each round of polling\nby the device driver for failed links. By default polling is not\nenabled and the driver is trusted to properly detect and handle\nfailure scenarios.\n","example":"","internal":false,"name":"networking.bonds.<name>.miimon","value":"","visible":true},{"declarations":[],"default":"","description":"The mode which the bond will be running. The default mode for\nthe bonding driver is balance-rr, optimizing for throughput.\nMore information about valid modes can be found at\nhttps://www.kernel.org/doc/Documentation/networking/bonding.txt\n","example":"","internal":false,"name":"networking.bonds.<name>.mode","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"This option allows you to define Ethernet bridge devices\nthat connect physical networks together.  The value of this\noption is an attribute set.  Each attribute specifies a\nbridge, with the attribute name specifying the name of the\nbridge's network interface.\n","example":"","internal":false,"name":"networking.bridges","value":"","visible":true},{"declarations":[],"default":"","description":"The physical network interfaces connected by the bridge.","example":"","internal":false,"name":"networking.bridges.<name>.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/connman.nix"],"default":"","description":"Whether to use ConnMan for managing your network connections.\n","example":"","internal":false,"name":"networking.connman.enable","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The default gateway.  It can be left empty if it is auto-detected through DHCP.\n","example":"","internal":false,"name":"networking.defaultGateway","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The window size of the default gateway. It limits maximal data bursts that TCP peers\nare allowed to send to us.\n","example":"","internal":false,"name":"networking.defaultGatewayWindowSize","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Password used for SMTP auth. (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE)\n","example":"","internal":false,"name":"networking.defaultMailServer.authPass","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Username used for SMTP auth. Leave blank to disable.\n","example":"","internal":false,"name":"networking.defaultMailServer.authUser","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Use the trivial Mail Transfer Agent (MTA)\n<command>ssmtp</command> package to allow programs to send\ne-mail.  If you don't want to run a “real” MTA like\n<command>sendmail</command> or <command>postfix</command> on\nyour machine, set this option to <literal>true</literal>, and\nset the option\n<option>networking.defaultMailServer.hostName</option> to the\nhost name of your preferred mail server.\n","example":"","internal":false,"name":"networking.defaultMailServer.directDelivery","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"The domain from which mail will appear to be sent.\n","example":"","internal":false,"name":"networking.defaultMailServer.domain","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"The host name of the default mail server to use to deliver\ne-mail.\n","example":"","internal":false,"name":"networking.defaultMailServer.hostName","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Whether the STARTTLS should be used to connect to the default\nmail server.  (This is needed for TLS-capable mail servers\nrunning on the default SMTP port 25.)\n","example":"","internal":false,"name":"networking.defaultMailServer.useSTARTTLS","value":"","visible":true},{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Whether TLS should be used to connect to the default mail\nserver.\n","example":"","internal":false,"name":"networking.defaultMailServer.useTLS","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":"","description":"Disable the DHCP client for any interface whose name matches\nany of the shell glob patterns in this list. The purpose of\nthis option is to blacklist virtual interfaces such as those\ncreated by Xen, libvirt, LXC, etc.\n","example":"","internal":false,"name":"networking.dhcpcd.denyInterfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":"","description":"Literal string to append to the config file generated for dhcpcd.\n","example":"","internal":false,"name":"networking.dhcpcd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":"","description":"Shell code that will be run after all other hooks. See\n`man dhcpcd-run-hooks` for details on what is possible.\n","example":"","internal":false,"name":"networking.dhcpcd.runHook","value":"","visible":true},{"declarations":["nixos/modules/config/networking.nix"],"default":"","description":"Recent versions of glibc will issue both ipv4 (A) and ipv6 (AAAA)\naddress queries at the same time, from the same port. Sometimes upstream\nrouters will systemically drop the ipv4 queries. The symptom of this problem is\nthat 'getent hosts example.com' only returns ipv6 (or perhaps only ipv4) addresses. The\nworkaround for this is to specify the option 'single-request' in\n/etc/resolv.conf. This option enables that.\n","example":"","internal":false,"name":"networking.dnsSingleRequest","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The domain.  It can be left empty if it is auto-detected through DHCP.\n","example":"","internal":false,"name":"networking.domain","value":"","visible":true},{"declarations":["nixos/modules/hardware/network/b43.nix"],"default":"","description":"Turn on this option if you want firmware for the NICs supported by the b43 module.\n","example":"","internal":false,"name":"networking.enableB43Firmware","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"Whether to enable support for IPv6.\n","example":"","internal":false,"name":"networking.enableIPv6","value":"","visible":true},{"declarations":["nixos/modules/hardware/network/intel-2100bg.nix"],"default":"","description":"Turn on this option if you want firmware for the Intel\nPRO/Wireless 2100BG to be loaded automatically.  This is\nrequired if you want to use this device.\n","example":"","internal":false,"name":"networking.enableIntel2100BGFirmware","value":"","visible":true},{"declarations":["nixos/modules/hardware/network/intel-2200bg.nix"],"default":"","description":"Turn on this option if you want firmware for the Intel\nPRO/Wireless 2200BG to be loaded automatically.  This is\nrequired if you want to use this device.\n","example":"","internal":false,"name":"networking.enableIntel2200BGFirmware","value":"","visible":true},{"declarations":["nixos/modules/hardware/network/intel-3945abg.nix"],"default":"","description":"This option enables automatic loading of the firmware for the Intel\nPRO/Wireless 3945ABG.\n","example":"","internal":false,"name":"networking.enableIntel3945ABGFirmware","value":"","visible":true},{"declarations":["nixos/modules/hardware/network/rtl8192c.nix"],"default":"","description":"Turn on this option if you want firmware for the RTL8192c (and related) NICs.\n","example":"","internal":false,"name":"networking.enableRTL8192cFirmware","value":"","visible":true},{"declarations":["nixos/modules/hardware/network/ralink.nix"],"default":"","description":"Turn on this option if you want firmware for the RT73 NIC.\n","example":"","internal":false,"name":"networking.enableRalinkFirmware","value":"","visible":true},{"declarations":["nixos/modules/config/networking.nix"],"default":"","description":"Additional entries to be appended to <filename>/etc/hosts</filename>.\n","example":"","internal":false,"name":"networking.extraHosts","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Whether to respond to incoming ICMPv4 echo requests\n(\"pings\").  ICMPv6 pings are always allowed because the\nlarger address space of IPv6 makes network scanning much\nless effective.\n","example":"","internal":false,"name":"networking.firewall.allowPing","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"A range of TCP ports on which incoming connections are\naccepted.\n","example":"","internal":false,"name":"networking.firewall.allowedTCPPortRanges","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"List of TCP ports on which incoming connections are\naccepted.\n","example":"","internal":false,"name":"networking.firewall.allowedTCPPorts","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Range of open UDP ports.\n","example":"","internal":false,"name":"networking.firewall.allowedUDPPortRanges","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"List of open UDP ports.\n","example":"","internal":false,"name":"networking.firewall.allowedUDPPorts","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Whether to auto-load connection-tracking helpers.\nSee the description at networking.firewall.connectionTrackingModules\n\n(needs kernel 3.5+)\n","example":"","internal":false,"name":"networking.firewall.autoLoadConntrackHelpers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Performs a reverse path filter test on a packet.\nIf a reply to the packet would not be sent via the same interface\nthat the packet arrived on, it is refused.\n\nIf using asymmetric routing or other complicated routing,\ndisable this setting and setup your own counter-measures.\n\n(needs kernel 3.3+)\n","example":"","internal":false,"name":"networking.firewall.checkReversePath","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"List of connection-tracking helpers that are auto-loaded.\nThe complete list of possible values is given in the example.\n\nAs helpers can pose as a security risk, it is advised to\nset this to an empty list and disable the setting\nnetworking.firewall.autoLoadConntrackHelpers\n\nLoading of helpers is recommended to be done through the new\nCT target. More info:\nhttps://home.regit.org/netfilter-en/secure-use-of-helpers/\n","example":"","internal":false,"name":"networking.firewall.connectionTrackingModules","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Whether to enable the firewall.  This is a simple stateful\nfirewall that blocks connection attempts to unauthorised TCP\nor UDP ports on this machine.  It does not affect packet\nforwarding.\n","example":"","internal":false,"name":"networking.firewall.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Additional shell commands executed as part of the firewall\ninitialisation script.  These are executed just before the\nfinal \"reject\" firewall rule is added, so they can be used\nto allow packets that would otherwise be refused.\n","example":"","internal":false,"name":"networking.firewall.extraCommands","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Whether to log rejected or dropped incoming connections.\n","example":"","internal":false,"name":"networking.firewall.logRefusedConnections","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Whether to log all rejected or dropped incoming packets.\nThis tends to give a lot of log messages, so it's mostly\nuseful for debugging.\n","example":"","internal":false,"name":"networking.firewall.logRefusedPackets","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"If <option>networking.firewall.logRefusedPackets</option>\nand this option are enabled, then only log packets\nspecifically directed at this machine, i.e., not broadcasts\nor multicasts.\n","example":"","internal":false,"name":"networking.firewall.logRefusedUnicastsOnly","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"If pings are allowed, this allows setting rate limits\non them. If non-null, this option should be in the form\nof flags like \"-limit 1/minute -limit-burst 5\"\n","example":"","internal":false,"name":"networking.firewall.pingLimit","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"If set, forbidden packets are rejected rather than dropped\n(ignored).  This means that an ICMP \"port unreachable\" error\nmessage is sent back to the client.  Rejecting packets makes\nport scanning somewhat easier.\n","example":"","internal":false,"name":"networking.firewall.rejectPackets","value":"","visible":true},{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Traffic coming in from these interfaces will be accepted\nunconditionally.\n","example":"","internal":false,"name":"networking.firewall.trustedInterfaces","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The name of the machine.  Leave it empty if you want to obtain\nit from a DHCP server (if using DHCP).\n","example":"","internal":false,"name":"networking.hostName","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ifplugd.nix"],"default":"","description":"If <literal>true</literal>, beep when an Ethernet cable is\nplugged in or unplugged.\n","example":"","internal":false,"name":"networking.interfaceMonitor.beep","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ifplugd.nix"],"default":"","description":"Shell commands to be executed when the link status of an\ninterface changes.  On invocation, the shell variable\n<varname>iface</varname> contains the name of the interface,\nwhile the variable <varname>status</varname> contains either\n<literal>up</literal> or <literal>down</literal> to indicate\nthe new status.\n","example":"","internal":false,"name":"networking.interfaceMonitor.commands","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ifplugd.nix"],"default":"","description":"If <literal>true</literal>, monitor Ethernet interfaces for\ncables being plugged in or unplugged.  When this occurs, the\ncommands specified in\n<option>networking.interfaceMonitor.commands</option> are\nexecuted.\n","example":"","internal":false,"name":"networking.interfaceMonitor.enable","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The configuration for each network interface.  If\n<option>networking.useDHCP</option> is true, then every\ninterface not listed here will be configured using DHCP.\n","example":"","internal":false,"name":"networking.interfaces","value":"","visible":true},{"declarations":[],"default":"","description":"IP address of the interface.  Leave empty to configure the\ninterface using DHCP.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.ipAddress","value":"","visible":true},{"declarations":[],"default":"","description":"IPv6 address of the interface.  Leave empty to configure the\ninterface using NDP.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.ipv6Address","value":"","visible":true},{"declarations":[],"default":"","description":"Subnet mask of the interface, specified as the number of\nbits in the prefix (<literal>64</literal>).\n","example":"","internal":false,"name":"networking.interfaces.<name?>.ipv6prefixLength","value":"","visible":true},{"declarations":[],"default":"","description":"MAC address of the interface. Leave empty to use the default.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.macAddress","value":"","visible":true},{"declarations":[],"default":"","description":"MTU size for packets leaving the interface. Leave empty to use the default.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.mtu","value":"","visible":true},{"declarations":[],"default":"","description":"Name of the interface.","example":"","internal":false,"name":"networking.interfaces.<name?>.name","value":"","visible":true},{"declarations":[],"default":"","description":"Subnet mask of the interface, specified as the number of\nbits in the prefix (<literal>24</literal>).\n","example":"","internal":false,"name":"networking.interfaces.<name?>.prefixLength","value":"","visible":true},{"declarations":[],"default":"","description":"Turn on proxy_arp for this device (and proxy_ndp for ipv6).\nThis is mainly useful for creating pseudo-bridges between a real\ninterface and a virtual network such as VPN or a virtual machine for\ninterfaces that don't support real bridging (most wlan interfaces).\nAs ARP proxying acts slightly above the link-layer, below-ip traffic\nisn't bridged, so things like DHCP won't work. The advantage above\nusing NAT lies in the fact that no IP addresses are shared, so all\nhosts are reachable/routeable.\n\nWARNING: turns on ip-routing, so if you have multiple interfaces, you\nshould think of the consequence and setup firewall rules to limit this.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.proxyARP","value":"","visible":true},{"declarations":[],"default":"","description":"Subnet mask of the interface, specified as a bitmask.\nThis is deprecated; use <option>prefixLength</option>\ninstead.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.subnetMask","value":"","visible":true},{"declarations":[],"default":"","description":"Whether this interface is virtual and should be created by tunctl.\nThis is mainly useful for creating bridges between a host a virtual\nnetwork such as VPN or a virtual machine.\n\nDefaults to tap device, unless interface contains \"tun\" in its name.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.virtual","value":"","visible":true},{"declarations":[],"default":"","description":"In case of a virtual device, the user who owns it.\n","example":"","internal":false,"name":"networking.interfaces.<name?>.virtualOwner","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"Shell commands to be executed at the end of the\n<literal>network-setup</literal> systemd service.  Note that if\nyou are using DHCP to obtain the network configuration,\ninterfaces may not be fully configured yet.\n","example":"","internal":false,"name":"networking.localCommands","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The list of nameservers.  It can be left empty if it is auto-detected through DHCP.\n","example":"","internal":false,"name":"networking.nameservers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nat.nix"],"default":"","description":"Whether to enable Network Address Translation (NAT).\n","example":"","internal":false,"name":"networking.nat.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nat.nix"],"default":"","description":"The public IP address to which packets from the local\nnetwork are to be rewritten.  If this is left empty, the\nIP address associated with the external interface will be\nused.\n","example":"","internal":false,"name":"networking.nat.externalIP","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nat.nix"],"default":"","description":"The name of the external network interface.\n","example":"","internal":false,"name":"networking.nat.externalInterface","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nat.nix"],"default":"","description":"The IP address ranges for which to perform NAT.  Packets\ncoming from these addresses (on any interface) and destined\nfor the external interface will be rewritten.\n","example":"","internal":false,"name":"networking.nat.internalIPs","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nat.nix"],"default":"","description":"The interfaces for which to perform NAT. Packets coming from\nthese interface and destined for the external interface will\nbe rewritten.\n","example":"","internal":false,"name":"networking.nat.internalInterfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":"","description":"A list of name servers that should be appended\nto the ones configured in NetworkManager or received by DHCP.\n","example":"","internal":false,"name":"networking.networkmanager.appendNameservers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":"","description":"Whether to use NetworkManager to obtain an IP address and other\nconfiguration for all network interfaces that are not manually\nconfigured. If enabled, a group <literal>networkmanager</literal>\nwill be created. Add all users that should have permission\nto change network settings to this group.\n","example":"","internal":false,"name":"networking.networkmanager.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":"","description":"A list of name servers that should be inserted before\nthe ones configured in NetworkManager or received by DHCP.\n","example":"","internal":false,"name":"networking.networkmanager.insertNameservers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":"","description":"Extra packages that provide NetworkManager plugins.\n","example":"","internal":false,"name":"networking.networkmanager.packages","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"The list of search paths used when resolving domain names.\n","example":"","internal":false,"name":"networking.search","value":"","visible":true},{"declarations":["nixos/modules/services/networking/tcpcrypt.nix"],"default":"","description":"Whether to enable opportunistic TCP encryption. If the other end\nspeaks Tcpcrypt, then your traffic will be encrypted; otherwise\nit will be sent in clear text. Thus, Tcpcrypt alone provides no\nguarantees -- it is best effort. If, however, a Tcpcrypt\nconnection is successful and any attackers that exist are\npassive, then Tcpcrypt guarantees privacy.\n","example":"","internal":false,"name":"networking.tcpcrypt.enable","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"Whether to use DHCP to obtain an IP address and other\nconfiguration for all network interfaces that are not manually\nconfigured.\n","example":"","internal":false,"name":"networking.useDHCP","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"In containers, whether to use the\n<filename>resolv.conf</filename> supplied by the host.\n","example":"","internal":false,"name":"networking.useHostResolvConf","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"Whether to assign <link\nxlink:href='http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames'>predictable\nnames to network interfaces</link>.  If enabled, interfaces\nare assigned names that contain topology information\n(e.g. <literal>wlp3s0</literal>) and thus should be stable\nacross reboots.  If disabled, names depend on the order in\nwhich interfaces are discovered by the kernel, which may\nchange randomly across reboots; for instance, you may find\n<literal>eth0</literal> and <literal>eth1</literal> flipping\nunpredictably.\n","example":"","internal":false,"name":"networking.usePredictableInterfaceNames","value":"","visible":true},{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"This option allows you to define vlan devices that tag packets\non top of a physical interface. The value of this option is an\nattribute set. Each attribute specifies a vlan, with the name\nspecifying the name of the vlan interface.\n","example":"","internal":false,"name":"networking.vlans","value":"","visible":true},{"declarations":[],"default":"","description":"The vlan identifier","example":"","internal":false,"name":"networking.vlans.<name>.id","value":"","visible":true},{"declarations":[],"default":"","description":"The interface the vlan will transmit packets through.","example":"","internal":false,"name":"networking.vlans.<name>.interface","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wicd.nix"],"default":"","description":"Whether to start <command>wicd</command>. Wired and\nwireless network configurations can then be managed by\nwicd-client.\n","example":"","internal":false,"name":"networking.wicd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"","description":"Force a specific wpa_supplicant driver.","example":"","internal":false,"name":"networking.wireless.driver","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"","description":"Whether to start <command>wpa_supplicant</command> to scan for\nand associate with wireless networks.  Note: NixOS currently\ndoes not generate <command>wpa_supplicant</command>'s\nconfiguration file, <filename>/etc/wpa_supplicant.conf</filename>.  You\nshould edit this file yourself to define wireless networks,\nWPA keys and so on (see\n<citerefentry><refentrytitle>wpa_supplicant.conf</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>).\n","example":"","internal":false,"name":"networking.wireless.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"","description":"The interfaces <command>wpa_supplicant</command> will use.  If empty, it will\nautomatically use all wireless interfaces.\n","example":"","internal":false,"name":"networking.wireless.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"","description":"Allow normal users to control wpa_supplicant through wpa_gui or wpa_cli.\nThis is useful for laptop users that switch networks a lot.\n\nWhen you want to use this, make sure /etc/wpa_supplicant.conf doesn't exist.\nIt will be created for you.\n\nCurrently it is also necessary to explicitly specify networking.wireless.interfaces.\n","example":"","internal":false,"name":"networking.wireless.userControlled.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"","description":"Members of this group can control wpa_supplicant.","example":"","internal":false,"name":"networking.wireless.userControlled.group","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"List of binary cache URLs used to obtain pre-built binaries\nof Nix packages.\n","example":"","internal":false,"name":"nix.binaryCaches","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"This option lists the machines to be used if distributed\nbuilds are enabled (see\n<option>nix.distributedBuilds</option>).  Nix will perform\nderivations on those machines via SSH by copying the inputs\nto the Nix store on the remote machine, starting the build,\nthen copying the output back to the local Nix store.  Each\nelement of the list should be an attribute set containing\nthe machine's host name (<varname>hostname</varname>), the\nuser name to be used for the SSH connection\n(<varname>sshUser</varname>), the Nix system type\n(<varname>system</varname>, e.g.,\n<literal>\"i686-linux\"</literal>), the maximum number of\njobs to be run in parallel on that machine\n(<varname>maxJobs</varname>), the path to the SSH private\nkey to be used to connect (<varname>sshKey</varname>), a\nlist of supported features of the machine\n(<varname>supportedFeatures</varname>) and a list of\nmandatory features of the machine\n(<varname>mandatoryFeatures</varname>). The SSH private key\nshould not have a passphrase, and the corresponding public\nkey should be added to\n<filename>~<replaceable>sshUser</replaceable>/authorized_keys</filename>\non the remote machine.\n","example":"","internal":false,"name":"nix.buildMachines","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Directories from the host filesystem to be included\nin the chroot.\n","example":"","internal":false,"name":"nix.chrootDirs","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Nix daemon process I/O priority. This priority propagates to build processes.\n0 is the default Unix process I/O priority, 7 is the lowest.\n","example":"","internal":false,"name":"nix.daemonIONiceLevel","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Nix daemon process priority. This priority propagates to build processes.\n0 is the default Unix process priority, 20 is the lowest.\n","example":"","internal":false,"name":"nix.daemonNiceLevel","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Whether to distribute builds to the machines listed in\n<option>nix.buildMachines</option>.\n","example":"","internal":false,"name":"nix.distributedBuilds","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Additional text appended to <filename>nix.conf</filename>.","example":"","internal":false,"name":"nix.extraOptions","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-gc.nix"],"default":"","description":"Automatically run the garbage collector at a specific time.","example":"","internal":false,"name":"nix.gc.automatic","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-gc.nix"],"default":"","description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the garbage collector will run.\n","example":"","internal":false,"name":"nix.gc.dates","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-gc.nix"],"default":"","description":"Options given to <filename>nix-collect-garbage</filename> when the\ngarbage collector is run automatically.\n","example":"","internal":false,"name":"nix.gc.options","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"\n          This option defines the maximum number of jobs that Nix will try\n          to build in parallel.  The default is 1.  You should generally\n          set it to the number of CPUs in your system (e.g., 2 on an Athlon\n          64 X2).\n        ","example":"","internal":false,"name":"nix.maxJobs","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Number of <literal>nixbld</literal> user accounts created to\nperform secure concurrent builds.  If you receive an error\nmessage saying that “all build users are currently in use”,\nyou should increase this value.\n","example":"","internal":false,"name":"nix.nrBuildUsers","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"This option specifies the Nix package instance to use throughout the system.\n","example":"","internal":false,"name":"nix.package","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"This option specifies the proxy to use for fetchurl. The real effect\nis just exporting http_proxy, https_proxy and ftp_proxy with that\nvalue.\n","example":"","internal":false,"name":"nix.proxy","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"If set, NixOS will enforce the immutability of the Nix store\nby making <filename>/nix/store</filename> a read-only bind\nmount.  Nix will automatically make the store writable when\nneeded.\n","example":"","internal":false,"name":"nix.readOnlyStore","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-ssh-serve.nix"],"default":"","description":"Whether to enable serving the nix store over ssh.","example":"","internal":false,"name":"nix.sshServe.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"List of binary cache URLs that non-root users can use (in\naddition to those specified using\n<option>nix.binaryCaches</option> by passing\n<literal>--option binary-caches</literal> to Nix commands.\n","example":"","internal":false,"name":"nix.trustedBinaryCaches","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"\n          If set, Nix will perform builds in a chroot-environment that it\n          will set up automatically for each build.  This prevents\n          impurities in builds by disallowing access to dependencies\n          outside of the Nix store.\n        ","example":"","internal":false,"name":"nix.useChroot","value":"","visible":true},{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":"","description":"The configuration of the Nix Packages collection.  (For\ndetails, see the Nixpkgs documentation.)  It allows you to set\npackage configuration options, and to override packages\nglobally through the <varname>packageOverrides</varname>\noption.  The latter is a function that takes as an argument\nthe <emphasis>original</emphasis> Nixpkgs, and must evaluate\nto a set of new or overridden packages.\n","example":"","internal":false,"name":"nixpkgs.config","value":"","visible":true},{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":"","description":"Specifies the Nix platform type for which NixOS should be built.\nIf unset, it defaults to the platform type of your host system.\nSpecifying this option is useful when doing distributed\nmulti-platform deployment, or when building virtual machines.\n","example":"","internal":false,"name":"nixpkgs.system","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"Enables support for Power Devices, such as Uninterruptible Power\nSupplies, Power Distribution Units and Solar Controllers.\n","example":"","internal":false,"name":"power.ups.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"This can be set as a global variable above your first UPS\ndefinition and it can also be set in a UPS section.  This value\ncontrols how long upsdrvctl will wait for the driver to finish\nstarting.  This keeps your system from getting stuck due to a\nbroken driver or UPS.\n","example":"","internal":false,"name":"power.ups.maxStartDelay","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"The MODE determines which part of the NUT is to be started, and\nwhich configuration files must be modified.\n\nThe values of MODE can be:\n\n- none: NUT is not configured, or use the Integrated Power\n  Management, or use some external system to startup NUT\n  components. So nothing is to be started.\n\n- standalone: This mode address a local only configuration, with 1\n  UPS protecting the local system. This implies to start the 3 NUT\n  layers (driver, upsd and upsmon) and the matching configuration\n  files. This mode can also address UPS redundancy.\n\n- netserver: same as for the standalone configuration, but also\n  need some more ACLs and possibly a specific LISTEN directive in\n  upsd.conf.  Since this MODE is opened to the network, a special\n  care should be applied to security concerns.\n\n- netclient: this mode only requires upsmon.\n","example":"","internal":false,"name":"power.ups.mode","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"File which contains the rules to handle UPS events.\n","example":"","internal":false,"name":"power.ups.schedulerRules","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"This is where you configure all the UPSes that this system will be\nmonitoring directly.  These are usually attached to serial ports,\nbut USB devices are also supported.\n","example":"","internal":false,"name":"power.ups.ups","value":"","visible":true},{"declarations":[],"default":"","description":"Description of the UPS.\n","example":"","internal":false,"name":"power.ups.ups.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"List of configuration directives for this UPS.\n","example":"","internal":false,"name":"power.ups.ups.<name>.directives","value":"","visible":true},{"declarations":[],"default":"","description":"Specify the program to run to talk to this UPS.  apcsmart,\nbestups, and sec are some examples.\n","example":"","internal":false,"name":"power.ups.ups.<name>.driver","value":"","visible":true},{"declarations":[],"default":"","description":"This can be set as a global variable above your first UPS\ndefinition and it can also be set in a UPS section.  This value\ncontrols how long upsdrvctl will wait for the driver to finish\nstarting.  This keeps your system from getting stuck due to a\nbroken driver or UPS.\n","example":"","internal":false,"name":"power.ups.ups.<name>.maxStartDelay","value":"","visible":true},{"declarations":[],"default":"","description":"The serial port to which your UPS is connected.  /dev/ttyS0 is\nusually the first port on Linux boxes, for example.\n","example":"","internal":false,"name":"power.ups.ups.<name>.port","value":"","visible":true},{"declarations":[],"default":"","description":"When you have multiple UPSes on your system, you usually need to\nturn them off in a certain order.  upsdrvctl shuts down all the\n0s, then the 1s, 2s, and so on.  To exclude a UPS from the\nshutdown sequence, set this to -1.\n","example":"","internal":false,"name":"power.ups.ups.<name>.shutdownOrder","value":"","visible":true},{"declarations":[],"default":"","description":"Lines which would be added inside ups.conf for handling this UPS.\n","example":"","internal":false,"name":"power.ups.ups.<name>.summary","value":"","visible":true},{"declarations":["nixos/modules/tasks/cpu-freq.nix"],"default":"","description":"Configure the governor used to regulate the frequence of the\navailable CPUs. By default, the kernel configures the\non-demand governor.\n","example":"","internal":false,"name":"powerManagement.cpuFreqGovernor","value":"","visible":true},{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Whether to enable power management.  This includes support\nfor suspend-to-RAM and powersave features on laptops.\n","example":"","internal":false,"name":"powerManagement.enable","value":"","visible":true},{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Commands executed when the machine powers down.  That is,\nthey're executed both when the system shuts down and when\nit goes to suspend or hibernation.\n","example":"","internal":false,"name":"powerManagement.powerDownCommands","value":"","visible":true},{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Commands executed when the machine powers up.  That is,\nthey're executed both when the system first boots and when\nit resumes from suspend or hibernation.\n","example":"","internal":false,"name":"powerManagement.powerUpCommands","value":"","visible":true},{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Commands executed after the system resumes from suspend-to-RAM.","example":"","internal":false,"name":"powerManagement.resumeCommands","value":"","visible":true},{"declarations":["nixos/modules/tasks/scsi-link-power-management.nix"],"default":"","description":"Configure the SCSI link power management policy. By default,\nthe kernel configures \"max_performance\".\n","example":"","internal":false,"name":"powerManagement.scsiLinkPolicy","value":"","visible":true},{"declarations":["nixos/modules/programs/atop.nix"],"default":"","description":"Parameters to be written to <filename>/etc/atoprc</filename>\n","example":"","internal":false,"name":"programs.atop.settings","value":"","visible":true},{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Enable Bash completion for all interactive bash shells.\n","example":"","internal":false,"name":"programs.bash.enableCompletion","value":"","visible":true},{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code called during interactive bash shell initialisation.\n","example":"","internal":false,"name":"programs.bash.interactiveShellInit","value":"","visible":true},{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code called during login bash shell initialisation.\n","example":"","internal":false,"name":"programs.bash.loginShellInit","value":"","visible":true},{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code used to initialise the bash prompt.\n","example":"","internal":false,"name":"programs.bash.promptInit","value":"","visible":true},{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Set of aliases for bash shell. See <option>environment.shellAliases</option>\nfor an option format description.\n","example":"","internal":false,"name":"programs.bash.shellAliases","value":"","visible":true},{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code called during bash shell initialisation.\n","example":"","internal":false,"name":"programs.bash.shellInit","value":"","visible":true},{"declarations":["nixos/modules/programs/screen.nix"],"default":"","description":"The contents of /etc/screenrc file.\n","example":"","internal":false,"name":"programs.screen.screenrc","value":"","visible":true},{"declarations":["nixos/modules/programs/ssh.nix"],"default":"","description":"Extra configuration text appended to <filename>ssh_config</filename>.\nSee <citerefentry><refentrytitle>ssh_config</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor help.\n","example":"","internal":false,"name":"programs.ssh.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/programs/ssh.nix"],"default":"","description":"Whether to request X11 forwarding on outgoing connections by default.\nThis is useful for running graphical programs on the remote machine and have them display to your local X11 server.\nHistorically, this value has depended on the value used by the local sshd daemon, but there really isn't a relation between the two.\nNote: there are some security risks to forwarding an X11 connection.\nNixOS's X server is built with the SECURITY extension, which prevents some obvious attacks.\nTo enable or disable forwarding on a per-connection basis, see the -X and -x options to ssh.\nThe -Y option to ssh enables trusted forwarding, which bypasses the SECURITY extension.\n","example":"","internal":false,"name":"programs.ssh.forwardX11","value":"","visible":true},{"declarations":["nixos/modules/programs/ssh.nix"],"default":"","description":"Whether to set the path to <command>xauth</command> for X11-forwarded connections.\nThis causes a dependency on X11 packages.\n","example":"","internal":false,"name":"programs.ssh.setXAuthLocation","value":"","visible":true},{"declarations":["nixos/modules/programs/ssh.nix"],"default":"","description":"Whether to start the OpenSSH agent when you log in.  The OpenSSH agent\nremembers private keys for you so that you don't have to type in\npassphrases every time you make an SSH connection.  Use\n<command>ssh-add</command> to add a key to the agent.\n","example":"","internal":false,"name":"programs.ssh.startAgent","value":"","visible":true},{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Whenever to configure Zsh as an interactive shell.\n","example":"","internal":false,"name":"programs.zsh.enable","value":"","visible":true},{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code called during interactive zsh shell initialisation.\n","example":"","internal":false,"name":"programs.zsh.interactiveShellInit","value":"","visible":true},{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code called during zsh login shell initialisation.\n","example":"","internal":false,"name":"programs.zsh.loginShellInit","value":"","visible":true},{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code used to initialise the zsh prompt.\n","example":"","internal":false,"name":"programs.zsh.promptInit","value":"","visible":true},{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Set of aliases for zsh shell. See <option>environment.shellAliases</option>\nfor an option format description.\n","example":"","internal":false,"name":"programs.zsh.shellAliases","value":"","visible":true},{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code called during zsh shell initialisation.\n","example":"","internal":false,"name":"programs.zsh.shellInit","value":"","visible":true},{"declarations":["nixos/modules/security/apparmor-suid.nix"],"default":"","description":"Install AppArmor profiles for commonly-used SUID application\nto mitigate potential privilege escalation attacks due to bugs\nin such applications.\n\nCurrently available profiles: ping\n","example":"","internal":false,"name":"security.apparmor.confineSUIDApplications","value":"","visible":true},{"declarations":["nixos/modules/security/apparmor.nix"],"default":"","description":"Enable the AppArmor Mandatory Access Control system.","example":"","internal":false,"name":"security.apparmor.enable","value":"","visible":true},{"declarations":["nixos/modules/security/apparmor.nix"],"default":"","description":"List of files containing AppArmor profiles.","example":"","internal":false,"name":"security.apparmor.profiles","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Look for factor selection or passcode in the\n<literal>$DUO_PASSCODE</literal> environment variable before\nprompting the user for input.\n\nWhen $DUO_PASSCODE is non-empty, it will override\nautopush. The SSH client will need SendEnv DUO_PASSCODE in\nits configuration, and the SSH server will similarily need\nAcceptEnv DUO_PASSCODE.\n","example":"","internal":false,"name":"security.duosec.acceptEnvFactor","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"By default, when SSH forwarding, enabling Duo Security will\ndisable TCP forwarding. By enabling this, you potentially\nundermine some of the SSH based login security. Note this is\nnot needed if you use PAM.\n","example":"","internal":false,"name":"security.duosec.allowTcpForwarding","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"If <literal>true</literal>, Duo Unix will automatically send\na push login request to the user’s phone, falling back on a\nphone call if push is unavailable. If\n<literal>false</literal>, the user will be prompted to\nchoose an authentication method. When configured with\n<literal>autopush = yes</literal>, we recommend setting\n<literal>prompts = 1</literal>.\n","example":"","internal":false,"name":"security.duosec.autopush","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"On service or configuration errors that prevent Duo\nauthentication, fail \"safe\" (allow access) or \"secure\" (deny\naccess). The default is \"safe\".\n","example":"","internal":false,"name":"security.duosec.failmode","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Duo Unix reports the IP address of the authorizing user, for\nthe purposes of authorization and whitelisting. If Duo Unix\ncannot detect the IP address of the client, setting\n<literal>fallbackLocalIP = yes</literal> will cause Duo Unix\nto send the IP address of the server it is running on.\n\nIf you are using IP whitelisting, enabling this option could\ncause unauthorized logins if the local IP is listed in the\nwhitelist.\n","example":"","internal":false,"name":"security.duosec.fallbackLocalIP","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Use Duo authentication for users only in this group.","example":"","internal":false,"name":"security.duosec.group","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Duo API hostname.","example":"","internal":false,"name":"security.duosec.host","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Integration key.","example":"","internal":false,"name":"security.duosec.ikey","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Print the contents of <literal>/etc/motd</literal> to screen\nafter a succesful login.\n","example":"","internal":false,"name":"security.duosec.motd","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"If enabled, protect logins with Duo Security using PAM support.","example":"","internal":false,"name":"security.duosec.pam.enable","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"If a user fails to authenticate with a second factor, Duo\nUnix will prompt the user to authenticate again. This option\nsets the maximum number of prompts that Duo Unix will\ndisplay before denying access. Must be 1, 2, or 3. Default\nis 3.\n\nFor example, when <literal>prompts = 1</literal>, the user\nwill have to successfully authenticate on the first prompt,\nwhereas if <literal>prompts = 2</literal>, if the user\nenters incorrect information at the initial prompt, he/she\nwill be prompted to authenticate again.\n\nWhen configured with <literal>autopush = true</literal>, we\nrecommend setting <literal>prompts = 1</literal>.\n","example":"","internal":false,"name":"security.duosec.prompts","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Include information such as the command to be executed in\nthe Duo Push message.\n","example":"","internal":false,"name":"security.duosec.pushinfo","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Secret key.","example":"","internal":false,"name":"security.duosec.skey","value":"","visible":true},{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"If enabled, protect SSH logins with Duo Security.","example":"","internal":false,"name":"security.duosec.ssh.enable","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"If true, then set <literal>GRKERN_CHROOT_CHMOD\ny</literal>. If enabled, this denies processes inside a\nchroot from setting the suid or sgid bits using\n<literal>chmod</literal> or <literal>fchmod</literal>.\n\nBy default this protection is disabled - it makes it\nimpossible to use Nix to build software on your system,\nwhich is what most users want.\n\nIf you are using NixOps to deploy your software to a\nremote machine, you're encouraged to enable this as you\nwon't need to compile code.\n","example":"","internal":false,"name":"security.grsecurity.config.denyChrootChmod","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"If true, then set <literal>GRKERN_NO_RBAC\ny</literal>. This disables the\n<literal>/dev/grsec</literal> device, which in turn\ndisables the RBAC system (and <literal>gradm</literal>).\n","example":"","internal":false,"name":"security.grsecurity.config.disableRBAC","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"grsecurity hardware virtualisation configuration. Set to\n<literal>true</literal> if your machine supports hardware\naccelerated virtualisation.\n","example":"","internal":false,"name":"security.grsecurity.config.hardwareVirtualisation","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"Extra kernel configuration parameters.","example":"","internal":false,"name":"security.grsecurity.config.kernelExtraConfig","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"grsecurity configuration mode. This specifies whether\ngrsecurity is auto-configured or otherwise completely\nmanually configured. Can either by\n<literal>custom</literal> or <literal>auto</literal>.\n\n<literal>auto</literal> is recommended.\n","example":"","internal":false,"name":"security.grsecurity.config.mode","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"grsecurity configuration priority. This specifies whether\nthe kernel configuration should emphasize speed or\nsecurity. Can either by <literal>security</literal> or\n<literal>performance</literal>.\n","example":"","internal":false,"name":"security.grsecurity.config.priority","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"If true, then set <literal>GRKERN_PROC_USER\ny</literal>. This restricts non-root users to only viewing\ntheir own processes and restricts network-related\ninformation, kernel symbols, and module information.\n","example":"","internal":false,"name":"security.grsecurity.config.restrictProc","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"If true, then set <literal>GRKERN_PROC_USERGROUP\ny</literal>. This is similar to\n<literal>restrictProc</literal> except it allows a special\ngroup (specified by <literal>unrestrictProcGid</literal>)\nto still access otherwise classified information in\n<literal>/proc</literal>.\n","example":"","internal":false,"name":"security.grsecurity.config.restrictProcWithGroup","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"If true, then set <literal>GRKERN_SYSCTL y</literal>. If\nenabled then grsecurity can be controlled using sysctl\n(and turned off). You are advised to *never* enable this,\nbut if you do, make sure to always set the sysctl\n<literal>kernel.grsecurity.grsec_lock</literal> to\nnon-zero as soon as all sysctl options are set. *THIS IS\nEXTREMELY IMPORTANT*!\n\nIf disabled, this also turns off the\n<literal>systemd-sysctl</literal> service.\n","example":"","internal":false,"name":"security.grsecurity.config.sysctl","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"grsecurity system configuration. This specifies whether\nthe kernel configuration should be suitable for a Desktop\nor a Server. Can either by <literal>server</literal> or\n<literal>desktop</literal>.\n","example":"","internal":false,"name":"security.grsecurity.config.system","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"If set, specifies a GID which is exempt from\n<literal>/proc</literal> restrictions (set by\n<literal>GRKERN_PROC_USERGROUP</literal>). By default,\nthis is set to the GID for <literal>grsecurity</literal>,\na predefined NixOS group, which the\n<literal>root</literal> account is a member of. You may\nconveniently add other users to this group if you need\naccess to <literal>/proc</literal>\n","example":"","internal":false,"name":"security.grsecurity.config.unrestrictProcGid","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"Use verbose version in kernel localversion.","example":"","internal":false,"name":"security.grsecurity.config.verboseVersion","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"grsecurity virtualisation configuration. This specifies\nthe virtualisation role of the machine - that is, whether\nit will be a virtual machine guest, a virtual machine\nhost, or neither. Can be one of <literal>none</literal>,\n<literal>host</literal>, or <literal>guest</literal>.\n","example":"","internal":false,"name":"security.grsecurity.config.virtualisationConfig","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"grsecurity virtualisation software. Set this to the\nspecified virtual machine technology if the machine is\nrunning as a guest, or a host.\n\nCan be one of <literal>kvm</literal>,\n<literal>xen</literal>, <literal>vmware</literal> or\n<literal>virtualbox</literal>.\n","example":"","internal":false,"name":"security.grsecurity.config.virtualisationSoftware","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"Enable grsecurity support. This enables advanced exploit\nhardening for the Linux kernel, and adds support for\nadministrative Role-Based Acess Control (RBAC) via\n<literal>gradm</literal>. It also includes traditional\nutilities for PaX.\n","example":"","internal":false,"name":"security.grsecurity.enable","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"Enable the stable grsecurity patch, based on Linux 3.2.\n","example":"","internal":false,"name":"security.grsecurity.stable","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"Enable the testing grsecurity patch, based on Linux 3.13.\n","example":"","internal":false,"name":"security.grsecurity.testing","value":"","visible":true},{"declarations":["nixos/modules/security/grsecurity.nix"],"default":"","description":"Enable the stable grsecurity/vserver patches, based on Linux 3.2.\n","example":"","internal":false,"name":"security.grsecurity.vserver","value":"","visible":true},{"declarations":["nixos/modules/config/users-groups.nix"],"default":"","description":"The (hashed) password for the root account set on initial\ninstallation. The empty string denotes that root can login\nlocally without a password (but not via remote services such\nas SSH, or indirectly via <command>su</command> or\n<command>sudo</command>). The string <literal>!</literal>\nprevents root from logging in using a password.\nNote that setting this option sets\n<literal>users.extraUsers.root.hashedPassword</literal>.\nAlso, if <literal>users.mutableUsers</literal> is false\nyou cannot change the root password manually, so in that case\nthe name of this option is a bit misleading, since it will define\nthe root password beyond the user initialisation phase.\n","example":"","internal":false,"name":"security.initialRootPassword","value":"","visible":true},{"declarations":["nixos/modules/security/pam.nix"],"default":"","description":"Enable the OTPW (one-time password) PAM module.\n","example":"","internal":false,"name":"security.pam.enableOTPW","value":"","visible":true},{"declarations":["nixos/modules/security/pam.nix"],"default":"","description":"Enable sudo logins if the user's SSH agent provides a key\npresent in <filename>~/.ssh/authorized_keys</filename>.\nThis allows machines to exclusively use SSH keys instead of\npasswords.\n","example":"","internal":false,"name":"security.pam.enableSSHAgentAuth","value":"","visible":true},{"declarations":["nixos/modules/security/pam.nix"],"default":"","description":"Define resource limits that should apply to users or groups.\n         Each item in the list should be an attribute set with a\n         <varname>domain</varname>, <varname>type</varname>,\n         <varname>item</varname>, and <varname>value</varname>\n         attribute.  The syntax and semantics of these attributes\n         must be that described in the limits.conf(5) man page.\n","example":"","internal":false,"name":"security.pam.loginLimits","value":"","visible":true},{"declarations":["nixos/modules/security/pam.nix"],"default":"","description":"This option defines the PAM services.  A service typically\ncorresponds to a program that uses PAM,\ne.g. <command>login</command> or <command>passwd</command>.\nEach attribute of this set defines a PAM service, with the attribute name\ndefining the name of the service.\n","example":"","internal":false,"name":"security.pam.services","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to allow logging into accounts that have no password\nset (i.e., have an empty password field in\n<filename>/etc/passwd</filename> or\n<filename>/etc/group</filename>).  This does not enable\nlogging into disabled accounts (i.e., that have the password\nfield set to <literal>!</literal>).  Note that regardless of\nwhat the pam_unix documentation says, accounts with hashed\nempty passwords are always allowed to log in.\n","example":"","internal":false,"name":"security.pam.services.<name?>.allowNullPassword","value":"","visible":true},{"declarations":[],"default":"","description":"Whether X authentication keys should be passed from the\ncalling user to the target user (e.g. for\n<command>su</command>)\n","example":"","internal":false,"name":"security.pam.services.<name?>.forwardXAuth","value":"","visible":true},{"declarations":[],"default":"","description":"Attribute set describing resource limits.  Defaults to the\nvalue of <option>security.pam.loginLimits</option>.\n","example":"","internal":false,"name":"security.pam.services.<name?>.limits","value":"","visible":true},{"declarations":[],"default":"","description":"Name of the PAM service.","example":"","internal":false,"name":"security.pam.services.<name?>.name","value":"","visible":true},{"declarations":[],"default":"","description":"If set, the OTPW system will be used (if\n<filename>~/.otpw</filename> exists).\n","example":"","internal":false,"name":"security.pam.services.<name?>.otpwAuth","value":"","visible":true},{"declarations":[],"default":"","description":"If set, root doesn't need to authenticate (e.g. for the\n<command>useradd</command> service).\n","example":"","internal":false,"name":"security.pam.services.<name?>.rootOK","value":"","visible":true},{"declarations":[],"default":"","description":"Set the login uid of the process\n(<filename>/proc/self/loginuid</filename>) for auditing\npurposes.  The login uid is only set by ‘entry points’ like\n<command>login</command> and <command>sshd</command>, not by\ncommands like <command>sudo</command>.\n","example":"","internal":false,"name":"security.pam.services.<name?>.setLoginUid","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to show the message of the day.","example":"","internal":false,"name":"security.pam.services.<name?>.showMotd","value":"","visible":true},{"declarations":[],"default":"","description":"If set, the calling user's SSH agent is used to authenticate\nagainst the keys in the calling user's\n<filename>~/.ssh/authorized_keys</filename>.  This is useful\nfor <command>sudo</command> on password-less remote systems.\n","example":"","internal":false,"name":"security.pam.services.<name?>.sshAgentAuth","value":"","visible":true},{"declarations":[],"default":"","description":"If set, the service will register a new session with\nsystemd's login manager.  For local sessions, this will give\nthe user access to audio devices, CD-ROM drives.  In the\ndefault PolicyKit configuration, it also allows the user to\nreboot the system.\n","example":"","internal":false,"name":"security.pam.services.<name?>.startSession","value":"","visible":true},{"declarations":[],"default":"","description":"Contents of the PAM service file.","example":"","internal":false,"name":"security.pam.services.<name?>.text","value":"","visible":true},{"declarations":[],"default":"","description":"Whether users can log in with passwords defined in\n<filename>/etc/shadow</filename>.\n","example":"","internal":false,"name":"security.pam.services.<name?>.unixAuth","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to update <filename>/var/log/wtmp</filename>.","example":"","internal":false,"name":"security.pam.services.<name?>.updateWtmp","value":"","visible":true},{"declarations":[],"default":"","description":"If set, users listed in\n<filename>/etc/pamusb.conf</filename> are able to log in\nwith the associated USB key.\n","example":"","internal":false,"name":"security.pam.services.<name?>.usbAuth","value":"","visible":true},{"declarations":["nixos/modules/security/pam_usb.nix"],"default":"","description":"Enable USB login for all login systems that support it.  For\nmore information, visit <link\nxlink:href=\"http://pamusb.org/doc/quickstart#setting_up\" />.\n","example":"","internal":false,"name":"security.pam.usb.enable","value":"","visible":true},{"declarations":["nixos/modules/security/polkit.nix"],"default":"","description":"Specifies which users are considered “administrators”, for those\nactions that require the user to authenticate as an\nadministrator (i.e. have an <literal>auth_admin</literal>\nvalue).  By default, this is the <literal>root</literal>\nuser and all users in the <literal>wheel</literal> group.\n","example":"","internal":false,"name":"security.polkit.adminIdentities","value":"","visible":true},{"declarations":["nixos/modules/security/polkit.nix"],"default":"","description":"Whether to enable PolKit.","example":"","internal":false,"name":"security.polkit.enable","value":"","visible":true},{"declarations":["nixos/modules/security/polkit.nix"],"default":"","description":"Any polkit rules to be added to config (in JavaScript ;-). See:\nhttp://www.freedesktop.org/software/polkit/docs/latest/polkit.8.html#polkit-rules\n","example":"","internal":false,"name":"security.polkit.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/security/rngd.nix"],"default":"","description":"Whether to enable the rng daemon, which adds entropy from\nhardware sources of randomness to the kernel entropy pool when\navailable.\n","example":"","internal":false,"name":"security.rngd.enable","value":"","visible":true},{"declarations":["nixos/modules/security/rtkit.nix"],"default":"","description":"Whether to enable the RealtimeKit system service, which hands\nout realtime scheduling priority to user processes on\ndemand. For example, the PulseAudio server uses this to\nacquire realtime priority.\n","example":"","internal":false,"name":"security.rtkit.enable","value":"","visible":true},{"declarations":["nixos/modules/security/setuid-wrappers.nix"],"default":"","description":"This option allows the ownership and permissions on the setuid\nwrappers for specific programs to be overridden from the\ndefault (setuid root, but not setgid root).\n","example":"","internal":false,"name":"security.setuidOwners","value":"","visible":true},{"declarations":["nixos/modules/security/setuid-wrappers.nix"],"default":"","description":"The Nix store cannot contain setuid/setgid programs directly.\nFor this reason, NixOS can automatically generate wrapper\nprograms that have the necessary privileges.  This option\nlists the names of programs in the system environment for\nwhich setuid root wrappers should be created.\n","example":"","internal":false,"name":"security.setuidPrograms","value":"","visible":true},{"declarations":["nixos/modules/security/sudo.nix"],"default":"","description":"This string contains the contents of the\n<filename>sudoers</filename> file.\n","example":"","internal":false,"name":"security.sudo.configFile","value":"","visible":true},{"declarations":["nixos/modules/security/sudo.nix"],"default":"","description":"Whether to enable the <command>sudo</command> command, which\nallows non-root users to execute commands as root.\n","example":"","internal":false,"name":"security.sudo.enable","value":"","visible":true},{"declarations":["nixos/modules/security/sudo.nix"],"default":"","description":"Whether users of the <code>wheel</code> group can execute\ncommands as super user without entering a password.\n","example":"","internal":false,"name":"security.sudo.wheelNeedsPassword","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/accountservice.nix"],"default":"","description":"Whether to enable AccountsService, a DBus service for accessing\nthe list of user accounts and information attached to those accounts.\n","example":"","internal":false,"name":"services.accounts-daemon.enable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Shell commands to execute on an ac_adapter.* event.","example":"","internal":false,"name":"services.acpid.acEventCommands","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Whether to enable the ACPI daemon.","example":"","internal":false,"name":"services.acpid.enable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Shell commands to execute on a button/lid.* event.","example":"","internal":false,"name":"services.acpid.lidEventCommands","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Shell commands to execute on a button/power.* event.","example":"","internal":false,"name":"services.acpid.powerEventCommands","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"The base directory where ActiveMQ stores its persistent data and logs.\nThis will be overridden if you set \"activemq.base\" and \"activemq.data\"\nin the <literal>javaProperties</literal> option. You can also override\nthis in activemq.xml.\n","example":"","internal":false,"name":"services.activemq.baseDir","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"The base directory for ActiveMQ's configuration.\nBy default, this directory is searched for a file named activemq.xml,\nwhich should contain the configuration for the broker service.\n","example":"","internal":false,"name":"services.activemq.configurationDir","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"The URI that is passed along to the BrokerFactory to\nset up the configuration of the ActiveMQ broker service.\nYou should not need to change this. For custom configuration,\nset the <literal>configurationDir</literal> instead, and create\nan activemq.xml configuration file in it.\n","example":"","internal":false,"name":"services.activemq.configurationURI","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"Enable the Apache ActiveMQ message broker service.\n","example":"","internal":false,"name":"services.activemq.enable","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"Add extra options here that you want to be sent to the\nJava runtime when the broker service is started.\n","example":"","internal":false,"name":"services.activemq.extraJavaOptions","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"Specifies Java properties that are sent to the ActiveMQ\nbroker service with the \"-D\" option. You can set properties\nhere to change the behaviour and configuration of the broker.\nAll essential properties that are not set here are automatically\ngiven reasonable defaults.\n","example":"","internal":false,"name":"services.activemq.javaProperties","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"IP/Hostname for Director to connect with bconsole.\n","example":"","internal":false,"name":"services.almir.director_address","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Name of the Director to connect with bconsole.\n","example":"","internal":false,"name":"services.almir.director_name","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Password for Director to connect with bconsole.\n","example":"","internal":false,"name":"services.almir.director_password","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Port for Director to connect with bconsole.\n","example":"","internal":false,"name":"services.almir.director_port","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Enable Almir web server. Also configures postgresql database and installs bacula.\n","example":"","internal":false,"name":"services.almir.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Port for Almir web server to listen on.\n","example":"","internal":false,"name":"services.almir.port","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Define SQL database connection to bacula catalog as specified in http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\n","example":"","internal":false,"name":"services.almir.sqlalchemy_engine_url","value":"","visible":true},{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"","description":"Timezone as specified in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n","example":"","internal":false,"name":"services.almir.timezone","value":"","visible":true},{"declarations":["nixos/modules/services/networking/amuled.nix"],"default":"","description":"The directory holding configuration, incoming and temporary files.\n","example":"","internal":false,"name":"services.amule.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/amuled.nix"],"default":"","description":"Whether to run the AMule daemon. You need to manually run \"amuled --ec-config\" to configure the service for the first time.\n","example":"","internal":false,"name":"services.amule.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/amuled.nix"],"default":"","description":"The user the AMule daemon should run as.\n","example":"","internal":false,"name":"services.amule.user","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/apcupsd.nix"],"default":"","description":"Contents of the runtime configuration file, apcupsd.conf. The default\nsettings makes apcupsd autodetect USB UPSes, limit network access to\nlocalhost and shutdown the system when the battery level is below 50\npercent, or when the UPS has calculated that it has 5 minutes or less\nof remaining power-on time. See man apcupsd.conf for details.\n","example":"","internal":false,"name":"services.apcupsd.configText","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/apcupsd.nix"],"default":"","description":"Whether to enable the APC UPS daemon. apcupsd monitors your UPS and\npermits orderly shutdown of your computer in the event of a power\nfailure. User manual: http://www.apcupsd.com/manual/manual.html.\nNote that apcupsd runs as root (to allow shutdown of computer).\nYou can check the status of your UPS with the \"apcaccess\" command.\n","example":"","internal":false,"name":"services.apcupsd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/apcupsd.nix"],"default":"","description":"Each attribute in this option names an apcupsd event and the string\nvalue it contains will be executed in a shell, in response to that\nevent (prior to the default action). See \"man apccontrol\" for the\nlist of events and what they represent.\n\nA hook script can stop apccontrol from doing its default action by\nexiting with value 99. Do not do this unless you know what you're\ndoing.\n","example":"","internal":false,"name":"services.apcupsd.hooks","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/atd.nix"],"default":"","description":"Whether to make <filename>/var/spool/at{jobs,spool}</filename>\nwriteable by everyone (and sticky).  This is normally not\nneeded since the <command>at</command> commands are\nsetuid/setgid <literal>atd</literal>.\n","example":"","internal":false,"name":"services.atd.allowEveryone","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/atd.nix"],"default":"","description":"Whether to enable the <command>at</command> daemon, a command scheduler.\n","example":"","internal":false,"name":"services.atd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"List of non-local DNS domains to be browsed.\n","example":"","internal":false,"name":"services.avahi.browseDomains","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Whether to run the Avahi daemon, which allows Avahi clients\nto use Avahi's service discovery facilities and also allows\nthe local machine to advertise its presence and services\n(through the mDNS responder implemented by `avahi-daemon').\n","example":"","internal":false,"name":"services.avahi.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Host name advertised on the LAN. If not set, avahi will use the value\nof config.networking.hostName.\n","example":"","internal":false,"name":"services.avahi.hostName","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Whether to use IPv4","example":"","internal":false,"name":"services.avahi.ipv4","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Whether to use IPv6","example":"","internal":false,"name":"services.avahi.ipv6","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Whether to enable the mDNS NSS (Name Service Switch) plug-in.\nEnabling it allows applications to resolve names in the `.local'\ndomain by transparently querying the Avahi daemon.\n","example":"","internal":false,"name":"services.avahi.nssmdns","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Whether to allow publishing.","example":"","internal":false,"name":"services.avahi.publishing","value":"","visible":true},{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"","description":"Whether to enable wide-area service discovery.","example":"","internal":false,"name":"services.avahi.wideArea","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Whether to enable Bacula Director Daemon.\n","example":"","internal":false,"name":"services.bacula-dir.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration for Bacula Director Daemon.\n","example":"","internal":false,"name":"services.bacula-dir.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Director directive.\n","example":"","internal":false,"name":"services.bacula-dir.extraDirectorConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Messages directive.\n","example":"","internal":false,"name":"services.bacula-dir.extraMessagesConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"The director name used by the system administrator. This directive is required.\n","example":"","internal":false,"name":"services.bacula-dir.name","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Specifies the password that must be supplied for a Director.\n","example":"","internal":false,"name":"services.bacula-dir.password","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Specify the port (a positive integer) on which the Director daemon will listen for Bacula Console connections. This same port number must be specified in the Director resource of the Console configuration file. The default is 9101, so normally this directive need not be specified. This directive should not be used if you specify DirAddresses (N.B plural) directive.\n","example":"","internal":false,"name":"services.bacula-dir.port","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"This option defines director resources in Bacula File Daemon.\n","example":"","internal":false,"name":"services.bacula-fd.director","value":"","visible":true},{"declarations":[],"default":"","description":"If Monitor is set to no (default), this director will have full \n","example":"","internal":false,"name":"services.bacula-fd.director.<name>.monitor","value":"","visible":true},{"declarations":[],"default":"","description":"Specifies the password that must be supplied for a Director to b\n","example":"","internal":false,"name":"services.bacula-fd.director.<name>.password","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Whether to enable Bacula File Daemon.\n","example":"","internal":false,"name":"services.bacula-fd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Client directive.\n","example":"","internal":false,"name":"services.bacula-fd.extraClientConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Messages directive.\n","example":"","internal":false,"name":"services.bacula-fd.extraMessagesConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"\tThe client name that must be used by the Director when connecting. Generally, it is a good idea to use a name related to the machine so that error messages can be easily identified if you have multiple Clients. This directive is required.\n","example":"","internal":false,"name":"services.bacula-fd.name","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"\tThis specifies the port number on which the Client listens for Director connections. It must agree with the FDPort specified in the Client resource of the Director's configuration file. The default is 9102.\n","example":"","internal":false,"name":"services.bacula-fd.port","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"This option defines Device resources in Bacula Storage Daemon.\n","example":"","internal":false,"name":"services.bacula-sd.device","value":"","visible":true},{"declarations":[],"default":"","description":"The specified name-string gives the system file name of the storage device managed by this storage daemon. This will usually be the device file name of a removable storage device (tape drive), for example \" /dev/nst0\" or \"/dev/rmt/0mbn\". For a DVD-writer, it will be for example /dev/hdc. It may also be a directory name if you are archiving to disk storage.\n","example":"","internal":false,"name":"services.bacula-sd.device.<name>.archiveDevice","value":"","visible":true},{"declarations":[],"default":"","description":"Extra configuration to be passed in Device directive.\n","example":"","internal":false,"name":"services.bacula-sd.device.<name>.extraDeviceConfig","value":"","visible":true},{"declarations":[],"default":"","description":"The specified name-string names the type of media supported by this device, for example, \"DLT7000\". Media type names are arbitrary in that you set them to anything you want, but they must be known to the volume database to keep track of which storage daemons can read which volumes. In general, each different storage type should have a unique Media Type associated with it. The same name-string must appear in the appropriate Storage resource definition in the Director's configuration file.\n","example":"","internal":false,"name":"services.bacula-sd.device.<name>.mediaType","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"This option defines Director resources in Bacula Storage Daemon.\n","example":"","internal":false,"name":"services.bacula-sd.director","value":"","visible":true},{"declarations":[],"default":"","description":"If Monitor is set to no (default), this director will have full \n","example":"","internal":false,"name":"services.bacula-sd.director.<name>.monitor","value":"","visible":true},{"declarations":[],"default":"","description":"Specifies the password that must be supplied for a Director to b\n","example":"","internal":false,"name":"services.bacula-sd.director.<name>.password","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Whether to enable Bacula Storage Daemon.\n","example":"","internal":false,"name":"services.bacula-sd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Messages directive.\n","example":"","internal":false,"name":"services.bacula-sd.extraMessagesConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Storage directive.\n","example":"","internal":false,"name":"services.bacula-sd.extraStorageConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Specifies the Name of the Storage daemon.\n","example":"","internal":false,"name":"services.bacula-sd.name","value":"","visible":true},{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Specifies port number on which the Storage daemon listens for Director connections. The default is 9103.\n","example":"","internal":false,"name":"services.bacula-sd.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          What networks are just blocked.\n        ","example":"","internal":false,"name":"services.bind.blockedNetworks","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          What networks are allowed to use us as a resolver.\n        ","example":"","internal":false,"name":"services.bind.cacheNetworks","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          Overridable config file to use for named. By default, that\n          generated by nixos.\n        ","example":"","internal":false,"name":"services.bind.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          Whether to enable BIND domain name server.\n        ","example":"","internal":false,"name":"services.bind.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          List of servers we should forward requests to.\n        ","example":"","internal":false,"name":"services.bind.forwarders","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          Only use ipv4, even if the host supports ipv6.\n        ","example":"","internal":false,"name":"services.bind.ipv4Only","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          List of zones we claim authority over.\n            master=false means slave server; slaves means addresses\n           who may request zone transfer.\n        ","example":"","internal":false,"name":"services.bind.zones","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"The following authentication modes are available:\n  Open -- Accept connections from anyone, use NickServ for user authentication.\n  Closed -- Require authorization (using the PASS command during login) before allowing the user to connect at all.\n  Registered -- Only allow registered users to use this server; this disables the register- and the account command until the user identifies himself.\n","example":"","internal":false,"name":"services.bitlbee.authMode","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Whether to run the BitlBee IRC to other chat network gateway.\nRunning it allows you to access the MSN, Jabber, Yahoo! and ICQ chat\nnetworks via an IRC client.\n","example":"","internal":false,"name":"services.bitlbee.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Will be inserted in the Default section of the config file.\n","example":"","internal":false,"name":"services.bitlbee.extraDefaults","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Will be inserted in the Settings section of the config file.\n","example":"","internal":false,"name":"services.bitlbee.extraSettings","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"The interface the BitlBee deamon will be listening to.  If `127.0.0.1',\nonly clients on the local host can connect to it; if `0.0.0.0', clients\ncan access it from any network interface.\n","example":"","internal":false,"name":"services.bitlbee.interface","value":"","visible":true},{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Number of the port BitlBee will be listening to.\n","example":"","internal":false,"name":"services.bitlbee.portNumber","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"API key, which enables the developer API.","example":"","internal":false,"name":"services.btsync.apiKey","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Determines whether to check for updates and alert the user\nabout them in the UI.\n","example":"","internal":false,"name":"services.btsync.checkForUpdates","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Name of the Bittorrent Sync device.\n","example":"","internal":false,"name":"services.btsync.deviceName","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Download speed limit. 0 is unlimited (default).\n","example":"","internal":false,"name":"services.btsync.downloadLimit","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"If enabled, start the Bittorrent Sync daemon. Once enabled,\nyou can interact with the service through the Web UI, or\nconfigure it in your NixOS configuration. Enabling the\n<literal>btsync</literal> service also installs a\nmulti-instance systemd unit which can be used to start\nuser-specific copies of the daemon. Once installed, you can\nuse <literal>systemctl start btsync@user</literal> to start\nthe daemon only for user <literal>user</literal>, using the\nconfiguration file located at\n<literal>$HOME/.config/btsync.conf</literal>\n","example":"","internal":false,"name":"services.btsync.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Enable Web UI for administration. Bound to the specified\n<literal>httpListenAddress</literal> and\n<literal>httpListenPort</literal>.\n","example":"","internal":false,"name":"services.btsync.enableWebUI","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Encrypt LAN data.","example":"","internal":false,"name":"services.btsync.encryptLAN","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"HTTP address to bind to.\n","example":"","internal":false,"name":"services.btsync.httpListenAddr","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"HTTP port to bind on.\n","example":"","internal":false,"name":"services.btsync.httpListenPort","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"HTTP web login username.\n","example":"","internal":false,"name":"services.btsync.httpLogin","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"HTTP web login password.\n","example":"","internal":false,"name":"services.btsync.httpPass","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Listening port. Defaults to 0 which randomizes the port.\n","example":"","internal":false,"name":"services.btsync.listeningPort","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Shared folder list. If enabled, web UI must be\ndisabled. Secrets can be generated using <literal>btsync\n--generate-secret</literal>. Note that this secret will be\nput inside the Nix store, so it is realistically not very\nsecret.\n","example":"","internal":false,"name":"services.btsync.sharedFolders","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Upload speed limit. 0 is unlimited (default).\n","example":"","internal":false,"name":"services.btsync.uploadLimit","value":"","visible":true},{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Use Universal Plug-n-Play (UPnP)\n","example":"","internal":false,"name":"services.btsync.useUpnp","value":"","visible":true},{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"","description":"Additional config","example":"","internal":false,"name":"services.cgminer.config","value":"","visible":true},{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"","description":"Whether to enable cgminer, an ASIC/FPGA/GPU miner for bitcoin and\nlitecoin.\n","example":"","internal":false,"name":"services.cgminer.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"","description":"List of config options for every GPU","example":"","internal":false,"name":"services.cgminer.hardware","value":"","visible":true},{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"","description":"Which cgminer derivation to use.","example":"","internal":false,"name":"services.cgminer.package","value":"","visible":true},{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"","description":"List of pools where to mine","example":"","internal":false,"name":"services.cgminer.pools","value":"","visible":true},{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"","description":"User account under which cgminer runs","example":"","internal":false,"name":"services.cgminer.user","value":"","visible":true},{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":"","description":"Whether to synchronise your machine's time using chrony.\nMake sure you disable NTP if you enable this service.\n","example":"","internal":false,"name":"services.chrony.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":"","description":"Extra configuration directives that should be added to\n<literal>chrony.conf</literal>\n","example":"","internal":false,"name":"services.chrony.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":"","description":"Allow chronyd to make a rapid measurement of the system clock error at\nboot time, and to correct the system clock by stepping before normal\noperation begins.\n","example":"","internal":false,"name":"services.chrony.initstepslew","value":"","visible":true},{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":"","description":"The set of NTP servers from which to synchronise.\n","example":"","internal":false,"name":"services.chrony.servers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":"","description":"Configuration file to pipe to cjdroute.\n","example":"","internal":false,"name":"services.cjdns.confFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":"","description":"Enable this option to start a instance of the \ncjdns network encryption and and routing engine.\nConfiguration will be read from <literal>confFile</literal>.\n","example":"","internal":false,"name":"services.cjdns.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/clamav.nix"],"default":"","description":"\t    Extra configuration for freshclam. Contents will be added verbatim to the\n\t    configuration file.\n\t  ","example":"","internal":false,"name":"services.clamav.updater.config","value":"","visible":true},{"declarations":["nixos/modules/services/security/clamav.nix"],"default":"","description":"\t    Whether to enable automatic ClamAV virus definitions database updates.\n\t  ","example":"","internal":false,"name":"services.clamav.updater.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/clamav.nix"],"default":"","description":"\t    Number of database checks per day.\n\t  ","example":"","internal":false,"name":"services.clamav.updater.frequency","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Proxy account domain/workgroup name.","example":"","internal":false,"name":"services.cntlm.domain","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Whether to enable the cntlm, which start a local proxy.\n","example":"","internal":false,"name":"services.cntlm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Verbatim contents of <filename>cntlm.conf</filename>.","example":"","internal":false,"name":"services.cntlm.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"The hostname of your machine.\n","example":"","internal":false,"name":"services.cntlm.netbios_hostname","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Proxy account password. Note: use chmod 0600 on /etc/cntlm.password for security.","example":"","internal":false,"name":"services.cntlm.password","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Specifies on which ports the cntlm daemon listens.","example":"","internal":false,"name":"services.cntlm.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"A list of NTLM/NTLMv2 authenticating HTTP proxies.\n\nParent proxy, which requires authentication. The same as proxy on the command-line, can be used more than  once  to  specify  unlimited\nnumber  of  proxies.  Should  one proxy fail, cntlm automatically moves on to the next one. The connect request fails only if the whole\nlist of proxies is scanned and (for each request) and found to be invalid. Command-line takes precedence over the configuration file.\n","example":"","internal":false,"name":"services.cntlm.proxy","value":"","visible":true},{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Proxy account name, without the possibility to include domain name ('at' sign is interpreted literally).\n","example":"","internal":false,"name":"services.cntlm.username","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Defines the IP address by which CouchDB will be accessible.\n","example":"","internal":false,"name":"services.couchdb.bindAddress","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Custom configuration file. File needs to be readable and writable\nfrom couchdb user/group.\n","example":"","internal":false,"name":"services.couchdb.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Specifies location of CouchDB database files (*.couch named). This\nlocation should be writable and readable for the user the CouchDB\nservice runs as (couchdb by default).\n","example":"","internal":false,"name":"services.couchdb.databaseDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Whether to run CouchDB Server.\n","example":"","internal":false,"name":"services.couchdb.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Extra configuration. Overrides any other cofiguration.\n","example":"","internal":false,"name":"services.couchdb.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Group account under which couchdb runs.\n","example":"","internal":false,"name":"services.couchdb.group","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Specifies the location of file for logging output.\n","example":"","internal":false,"name":"services.couchdb.logFile","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"CouchDB package to use.\n","example":"","internal":false,"name":"services.couchdb.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Defined the port number to listen.\n","example":"","internal":false,"name":"services.couchdb.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"This file contains the full URI that can be used to access this\ninstance of CouchDB. It is used to help discover the port CouchDB is\nrunning on (if it was set to 0 (e.g. automatically assigned any free\none). This file should be writable and readable for the user that\nruns the CouchDB service (couchdb by default).\n","example":"","internal":false,"name":"services.couchdb.uriFile","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"User account under which couchdb runs.\n","example":"","internal":false,"name":"services.couchdb.user","value":"","visible":true},{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Specifies location of CouchDB view index files. This location should\nbe writable and readable for the user that runs the CouchDB service\n(couchdb by default).\n","example":"","internal":false,"name":"services.couchdb.viewIndexDir","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/cron.nix"],"default":"","description":"Whether to enable the Vixie cron daemon.","example":"","internal":false,"name":"services.cron.enable","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/cron.nix"],"default":"","description":"Email address to which job output will be mailed.","example":"","internal":false,"name":"services.cron.mailto","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/cron.nix"],"default":"","description":"A list of Cron jobs to be appended to the system-wide\ncrontab.  See the manual page for crontab for the expected\nformat. If you want to get the results mailed you must setuid\nsendmail. See <option>security.setuidOwners</option>\n\nIf neither /var/cron/cron.deny nor /var/cron/cron.allow exist only root\nwill is allowed to have its own crontab file. The /var/cron/cron.deny file\nis created automatically for you. So every user can use a crontab.\n\nMany nixos modules set systemCronJobs, so if you decide to disable vixie cron\nand enable another cron daemon, you may want it to get its system crontab\nbased on systemCronJobs.\n","example":"","internal":false,"name":"services.cron.systemCronJobs","value":"","visible":true},{"declarations":["nixos/modules/services/system/dbus.nix"],"default":"","description":"Whether to start the D-Bus message bus daemon, which is\nrequired by many other system services and applications.\n","example":"","internal":false,"name":"services.dbus.enable","value":"","visible":true},{"declarations":["nixos/modules/services/system/dbus.nix"],"default":"","description":"Packages whose D-Bus configuration files should be included in\nthe configuration of the D-Bus system-wide message bus.\nSpecifically, every file in\n<filename><replaceable>pkg</replaceable>/etc/dbus-1/system.d</filename>\nis included.\n","example":"","internal":false,"name":"services.dbus.packages","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":"","description":"The Datadog API key to associate the agent with your account","example":"","internal":false,"name":"services.dd-agent.api_key","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":"","description":"Whether to enable the dd-agent montioring service","example":"","internal":false,"name":"services.dd-agent.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":"","description":"The hostname to show in the Datadog dashboard (optional)","example":"","internal":false,"name":"services.dd-agent.hostname","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":"","description":"Datadog nginx integration configuration","example":"","internal":false,"name":"services.dd-agent.nginxConfig","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":"","description":"Datadog PostgreSQL integration configuration","example":"","internal":false,"name":"services.dd-agent.postgresqlConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Domain name to synchronize.\n","example":"","internal":false,"name":"services.ddclient.domain","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Whether to synchronise your machine's IP address with a dynamic DNS provider (e.g. dyndns.org).\n","example":"","internal":false,"name":"services.ddclient.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the configuration file.\n","example":"","internal":false,"name":"services.ddclient.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Password.\n","example":"","internal":false,"name":"services.ddclient.password","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Protocol to use with dynamic DNS provider. (see also, http://sourceforge.net/apps/trac/ddclient/wiki/Protocols)\n","example":"","internal":false,"name":"services.ddclient.protocol","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Server\n","example":"","internal":false,"name":"services.ddclient.server","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Username.\n","example":"","internal":false,"name":"services.ddclient.username","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"","example":"","internal":false,"name":"services.ddclient.web","value":"","visible":true},{"declarations":["nixos/modules/services/torrent/deluge.nix"],"default":"","description":"Start Deluge daemon.\n","example":"","internal":false,"name":"services.deluge.enable","value":"","visible":true},{"declarations":["nixos/modules/services/torrent/deluge.nix"],"default":"","description":"Start Deluge Web daemon.\n","example":"","internal":false,"name":"services.deluge.web.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          The path of the DHCP server configuration file.  If no file\n          is specified, a file is generated using the other options.\n        ","example":"","internal":false,"name":"services.dhcpd.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          Whether to enable the DHCP server.\n        ","example":"","internal":false,"name":"services.dhcpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          Extra text to be appended to the DHCP server configuration\n          file.  Currently, you almost certainly need to specify\n          something here, such as the options specifying the subnet\n          mask, DNS servers, etc.\n        ","example":"","internal":false,"name":"services.dhcpd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          The interfaces on which the DHCP server should listen.\n        ","example":"","internal":false,"name":"services.dhcpd.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          A list mapping ethernet addresses to IP addresses for the\n          DHCP server.\n        ","example":"","internal":false,"name":"services.dhcpd.machines","value":"","visible":true},{"declarations":["nixos/modules/services/misc/dictd.nix"],"default":"","description":"List of databases to make available.","example":"","internal":false,"name":"services.dictd.DBs","value":"","visible":true},{"declarations":["nixos/modules/services/misc/dictd.nix"],"default":"","description":"Whether to enable the DICT.org dictionary server.\n","example":"","internal":false,"name":"services.dictd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"","description":"Whether to enable Disnix","example":"","internal":false,"name":"services.disnix.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"","description":"List of name value pairs containing properties for the infrastructure model","example":"","internal":false,"name":"services.disnix.infrastructure","value":"","visible":true},{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"","description":"Whether to publish capabilities/properties as a Disnix service through Avahi","example":"","internal":false,"name":"services.disnix.publishAvahi","value":"","visible":true},{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"","description":"Whether to publish capabilities/properties of this machine in as attributes in the infrastructure option","example":"","internal":false,"name":"services.disnix.publishInfrastructure.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"","description":"Whether to publish authentication credentials through the infrastructure attribute (not recommended in combination with Avahi)","example":"","internal":false,"name":"services.disnix.publishInfrastructure.enableAuthentication","value":"","visible":true},{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"","description":"Whether to enable the DisnixWebService interface running on Apache Tomcat","example":"","internal":false,"name":"services.disnix.useWebServiceInterface","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":"","description":"Whether to run dnsmasq.\n","example":"","internal":false,"name":"services.dnsmasq.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":"","description":"Extra configuration directives that should be added to\n<literal>dnsmasq.conf</literal>\n","example":"","internal":false,"name":"services.dnsmasq.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":"","description":"The parameter to dnsmasq -S.\n","example":"","internal":false,"name":"services.dnsmasq.servers","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Whether to enable the Dovecot 2.x POP3/IMAP server.","example":"","internal":false,"name":"services.dovecot2.enable","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Start the IMAP listener (when Dovecot is enabled).","example":"","internal":false,"name":"services.dovecot2.enableImap","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Start the POP3 listener (when Dovecot is enabled).","example":"","internal":false,"name":"services.dovecot2.enablePop3","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Additional entries to put verbatim into Dovecot's config file.","example":"","internal":false,"name":"services.dovecot2.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Dovecot group name.","example":"","internal":false,"name":"services.dovecot2.group","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Location that dovecot will use for mail folders. Dovecot mail_location option.\n","example":"","internal":false,"name":"services.dovecot2.mailLocation","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Show the PAM failure message on authentication error (useful for OTPW).","example":"","internal":false,"name":"services.dovecot2.showPAMFailure","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"CA certificate used by the server certificate.","example":"","internal":false,"name":"services.dovecot2.sslCACert","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Server certificate","example":"","internal":false,"name":"services.dovecot2.sslServerCert","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Server key.","example":"","internal":false,"name":"services.dovecot2.sslServerKey","value":"","visible":true},{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Dovecot user name.","example":"","internal":false,"name":"services.dovecot2.user","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/drbd.nix"],"default":"","description":"Contents of the <filename>drbd.conf</filename> configuration file.\n","example":"","internal":false,"name":"services.drbd.config","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/drbd.nix"],"default":"","description":"Whether to enable support for DRBD, the Distributed Replicated\nBlock Device.\n","example":"","internal":false,"name":"services.drbd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Location of the config directory of ejabberd","example":"","internal":false,"name":"services.ejabberd.confDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Whether to enable ejabberd server","example":"","internal":false,"name":"services.ejabberd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Configuration dump that should be loaded on the first startup","example":"","internal":false,"name":"services.ejabberd.loadDumps","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Location of the logfile directory of ejabberd","example":"","internal":false,"name":"services.ejabberd.logsDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Location of the spooldir of ejabberd","example":"","internal":false,"name":"services.ejabberd.spoolDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Virtualhosts that ejabberd should host. Hostnames are surrounded with doublequotes and separated by commas","example":"","internal":false,"name":"services.ejabberd.virtualHosts","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Elasticsearch name that identifies your cluster for auto-discovery","example":"","internal":false,"name":"services.elasticsearch.cluster_name","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Data directory for elasticsearch.\n","example":"","internal":false,"name":"services.elasticsearch.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Whether to enable elasticsearch","example":"","internal":false,"name":"services.elasticsearch.enable","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Extra configuration for elasticsearch","example":"","internal":false,"name":"services.elasticsearch.extraConf","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Elasticsearch listen address","example":"","internal":false,"name":"services.elasticsearch.host","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Elasticsearch logging configuration","example":"","internal":false,"name":"services.elasticsearch.logging","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Elasticsearch port to listen for HTTP traffic","example":"","internal":false,"name":"services.elasticsearch.port","value":"","visible":true},{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Elasticsearch port for the node to node communication","example":"","internal":false,"name":"services.elasticsearch.tcp_port","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":"","description":"Socket to bind to. Valid socket URLs are:\n  unix:/path/to/socket for Unix sockets\n  tcp:dot.ted.qu.ad:port for IPv4 sockets\n  tcp6:[ipv6_addr]:port for IPv6 sockets\n","example":"","internal":false,"name":"services.fcgiwrap.bindSocket","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":"","description":"Whether to enable fcgiwrap, a server for running CGI applications over FastCGI.","example":"","internal":false,"name":"services.fcgiwrap.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":"","description":"Number of processes to prefork.","example":"","internal":false,"name":"services.fcgiwrap.preforkProcesses","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"Users allowed to use fcrontab and fcrondyn (one name per\nline, <literal>all</literal> for everyone).\n","example":"","internal":false,"name":"services.fcron.allow","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"Users forbidden from using fcron.","example":"","internal":false,"name":"services.fcron.deny","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"Whether to enable the <command>fcron</command> daemon.","example":"","internal":false,"name":"services.fcron.enable","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"Maximum number of serial jobs which can run simultaneously.","example":"","internal":false,"name":"services.fcron.maxSerialJobs","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"Number of jobs the serial queue and the lavg queue can contain.","example":"","internal":false,"name":"services.fcron.queuelen","value":"","visible":true},{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"The \"system\" crontab contents.","example":"","internal":false,"name":"services.fcron.systab","value":"","visible":true},{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"","description":"List of bundles that should be activated on startup","example":"","internal":false,"name":"services.felix.bundles","value":"","visible":true},{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"","description":"Whether to enable the Apache Felix OSGi service","example":"","internal":false,"name":"services.felix.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"","description":"Group account under which Apache Felix runs.","example":"","internal":false,"name":"services.felix.group","value":"","visible":true},{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"","description":"User account under which Apache Felix runs.","example":"","internal":false,"name":"services.felix.user","value":"","visible":true},{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"","description":"Location containing data/ and system/ directories.\ndata/ stores the databases, system/ stores the password database security2.fdb.\n","example":"","internal":false,"name":"services.firebird.baseDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"","description":"Whether to enable the Firebird super server.\n","example":"","internal":false,"name":"services.firebird.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"","description":"Which firebird derivation to use.\n","example":"","internal":false,"name":"services.firebird.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"","description":"Port Firebird uses.\n","example":"","internal":false,"name":"services.firebird.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"","description":"User account under which firebird runs.\n","example":"","internal":false,"name":"services.firebird.user","value":"","visible":true},{"declarations":["nixos/modules/services/networking/flashpolicyd.nix"],"default":"","description":"Whether to enable the Flash Policy server.  This is\nnecessary if you want Flash applications to make\nconnections to your server.\n","example":"","internal":false,"name":"services.flashpolicyd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/flashpolicyd.nix"],"default":"","description":"The policy to be served.  The default is to allow connections from any domain to any port.","example":"","internal":false,"name":"services.flashpolicyd.policy","value":"","visible":true},{"declarations":["nixos/modules/services/misc/folding-at-home.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the\nconfiguration file.\n","example":"","internal":false,"name":"services.foldingAtHome.config","value":"","visible":true},{"declarations":["nixos/modules/services/misc/folding-at-home.nix"],"default":"","description":"Whether to enable the Folding@Home to use idle CPU time.\n","example":"","internal":false,"name":"services.foldingAtHome.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/folding-at-home.nix"],"default":"","description":"A unique handle for statistics.\n","example":"","internal":false,"name":"services.foldingAtHome.nickname","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store.nix"],"default":"","description":"RDF database name. If it doesn't exist, it will be created. Databases are stored in /var/lib/4store.","example":"","internal":false,"name":"services.fourStore.database","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store.nix"],"default":"","description":"Whether to enable 4Store RDF database server.","example":"","internal":false,"name":"services.fourStore.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store.nix"],"default":"","description":"Extra CLI options to pass to 4Store.","example":"","internal":false,"name":"services.fourStore.options","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"RDF database name to expose via the endpoint. Defaults to local 4Store database name.","example":"","internal":false,"name":"services.fourStoreEndpoint.database","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"Whether to enable 4Store SPARQL endpoint.","example":"","internal":false,"name":"services.fourStoreEndpoint.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"IP address to listen on.","example":"","internal":false,"name":"services.fourStoreEndpoint.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"Extra CLI options to pass to 4Store's 4s-httpd process.","example":"","internal":false,"name":"services.fourStoreEndpoint.options","value":"","visible":true},{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"port to listen on.","example":"","internal":false,"name":"services.fourStoreEndpoint.port","value":"","visible":true},{"declarations":["nixos/modules/services/security/fprot.nix"],"default":"","description":"Whether to enable automatic F-Prot virus definitions database updates.\n","example":"","internal":false,"name":"services.fprot.updater.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/fprot.nix"],"default":"","description":"Update virus definitions every X minutes.\n","example":"","internal":false,"name":"services.fprot.updater.frequency","value":"","visible":true},{"declarations":["nixos/modules/services/security/fprot.nix"],"default":"","description":"License keyfile. Defaults to the one supplied with installation package.\n","example":"","internal":false,"name":"services.fprot.updater.licenseKeyfile","value":"","visible":true},{"declarations":["nixos/modules/services/security/fprot.nix"],"default":"","description":"product.data file. Defaults to the one supplied with installation package.\n","example":"","internal":false,"name":"services.fprot.updater.productData","value":"","visible":true},{"declarations":["nixos/modules/services/security/frandom.nix"],"default":"","description":"enable the /dev/frandom device (a very fast random number generator)\n","example":"","internal":false,"name":"services.frandom.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/freenet.nix"],"default":"","description":"Enable the Freenet daemon","example":"","internal":false,"name":"services.freenet.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/freenet.nix"],"default":"","description":"Set the nice level for the Freenet daemon","example":"","internal":false,"name":"services.freenet.nice","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"Mutable configuration file which can be edited with the web\ninterface.  Due to possible modification, double quote the full\npath of the filename stored in your filesystem to avoid attempts\nto modify the content of the nix store.\n","example":"","internal":false,"name":"services.fuppesd.config","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"Database file which index all shared files.\n","example":"","internal":false,"name":"services.fuppesd.database","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"Enables Fuppes (UPnP A/V Media Server).  Can be used to watch\nphotos, video and listen to music from a phone/tv connected to the\nlocal network.\n","example":"","internal":false,"name":"services.fuppesd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"File which will contains the log produced by the daemon.\n","example":"","internal":false,"name":"services.fuppesd.log.file","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"Logging level of fuppes, An integer between 0 and 3.\n","example":"","internal":false,"name":"services.fuppesd.log.level","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"Enables Fuppes (UPnP A/V Media Server).  Can be used to watch\nphotos, video and listen to music from a phone/tv connected to the\nlocal network.\n","example":"","internal":false,"name":"services.fuppesd.name","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"Name of the user which own the configuration files and under which\nthe fuppes daemon will be executed.\n","example":"","internal":false,"name":"services.fuppesd.user","value":"","visible":true},{"declarations":["nixos/modules/services/audio/fuppes.nix"],"default":"","description":"XML file describing the layout of virtual folder visible by the\nclient.\n","example":"","internal":false,"name":"services.fuppesd.vfolder","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/geoclue2.nix"],"default":"","description":"Whether to enable GeoClue 2 daemon, a DBus service\nthat provides location informationfor accessing.\n","example":"","internal":false,"name":"services.geoclue2.enable","value":"","visible":true},{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"Extra configuration options.","example":"","internal":false,"name":"services.ghostOne.config","value":"","visible":true},{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"Enable Ghost-One Warcraft3 game hosting server.","example":"","internal":false,"name":"services.ghostOne.enable","value":"","visible":true},{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"The language of bot messages: English, Spanish, Russian, Serbian or Turkish.","example":"","internal":false,"name":"services.ghostOne.language","value":"","visible":true},{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"The path to the directory where you keep your map files. GHost One doesn't require\nmap files but if it has access to them it can send them to players and automatically\ncalculate most map config values. GHost One will search [bot_mappath + map_localpath]\nfor the map file (map_localpath is set in each map's config file).\n","example":"","internal":false,"name":"services.ghostOne.mappath","value":"","visible":true},{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"The path to your local Warcraft III directory, which must contain war3.exe, storm.dll, and game.dll.\n","example":"","internal":false,"name":"services.ghostOne.war3path","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Remap all the path requests as relative to the given path. For example,\nif you set base-path to /srv/git, then if you later try to pull\ngit://example.com/hello.git, Git daemon will interpret the path as /srv/git/hello.git.\n","example":"","internal":false,"name":"services.gitDaemon.basePath","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Enable Git daemon, which allows public hosting  of git repositories\nwithout any access controls. This is mostly intended for read-only access.\n\nYou can allow write access by setting daemon.receivepack configuration\nitem of the repository to true. This is solely meant for a closed LAN setting\nwhere everybody is friendly.\n\nIf you need any access controls, use something else.\n","example":"","internal":false,"name":"services.gitDaemon.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Publish all directories that look like Git repositories (have the objects\nand refs subdirectories), even if they do not have the git-daemon-export-ok file.\n\nIf disabled, you need to touch .git/git-daemon-export-ok in each repository\nyou want the daemon to publish.\n\nWarning: enabling this without a repository whitelist or basePath\npublishes every git repository you have.\n","example":"","internal":false,"name":"services.gitDaemon.exportAll","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Listen on a specific IP address or hostname.","example":"","internal":false,"name":"services.gitDaemon.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Extra configuration options to be passed to Git daemon.","example":"","internal":false,"name":"services.gitDaemon.options","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Port to listen on.","example":"","internal":false,"name":"services.gitDaemon.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"A whitelist of paths of git repositories, or directories containing repositories\nall of which would be published. Paths must not end in \"/\".\n\nWarning: leaving this empty and enabling exportAll publishes all\nrepositories in your filesystem or basePath if specified.\n","example":"","internal":false,"name":"services.gitDaemon.repositories","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/at-spi2-core.nix"],"default":"","description":"Whether to enable at-spi2-core, a service for the Assistive Technologies\navailable on the GNOME platform.\n","example":"","internal":false,"name":"services.gnome3.at-spi2-core.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/evolution-data-server.nix"],"default":"","description":"Whether to enable Evolution Data Server, a collection of services for \nstoring addressbooks and calendars.\n","example":"","internal":false,"name":"services.gnome3.evolution-data-server.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/gnome-documents.nix"],"default":"","description":"Whether to enable GNOME Documents services, a document\nmanager application for GNOME.\n","example":"","internal":false,"name":"services.gnome3.gnome-documents.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/gnome-keyring.nix"],"default":"","description":"Whether to enable GNOME Keyring daemon, a service designed to\ntake care of the user's security credentials,\nsuch as user names and passwordsa search engine.\n","example":"","internal":false,"name":"services.gnome3.gnome-keyring.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/gnome-online-accounts.nix"],"default":"","description":"Whether to enable GNOME Online Accounts daemon, a service that provides\na single sign-on framework for the GNOME desktop.\n","example":"","internal":false,"name":"services.gnome3.gnome-online-accounts.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/gnome-online-miners.nix"],"default":"","description":"Whether to enable GNOME Online Miners, a service that\ncrawls through your online content.\n","example":"","internal":false,"name":"services.gnome3.gnome-online-miners.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/gnome-user-share.nix"],"default":"","description":"Whether to enable GNOME User Share, a service that exports the\ncontents of the Public folder in your home directory on the local network.\n","example":"","internal":false,"name":"services.gnome3.gnome-user-share.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/gvfs.nix"],"default":"","description":"Whether to enable gvfs backends, userspace virtual filesystem used\nby GNOME components via D-Bus.\n","example":"","internal":false,"name":"services.gnome3.gvfs.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/seahorse.nix"],"default":"","description":"Whether to enable Seahorse search provider for the GNOME Shell activity search.\n","example":"","internal":false,"name":"services.gnome3.seahorse.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/sushi.nix"],"default":"","description":"Whether to enable Sushi, a quick previewer for nautilus.\n","example":"","internal":false,"name":"services.gnome3.sushi.enable","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/gnome3/tracker.nix"],"default":"","description":"Whether to enable Tracker services, a search engine,\nsearch tool and metadata storage system.\n","example":"","internal":false,"name":"services.gnome3.tracker.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Whether to run the GNUnet daemon.  GNUnet is GNU's anonymous\npeer-to-peer communication and file sharing framework.\n","example":"","internal":false,"name":"services.gnunet.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Additional options that will be copied verbatim in `gnunet.conf'.\nSee `gnunet.conf(5)' for details.\n","example":"","internal":false,"name":"services.gnunet.extraOptions","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Maximum file system usage (in MiB) for file sharing.\n","example":"","internal":false,"name":"services.gnunet.fileSharing.quota","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Hard bandwidth limit (in bits per second) when uploading\ndata.\n","example":"","internal":false,"name":"services.gnunet.load.hardNetUpBandwidth","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Maximum bandwidth usage (in bits per second) for GNUnet\nwhen downloading data.\n","example":"","internal":false,"name":"services.gnunet.load.maxNetDownBandwidth","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Maximum bandwidth usage (in bits per second) for GNUnet\nwhen downloading data.\n","example":"","internal":false,"name":"services.gnunet.load.maxNetUpBandwidth","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"The TCP port for use by GNUnet.\n","example":"","internal":false,"name":"services.gnunet.tcp.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"The UDP port for use by GNUnet.\n","example":"","internal":false,"name":"services.gnunet.udp.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"Whether to automatically start the tunnel.\n","example":"","internal":false,"name":"services.gogoclient.autorun","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"Enable the gogoCLIENT IPv6 tunnel.\n","example":"","internal":false,"name":"services.gogoclient.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"Path to a file (as a string), containing your gogoNET password, if any.\n","example":"","internal":false,"name":"services.gogoclient.password","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"The Gateway6 server to be used.","example":"","internal":false,"name":"services.gogoclient.server","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"Your Gateway6 login name, if any.\n","example":"","internal":false,"name":"services.gogoclient.username","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/gpm.nix"],"default":"","description":"Whether to enable GPM, the General Purpose Mouse daemon,\nwhich enables mouse support in virtual consoles.\n","example":"","internal":false,"name":"services.gpm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/gpm.nix"],"default":"","description":"Mouse protocol to use.","example":"","internal":false,"name":"services.gpm.protocol","value":"","visible":true},{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":"","description":"The debugging level.\n","example":"","internal":false,"name":"services.gpsd.debugLevel","value":"","visible":true},{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":"","description":"A device may be a local serial device for GPS input, or a URL of the form:\n     <literal>[{dgpsip|ntrip}://][user:passwd@]host[:port][/stream]</literal>\nin which case it specifies an input source for DGPS or ntrip data.\n","example":"","internal":false,"name":"services.gpsd.device","value":"","visible":true},{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":"","description":"Whether to enable `gpsd', a GPS service daemon.\n","example":"","internal":false,"name":"services.gpsd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":"","description":"The port where to listen for TCP connections.\n","example":"","internal":false,"name":"services.gpsd.port","value":"","visible":true},{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":"","description":"Whether to enable the broken-device-safety, otherwise\nknown as read-only mode.  Some popular bluetooth and USB\nreceivers lock up or become totally inaccessible when\nprobed or reconfigured.  This switch prevents gpsd from\nwriting to a receiver.  This means that gpsd cannot\nconfigure the receiver for optimal performance, but it\nalso means that gpsd cannot break the receiver.  A better\nsolution would be for Bluetooth to not be so fragile.  A\nplatform independent method to identify\nserial-over-Bluetooth devices would also be nice.\n","example":"","internal":false,"name":"services.gpsd.readonly","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Defines if and how received metrics will be agregated.","example":"","internal":false,"name":"services.graphite.carbon.aggregationRules","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Any metrics received which match one of the experssions will be dropped.","example":"","internal":false,"name":"services.graphite.carbon.blacklist","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Content of carbon configuration file.","example":"","internal":false,"name":"services.graphite.carbon.config","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Whether to enable carbon agregator, the carbon buffering service.","example":"","internal":false,"name":"services.graphite.carbon.enableAggregator","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Whether to enable carbon cache, the graphite storage daemon.","example":"","internal":false,"name":"services.graphite.carbon.enableCache","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Whether to enable carbon relay, the carbon replication and sharding service.","example":"","internal":false,"name":"services.graphite.carbon.enableRelay","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Relay rules are used to send certain metrics to a certain backend.","example":"","internal":false,"name":"services.graphite.carbon.relayRules","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Regular expression patterns that can be used to rewrite metric names\nin a search and replace fashion.\n","example":"","internal":false,"name":"services.graphite.carbon.rewriteRules","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Defines how to aggregate data to lower-precision retentions.","example":"","internal":false,"name":"services.graphite.carbon.storageAggregation","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Defines retention rates for storing metrics.","example":"","internal":false,"name":"services.graphite.carbon.storageSchemas","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Only metrics received which match one of the experssions will be persisted.","example":"","internal":false,"name":"services.graphite.carbon.whitelist","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Data directory for graphite.\n","example":"","internal":false,"name":"services.graphite.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Whether to enable graphite web frontend.","example":"","internal":false,"name":"services.graphite.web.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Graphite web frontend listen address.","example":"","internal":false,"name":"services.graphite.web.host","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Graphite web frontend port.","example":"","internal":false,"name":"services.graphite.web.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"GVPE config file, if already present\n","example":"","internal":false,"name":"services.gvpe.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"GVPE config contents\n","example":"","internal":false,"name":"services.gvpe.configText","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"Additional commands to apply in ifup script\n","example":"","internal":false,"name":"services.gvpe.customIFSetup","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"Whether to run gvpe\n","example":"","internal":false,"name":"services.gvpe.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"IP address to assign to GVPE interface\n","example":"","internal":false,"name":"services.gvpe.ipAddress","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"GVPE node name\n","example":"","internal":false,"name":"services.gvpe.nodename","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"Condition to start GVPE\n","example":"","internal":false,"name":"services.gvpe.startOn","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"Condition to stop GVPE\n","example":"","internal":false,"name":"services.gvpe.stopOn","value":"","visible":true},{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"IP subnet assigned to GVPE network\n","example":"","internal":false,"name":"services.gvpe.subnet","value":"","visible":true},{"declarations":["nixos/modules/services/networking/haproxy.nix"],"default":"","description":"\n          Default configuration.\n        ","example":"","internal":false,"name":"services.haproxy.config","value":"","visible":true},{"declarations":["nixos/modules/services/networking/haproxy.nix"],"default":"","description":"\n          Enable the HAProxy.\n        ","example":"","internal":false,"name":"services.haproxy.enable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/pommed.nix"],"default":"","description":"The contents of the pommed.conf file.\n","example":"","internal":false,"name":"services.hardware.pommed.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/pommed.nix"],"default":"","description":"Whether to use the pommed tool to handle Apple laptop keyboard hotkeys.\n","example":"","internal":false,"name":"services.hardware.pommed.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/haveged.nix"],"default":"","description":"Whether to enable to haveged entropy daemon, which refills \n/dev/random when low.\n","example":"","internal":false,"name":"services.haveged.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/haveged.nix"],"default":"","description":"The number of bits of available entropy beneath which\nhaveged should refill the entropy pool.\n","example":"","internal":false,"name":"services.haveged.refill_threshold","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"Channel number (IEEE 802.11)\nPlease note that some drivers do not use this value from hostapd and the\nchannel will need to be configured separately with iwconfig.\n","example":"","internal":false,"name":"services.hostapd.channel","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"Which driver hostapd will use. Most things will probably use the default.","example":"","internal":false,"name":"services.hostapd.driver","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"Enable putting a wireless interface into infrastructure mode,\nallowing other wireless devices to associate with the wireless interface and do\nwireless networking. A simple access point will enable hostapd.wpa, and\nhostapd.wpa_passphrase, hostapd.ssid, dhcpd on the wireless interface to\nprovide IP addresses to the associated stations, and nat (from the wireless\ninterface to an upstream interface). \n","example":"","internal":false,"name":"services.hostapd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"Extra configuration options to put in the hostapd.conf","example":"","internal":false,"name":"services.hostapd.extraCfg","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"members of this group can control hostapd","example":"","internal":false,"name":"services.hostapd.group","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"Operation mode (a = IEEE 802.11a, b = IEEE 802.11b, g = IEEE 802.11g","example":"","internal":false,"name":"services.hostapd.hwMode","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"The interfaces <command>hostapd</command> will use. \n","example":"","internal":false,"name":"services.hostapd.interface","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"SSID to be used in IEEE 802.11 management frames.","example":"","internal":false,"name":"services.hostapd.ssid","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"enable WPA (IEEE 802.11i/D3.0) to authenticate to the access point","example":"","internal":false,"name":"services.hostapd.wpa","value":"","visible":true},{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"WPA-PSK (pre-shared-key) passphrase. Clients will need this\npassphrase to associate with this access point. Warning: This passphrase will\nget put into a world-readable file in the nix store. \n","example":"","internal":false,"name":"services.hostapd.wpaPassphrase","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"E-mail address of the server administrator.","example":"","internal":false,"name":"services.httpd.adminAddr","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Override the configuration file used by Apache. By default,\nNixOS generates one automatically.\n","example":"","internal":false,"name":"services.httpd.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"The path of Apache's document root directory.  If left undefined,\nan empty directory in the Nix store will be used as root.\n","example":"","internal":false,"name":"services.httpd.documentRoot","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Whether to enable the Apache HTTP Server.","example":"","internal":false,"name":"services.httpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Whether to enable SSL (https) support.","example":"","internal":false,"name":"services.httpd.enableSSL","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Whether to enable serving <filename>~/public_html</filename> as\n<literal>/~<replaceable>username</replaceable></literal>.\n","example":"","internal":false,"name":"services.httpd.enableUserDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"These lines go to httpd.conf verbatim. They will go after\ndirectories and directory aliases defined by default.\n","example":"","internal":false,"name":"services.httpd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Additional Apache modules to be used.  These can be\nspecified as a string in the case of modules distributed\nwith Apache, or as an attribute set specifying the\n<varname>name</varname> and <varname>path</varname> of the\nmodule.\n","example":"","internal":false,"name":"services.httpd.extraModules","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Extra subservices to enable in the webserver.","example":"","internal":false,"name":"services.httpd.extraSubservices","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"If set, all requests for this host are redirected permanently to\nthe given URL.\n","example":"","internal":false,"name":"services.httpd.globalRedirect","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Group under which httpd runs.  The account is created\nautomatically if it doesn't exist.\n","example":"","internal":false,"name":"services.httpd.group","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Canonical hostname for the server.","example":"","internal":false,"name":"services.httpd.hostName","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Directory for Apache's log files.  It is created automatically.\n","example":"","internal":false,"name":"services.httpd.logDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"\n      Log format for Apache's log files. Possible values are: combined, common, referer, agent.\n    ","example":"","internal":false,"name":"services.httpd.logFormat","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"If enabled, each virtual host gets its own\n<filename>access_log</filename> and\n<filename>error_log</filename>, namely suffixed by the\n<option>hostName</option> of the virtual host.\n","example":"","internal":false,"name":"services.httpd.logPerVirtualHost","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Maximum number of httpd processes (prefork)","example":"","internal":false,"name":"services.httpd.maxClients","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Maximum number of httpd requests answered per httpd child (prefork), 0 means unlimited","example":"","internal":false,"name":"services.httpd.maxRequestsPerChild","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Multi-processing module to be used by Apache.  Available\nmodules are <literal>prefork</literal> (the default;\nhandles each request in a separate child process),\n<literal>worker</literal> (hybrid approach that starts a\nnumber of child processes each running a number of\nthreads) and <literal>event</literal> (a recent variant of\n<literal>worker</literal> that handles persistent\nconnections more efficiently).\n","example":"","internal":false,"name":"services.httpd.multiProcessingModule","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Overridable attribute of the Apache HTTP Server package to use.\n","example":"","internal":false,"name":"services.httpd.package","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Options appended to the PHP configuration file <filename>php.ini</filename>.","example":"","internal":false,"name":"services.httpd.phpOptions","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Port for the server.  0 means use the default port: 80 for http\nand 443 for https (i.e. when enableSSL is set).\n","example":"","internal":false,"name":"services.httpd.port","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"This option provides a simple way to serve static directories.\n","example":"","internal":false,"name":"services.httpd.servedDirs","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"This option provides a simple way to serve individual, static files.\n","example":"","internal":false,"name":"services.httpd.servedFiles","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Additional names of virtual hosts served by this virtual host configuration.\n","example":"","internal":false,"name":"services.httpd.serverAliases","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Path to server SSL certificate.","example":"","internal":false,"name":"services.httpd.sslServerCert","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Path to server SSL certificate key.","example":"","internal":false,"name":"services.httpd.sslServerKey","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Directory for Apache's transient runtime state (such as PID\nfiles).  It is created automatically.  Note that the default,\n<filename>/run/httpd</filename>, is deleted at boot time.\n","example":"","internal":false,"name":"services.httpd.stateDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"User account under which httpd runs.  The account is created\nautomatically if it doesn't exist.\n","example":"","internal":false,"name":"services.httpd.user","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Specification of the virtual hosts served by Apache.  Each\nelement should be an attribute set specifying the\nconfiguration of the virtual host.  The available options\nare the non-global options permissible for the main host.\n","example":"","internal":false,"name":"services.httpd.virtualHosts","value":"","visible":true},{"declarations":[],"default":"","description":"E-mail address of the server administrator.","example":"","internal":false,"name":"services.httpd.virtualHosts.*.adminAddr","value":"","visible":true},{"declarations":[],"default":"","description":"The path of Apache's document root directory.  If left undefined,\nan empty directory in the Nix store will be used as root.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.documentRoot","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to enable SSL (https) support.","example":"","internal":false,"name":"services.httpd.virtualHosts.*.enableSSL","value":"","visible":true},{"declarations":[],"default":"","description":"Whether to enable serving <filename>~/public_html</filename> as\n<literal>/~<replaceable>username</replaceable></literal>.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.enableUserDir","value":"","visible":true},{"declarations":[],"default":"","description":"These lines go to httpd.conf verbatim. They will go after\ndirectories and directory aliases defined by default.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.extraConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Extra subservices to enable in the webserver.","example":"","internal":false,"name":"services.httpd.virtualHosts.*.extraSubservices","value":"","visible":true},{"declarations":[],"default":"","description":"If set, all requests for this host are redirected permanently to\nthe given URL.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.globalRedirect","value":"","visible":true},{"declarations":[],"default":"","description":"Canonical hostname for the server.","example":"","internal":false,"name":"services.httpd.virtualHosts.*.hostName","value":"","visible":true},{"declarations":[],"default":"","description":"\n      Log format for Apache's log files. Possible values are: combined, common, referer, agent.\n    ","example":"","internal":false,"name":"services.httpd.virtualHosts.*.logFormat","value":"","visible":true},{"declarations":[],"default":"","description":"Port for the server.  0 means use the default port: 80 for http\nand 443 for https (i.e. when enableSSL is set).\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.port","value":"","visible":true},{"declarations":[],"default":"","description":"This option provides a simple way to serve static directories.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.servedDirs","value":"","visible":true},{"declarations":[],"default":"","description":"This option provides a simple way to serve individual, static files.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.servedFiles","value":"","visible":true},{"declarations":[],"default":"","description":"Additional names of virtual hosts served by this virtual host configuration.\n","example":"","internal":false,"name":"services.httpd.virtualHosts.*.serverAliases","value":"","visible":true},{"declarations":[],"default":"","description":"Path to server SSL certificate.","example":"","internal":false,"name":"services.httpd.virtualHosts.*.sslServerCert","value":"","visible":true},{"declarations":[],"default":"","description":"Path to server SSL certificate key.","example":"","internal":false,"name":"services.httpd.virtualHosts.*.sslServerKey","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"The port where influxdb admin listens","example":"","internal":false,"name":"services.influxdb.adminPort","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Extra influxdb api configuration","example":"","internal":false,"name":"services.influxdb.apiExtraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"The port where influxdb api listens","example":"","internal":false,"name":"services.influxdb.apiPort","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Address where influxdb listens","example":"","internal":false,"name":"services.influxdb.bindAddress","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Influxdb cluster configuration","example":"","internal":false,"name":"services.influxdb.clusterConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Data directory for influxd data files.","example":"","internal":false,"name":"services.influxdb.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Whether to enable the influxdb server","example":"","internal":false,"name":"services.influxdb.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Extra configuration options for influxdb","example":"","internal":false,"name":"services.influxdb.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Group under which influxdb runs","example":"","internal":false,"name":"services.influxdb.group","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Configuration of influxdb extra plugins","example":"","internal":false,"name":"services.influxdb.inputPluginsConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Influxdb leveldb configuration","example":"","internal":false,"name":"services.influxdb.leveldbConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Which influxdb derivation to use","example":"","internal":false,"name":"services.influxdb.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Influxdb raft configuration","example":"","internal":false,"name":"services.influxdb.raftConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Influxdb sharding configuration","example":"","internal":false,"name":"services.influxdb.shardingConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Influxdb raft configuration","example":"","internal":false,"name":"services.influxdb.storageConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"User account under which influxdb runs","example":"","internal":false,"name":"services.influxdb.user","value":"","visible":true},{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"","description":"Influxdb write-ahead log configuration","example":"","internal":false,"name":"services.influxdb.walConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/iodined.nix"],"default":"","description":"Start iodine in client mode","example":"","internal":false,"name":"services.iodined.client","value":"","visible":true},{"declarations":["nixos/modules/services/networking/iodined.nix"],"default":"","description":"Domain or subdomain of which nameservers point to us","example":"","internal":false,"name":"services.iodined.domain","value":"","visible":true},{"declarations":["nixos/modules/services/networking/iodined.nix"],"default":"","description":"Enable iodine, ip over dns daemon","example":"","internal":false,"name":"services.iodined.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/iodined.nix"],"default":"","description":"Additional command line parameters","example":"","internal":false,"name":"services.iodined.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/iodined.nix"],"default":"","description":"Assigned ip address or ip range","example":"","internal":false,"name":"services.iodined.ip","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          IRCD server administrator e-mail.\n        ","example":"","internal":false,"name":"services.ircdHybrid.adminEmail","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          IRCD server SSL certificate. There are some limitations - read manual.\n        ","example":"","internal":false,"name":"services.ircdHybrid.certificate","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          IRCD server description.\n        ","example":"","internal":false,"name":"services.ircdHybrid.description","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          Enable IRCD.\n        ","example":"","internal":false,"name":"services.ircdHybrid.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          Extra IP's to bind.\n        ","example":"","internal":false,"name":"services.ircdHybrid.extraIPs","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          Extra port to avoid filtering.\n        ","example":"","internal":false,"name":"services.ircdHybrid.extraPort","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          IRCD server RSA key.\n        ","example":"","internal":false,"name":"services.ircdHybrid.rsaKey","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          IRCD server name.\n        ","example":"","internal":false,"name":"services.ircdHybrid.serverName","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"","description":"\n          IRCD server unique ID in a net of servers.\n        ","example":"","internal":false,"name":"services.ircdHybrid.sid","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Location of the deployment files","example":"","internal":false,"name":"services.jboss.deployDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Whether to enable jboss","example":"","internal":false,"name":"services.jboss.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Location where the shared library JARs are stored","example":"","internal":false,"name":"services.jboss.libUrl","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Location of the logfile directory of JBoss","example":"","internal":false,"name":"services.jboss.logDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Location of the server instance files","example":"","internal":false,"name":"services.jboss.serverDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Location where JBoss stores its temp files","example":"","internal":false,"name":"services.jboss.tempDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"Whether to use to connector to the Apache HTTP server","example":"","internal":false,"name":"services.jboss.useJK","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"","description":"User account under which jboss runs.","example":"","internal":false,"name":"services.jboss.user","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"Whether to enable the jenkins continuous integration server.\n","example":"","internal":false,"name":"services.jenkins.enable","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"Additional environment variables to be passed to the jenkins process.\nThe environment will always include JENKINS_HOME.\n","example":"","internal":false,"name":"services.jenkins.environment","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"If the default user \"jenkins\" is configured then this is the primary\ngroup of that user.\n","example":"","internal":false,"name":"services.jenkins.group","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"The path to use as JENKINS_HOME. If the default user \"jenkins\" is configured then\nthis is the home of the \"jenkins\" user.\n","example":"","internal":false,"name":"services.jenkins.home","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"Packages to add to PATH for the jenkins process.\n","example":"","internal":false,"name":"services.jenkins.packages","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"Specifies port number on which the jenkins HTTP interface listens. The default is 8080.\n","example":"","internal":false,"name":"services.jenkins.port","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"User the jenkins server should execute under.\n","example":"","internal":false,"name":"services.jenkins.user","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"","description":"If true the system will be configured to work as a jenkins slave.\nIf the system is also configured to work as a jenkins master then this has no effect.\nIn progress: Currently only assures the jenkins user is configured.\n","example":"","internal":false,"name":"services.jenkinsSlave.enable","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"","description":"If the default slave agent user \"jenkins\" is configured then this is\nthe primary group of that user.\n","example":"","internal":false,"name":"services.jenkinsSlave.group","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"","description":"The path to use as JENKINS_HOME. If the default user \"jenkins\" is configured then\nthis is the home of the \"jenkins\" user.\n","example":"","internal":false,"name":"services.jenkinsSlave.home","value":"","visible":true},{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"","description":"User the jenkins slave agent should execute under.\n","example":"","internal":false,"name":"services.jenkinsSlave.user","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"If non-empty, write log messages to the specified TTY device.","example":"","internal":false,"name":"services.journald.console","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Whether to enable the HTTP gateway to the journal.\n","example":"","internal":false,"name":"services.journald.enableHttpGateway","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd-journald. See man journald.conf\nfor available options.\n","example":"","internal":false,"name":"services.journald.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Configures the rate limiting burst limit (number of messages per\ninterval) that is applied to all messages generated on the system.\nThis rate limiting is applied per-service, so that two services\nwhich log do not interfere with each other's limit.\n","example":"","internal":false,"name":"services.journald.rateLimitBurst","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Configures the rate limiting interval that is applied to all\nmessages generated on the system. This rate limiting is applied\nper-service, so that two services which log do not interfere with\neach other's limit. The value may be specified in the following\nunits: s, min, h, ms, us. To turn off any kind of rate limiting,\nset either value to 0.\n","example":"","internal":false,"name":"services.journald.rateLimitInterval","value":"","visible":true},{"declarations":["nixos/modules/services/system/kerberos.nix"],"default":"","description":"Enable the kerberos authentification server.\n","example":"","internal":false,"name":"services.kerberos_server.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Enable the kippo honeypot ssh server.","example":"","internal":false,"name":"services.kippo.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Extra verbatim configuration added to the end of kippo.cfg.","example":"","internal":false,"name":"services.kippo.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Hostname for kippo to present to SSH login","example":"","internal":false,"name":"services.kippo.hostname","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Path of log files needed for operation and configuration.","example":"","internal":false,"name":"services.kippo.logPath","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Path of pid files needed for operation.","example":"","internal":false,"name":"services.kippo.pidPath","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"TCP port number for kippo to bind to.","example":"","internal":false,"name":"services.kippo.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Path of read/write files needed for operation and configuration.","example":"","internal":false,"name":"services.kippo.varPath","value":"","visible":true},{"declarations":["nixos/modules/services/logging/klogd.nix"],"default":"","description":"Whether to enable klogd, the kernel log message processing\ndaemon.  Since systemd handles logging of kernel messages on\nLinux 3.5 and later, this is only useful if you're running an\nolder kernel.\n","example":"","internal":false,"name":"services.klogd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":"","description":"Use kmscon as the virtual console instead of gettys.\nkmscon is a kms/dri-based userspace virtual terminal implementation.\nIt supports a richer feature set than the standard linux console VT,\nincluding full unicode support, and when the video card supports drm\nshould be much faster.\n","example":"","internal":false,"name":"services.kmscon.enable","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":"","description":"Extra contents of the kmscon.conf file.","example":"","internal":false,"name":"services.kmscon.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":"","description":"Whether to use 3D hardware acceleration to render the console.","example":"","internal":false,"name":"services.kmscon.hwRender","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/cgit.nix"],"default":"","description":"Verbatim contents of the cgit runtime configuration file. Documentation\n(with cgitrc example file) is available in \"man cgitrc\". Or online:\nhttp://git.zx2c4.com/cgit/tree/cgitrc.5.txt\n","example":"","internal":false,"name":"services.lighttpd.cgit.configText","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/cgit.nix"],"default":"","description":"If true, enable cgit (fast web interface for git repositories) as a\nsub-service in lighttpd. cgit will be accessible at\nhttp://yourserver/cgit\n","example":"","internal":false,"name":"services.lighttpd.cgit.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"Overridable config file contents to use for lighttpd. By default, use\nthe contents automatically generated by NixOS.\n","example":"","internal":false,"name":"services.lighttpd.configText","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"Document-root of the web server. Must be readable by the \"lighttpd\" user.\n","example":"","internal":false,"name":"services.lighttpd.document-root","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"Enable the lighttpd web server.\n","example":"","internal":false,"name":"services.lighttpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"These configuration lines will be appended to the generated lighttpd\nconfig file. Note that this mechanism does not work when the manual\n<option>configText</option> option is used.\n","example":"","internal":false,"name":"services.lighttpd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/gitweb.nix"],"default":"","description":"If true, enable gitweb in lighttpd. Access it at http://yourserver/gitweb\n","example":"","internal":false,"name":"services.lighttpd.gitweb.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/gitweb.nix"],"default":"","description":"Verbatim configuration text appended to the generated gitweb.conf file.\n","example":"","internal":false,"name":"services.lighttpd.gitweb.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/gitweb.nix"],"default":"","description":"Path to git projects (bare repositories) that should be served by\ngitweb. Must not end with a slash.\n","example":"","internal":false,"name":"services.lighttpd.gitweb.projectroot","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"Show server status overview at /server-status, statistics at\n/server-statistics and list of loaded modules at /server-config.\n","example":"","internal":false,"name":"services.lighttpd.mod_status","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"If true, requests in the form /~user/page.html are rewritten to take\nthe file public_html/page.html from the home directory of the user.\n","example":"","internal":false,"name":"services.lighttpd.mod_userdir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"TCP port number for lighttpd to bind to.\n","example":"","internal":false,"name":"services.lighttpd.port","value":"","visible":true},{"declarations":["nixos/modules/misc/locate.nix"],"default":"","description":"If enabled, NixOS will periodically update the database of\nfiles used by the <command>locate</command> command.\n","example":"","internal":false,"name":"services.locate.enable","value":"","visible":true},{"declarations":["nixos/modules/misc/locate.nix"],"default":"","description":"This option defines (in the format used by cron) when the\nlocate database is updated.\nThe default is to update at 02:15 at night every day.\n","example":"","internal":false,"name":"services.locate.period","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Config options that you would like in logcheck.conf.\n","example":"","internal":false,"name":"services.logcheck.config","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Enable the logcheck cron job.\n","example":"","internal":false,"name":"services.logcheck.enable","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Extra groups for the logcheck user, for example to be able to use sendmail,\nor to access certain log files.\n","example":"","internal":false,"name":"services.logcheck.extraGroups","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Directories with extra rules.\n","example":"","internal":false,"name":"services.logcheck.extraRulesDirs","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Which log files to check.\n","example":"","internal":false,"name":"services.logcheck.files","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"This option defines extra ignore rules.\n","example":"","internal":false,"name":"services.logcheck.ignore","value":"","visible":true},{"declarations":[],"default":"","description":"Set the logcheck level. Either \"workstation\", \"server\", or \"paranoid\".\n","example":"","internal":false,"name":"services.logcheck.ignore.<name?>.level","value":"","visible":true},{"declarations":[],"default":"","description":"Regex specifying which log lines to ignore.\n","example":"","internal":false,"name":"services.logcheck.ignore.<name?>.regex","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"This option defines extra ignore rules for cronjobs.\n","example":"","internal":false,"name":"services.logcheck.ignoreCron","value":"","visible":true},{"declarations":[],"default":"","description":"Command line for the cron job. Will be turned into a regex for the logcheck ignore rule.\n","example":"","internal":false,"name":"services.logcheck.ignoreCron.<name?>.cmdline","value":"","visible":true},{"declarations":[],"default":"","description":"Set the logcheck level. Either \"workstation\", \"server\", or \"paranoid\".\n","example":"","internal":false,"name":"services.logcheck.ignoreCron.<name?>.level","value":"","visible":true},{"declarations":[],"default":"","description":"Regex specifying which log lines to ignore.\n","example":"","internal":false,"name":"services.logcheck.ignoreCron.<name?>.regex","value":"","visible":true},{"declarations":[],"default":"","description":"\"min hr dom mon dow\" crontab time args, to auto-create a cronjob too.\nLeave at null to not do this and just add a logcheck ignore rule.\n","example":"","internal":false,"name":"services.logcheck.ignoreCron.<name?>.timeArgs","value":"","visible":true},{"declarations":[],"default":"","description":"User that runs the cronjob.\n","example":"","internal":false,"name":"services.logcheck.ignoreCron.<name?>.user","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Set the logcheck level. Either \"workstation\", \"server\", or \"paranoid\".\n","example":"","internal":false,"name":"services.logcheck.level","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Email address to send reports to.\n","example":"","internal":false,"name":"services.logcheck.mailTo","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Time of day to run logcheck. A logcheck will be scheduled at xx:02 each day.\nLeave default (*) to run every hour. Of course when nothing special was logged,\nlogcheck will be silent.\n","example":"","internal":false,"name":"services.logcheck.timeOfDay","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Username for the logcheck user.\n","example":"","internal":false,"name":"services.logcheck.user","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd-logind. See man logind.conf for\navailable options.\n","example":"","internal":false,"name":"services.logind.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logrotate.nix"],"default":"","description":"The contents of the logrotate config file\n","example":"","internal":false,"name":"services.logrotate.config","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logrotate.nix"],"default":"","description":"Enable the logrotate cron job\n","example":"","internal":false,"name":"services.logrotate.enable","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"","description":"Enable logstash","example":"","internal":false,"name":"services.logstash.enable","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"","description":"logstash filter configuration","example":"","internal":false,"name":"services.logstash.filterConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"","description":"Logstash input configuration","example":"","internal":false,"name":"services.logstash.inputConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"","description":"Logstash output configuration","example":"","internal":false,"name":"services.logstash.outputConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable the GNU lshd SSH2 daemon, which allows\nsecure remote login.\n","example":"","internal":false,"name":"services.lshd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Path to the server's private key.  Note that this key must\nhave been created, e.g., using \"lsh-keygen --server |\nlsh-writekey --server\", so that you can run lshd.\n","example":"","internal":false,"name":"services.lshd.hostKey","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"List of network interfaces where listening for connections.\nWhen providing the empty list, `[]', lshd listens on all\nnetwork interfaces.\n","example":"","internal":false,"name":"services.lshd.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"If non-null, override the default login shell with the\nspecified value.\n","example":"","internal":false,"name":"services.lshd.loginShell","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable password authentication.","example":"","internal":false,"name":"services.lshd.passwordAuthentication","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"The port on which to listen for connections.\n","example":"","internal":false,"name":"services.lshd.portNumber","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable public key authentication.","example":"","internal":false,"name":"services.lshd.publicKeyAuthentication","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable remote root login.","example":"","internal":false,"name":"services.lshd.rootLogin","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable SRP key exchange and user authentication.\n","example":"","internal":false,"name":"services.lshd.srpKeyExchange","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"List of subsystem-path pairs, where the head of the pair\ndenotes the subsystem name, and the tail denotes the path to\nan executable implementing it.\n","example":"","internal":false,"name":"services.lshd.subsystems","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable syslog output.","example":"","internal":false,"name":"services.lshd.syslog","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable TCP/IP forwarding.","example":"","internal":false,"name":"services.lshd.tcpForwarding","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"","description":"Whether to enable X11 forwarding.","example":"","internal":false,"name":"services.lshd.x11Forwarding","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"Bind over an IPv4 address instead of any.\n","example":"","internal":false,"name":"services.mail.freepopsd.bind","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"Enables Freepops, a POP3 webmail wrapper.\n","example":"","internal":false,"name":"services.mail.freepopsd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"Filename of the log file or syslog to rely on the logging daemon.\n","example":"","internal":false,"name":"services.mail.freepopsd.logFile","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"Port on which the pop server will listen.\n","example":"","internal":false,"name":"services.mail.freepopsd.port","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"Group under which freepopsd will be after binding the port.\n","example":"","internal":false,"name":"services.mail.freepopsd.suid.group","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"User name under which freepopsd will be after binding the port.\n","example":"","internal":false,"name":"services.mail.freepopsd.suid.user","value":"","visible":true},{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"","description":"Max simultaneous connections.\n","example":"","internal":false,"name":"services.mail.freepopsd.threads","value":"","visible":true},{"declarations":["nixos/modules/services/mail/mail.nix"],"default":"","description":"Configuration for the sendmail setuid wrwapper (like an element of\nsecurity.setuidOwners)\";\n","example":"","internal":false,"name":"services.mail.sendmailSetuidWrapper","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"\n          Whether to enable Memcached.\n        ","example":"","internal":false,"name":"services.memcached.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"A list of extra options that will be added as a suffix when running memcached","example":"","internal":false,"name":"services.memcached.extraOptions","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"The IP address to bind to","example":"","internal":false,"name":"services.memcached.listen","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"The maximum number of simultaneous connections","example":"","internal":false,"name":"services.memcached.maxConnections","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"The maximum amount of memory to use for storage, in megabytes.","example":"","internal":false,"name":"services.memcached.maxMemory","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"The port to bind to","example":"","internal":false,"name":"services.memcached.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"Unix socket path to listen on. Setting this will disable network support","example":"","internal":false,"name":"services.memcached.socket","value":"","visible":true},{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"The user to run Memcached as","example":"","internal":false,"name":"services.memcached.user","value":"","visible":true},{"declarations":["nixos/modules/services/games/minecraft-server.nix"],"default":"","description":"If enabled, start a Minecraft Server. The listening port for\nthe server is always <literal>25565</literal>. The server\ndata will be loaded from and saved to\n<literal>/var/lib/minecraft</literal>.\n","example":"","internal":false,"name":"services.minecraft-server.enable","value":"","visible":true},{"declarations":["nixos/modules/services/games/minecraft-server.nix"],"default":"","description":"JVM options for the Minecraft Service.","example":"","internal":false,"name":"services.minecraft-server.jvmOpts","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/agetty.nix"],"default":"","description":"Welcome line printed by mingetty.\n","example":"","internal":false,"name":"services.mingetty.greetingLine","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/agetty.nix"],"default":"","description":"Help line printed by mingetty below the welcome line.\nUsed by the installation CD to give some hints on\nhow to proceed.\n","example":"","internal":false,"name":"services.mingetty.helpLine","value":"","visible":true},{"declarations":["nixos/modules/services/ttys/agetty.nix"],"default":"","description":"Bitrates to allow for agetty's listening on serial ports. Listing more\nbitrates gives more interoperability but at the cost of long delays\nfor getting a sync on the line.\n","example":"","internal":false,"name":"services.mingetty.serialSpeed","value":"","visible":true},{"declarations":["nixos/modules/services/networking/minidlna.nix"],"default":"","description":"The contents of MiniDLNA's configuration file.","example":"","internal":false,"name":"services.minidlna.config","value":"","visible":true},{"declarations":["nixos/modules/services/networking/minidlna.nix"],"default":"","description":"Whether to enable MiniDLNA, a simple DLNA server.  It serves\nmedia files such as video and music to DLNA client devices\nsuch as televisions and media players.\n","example":"","internal":false,"name":"services.minidlna.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/minidlna.nix"],"default":"","description":"Directories to be scanned for media files.  The prefixes\n<literal>A,</literal>, <literal>V,</literal> and\n<literal>P,</literal> restrict a directory to audio, video\nor image files.  The directories must be accessible to the\n<literal>minidlna</literal> user account.\n","example":"","internal":false,"name":"services.minidlna.mediaDirs","value":"","visible":true},{"declarations":["nixos/modules/services/databases/monetdb.nix"],"default":"","description":"Specifies location of Monetdb dbfarm (keeps database and auxiliary files).\n","example":"","internal":false,"name":"services.monetdb.dbfarmDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/monetdb.nix"],"default":"","description":"Whether to enable MonetDB database server.","example":"","internal":false,"name":"services.monetdb.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/monetdb.nix"],"default":"","description":"MonetDB package to use.","example":"","internal":false,"name":"services.monetdb.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/monetdb.nix"],"default":"","description":"Port to listen on.","example":"","internal":false,"name":"services.monetdb.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"IP to bind to","example":"","internal":false,"name":"services.mongodb.bind_ip","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"Location where MongoDB stores its files","example":"","internal":false,"name":"services.mongodb.dbpath","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"\n          Whether to enable the MongoDB server.\n        ","example":"","internal":false,"name":"services.mongodb.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"Append logfile instead over overwriting","example":"","internal":false,"name":"services.mongodb.logappend","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"Location where MongoDB stores its logfile","example":"","internal":false,"name":"services.mongodb.logpath","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"\n          Which MongoDB derivation to use.\n        ","example":"","internal":false,"name":"services.mongodb.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"quieter output","example":"","internal":false,"name":"services.mongodb.quiet","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"If this instance is part of a replica set, set its name here.\nOtherwise, leave empty to run as single node.\n","example":"","internal":false,"name":"services.mongodb.replSetName","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"User account under which MongoDB runs","example":"","internal":false,"name":"services.mongodb.user","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/monit.nix"],"default":"","description":"monit.conf content","example":"","internal":false,"name":"services.monit.config","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/monit.nix"],"default":"","description":"Whether to run Monit system watcher.\n","example":"","internal":false,"name":"services.monit.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/monit.nix"],"default":"","description":"What Monit supposes to be already present","example":"","internal":false,"name":"services.monit.startOn","value":"","visible":true},{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"","description":"The directory where MPD stores its state, tag cache,\nplaylists etc.\n","example":"","internal":false,"name":"services.mpd.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"","description":"Whether to enable MPD, the music player daemon.\n","example":"","internal":false,"name":"services.mpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"","description":"Extra directives added to to the end of MPD's configuration file,\nmpd.conf. Basic configuration like file location and uid/gid\nis added automatically to the beginning of the file.\n","example":"","internal":false,"name":"services.mpd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"","description":"Extra configuration added to the end of MPD's\nconfiguration file, mpd.conf.\n","example":"","internal":false,"name":"services.mpd.musicDirectory","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"Enable munin-cron. Takes care of all heavy lifting to collect data from\nnodes and draws graphs to html. Runs munin-update, munin-limits,\nmunin-graphs and munin-html in that order.\n\nHTML output is in <filename>/var/www/munin/</filename>, configure your\nfavourite webserver to serve static files.\n","example":"","internal":false,"name":"services.munin-cron.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"<filename>munin.conf</filename> extra global configuration.\nSee <link xlink:href='http://munin-monitoring.org/wiki/munin.conf' />.\nUseful to setup notifications, see\n<link xlink:href='http://munin-monitoring.org/wiki/HowToContact' />\n","example":"","internal":false,"name":"services.munin-cron.extraGlobalConfig","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"Definitions of hosts of nodes to collect data from. Needs at least one\nhosts for cron to succeed. See\n<link xlink:href='http://munin-monitoring.org/wiki/munin.conf' />\n","example":"","internal":false,"name":"services.munin-cron.hosts","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"Enable Munin Node agent. Munin node listens on 0.0.0.0 and\nby default accepts connections only from 127.0.0.1 for security reasons.\n\nSee <link xlink:href='http://munin-monitoring.org/wiki/munin-node.conf' />.\n","example":"","internal":false,"name":"services.munin-node.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"<filename>munin-node.conf</filename> extra configuration. See\n<link xlink:href='http://munin-monitoring.org/wiki/munin-node.conf' />\n","example":"","internal":false,"name":"services.munin-node.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Allow HTML in client messages, comments, and channel\ndescriptions.\n","example":"","internal":false,"name":"services.murmur.allowHtml","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Number of attempts a client is allowed to make in\n<literal>autobanTimeframe</literal> seconds, before being\nbanned for <literal>autobanTime</literal>.\n","example":"","internal":false,"name":"services.murmur.autobanAttempts","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"The amount of time an IP ban lasts (in seconds).","example":"","internal":false,"name":"services.murmur.autobanTime","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Timeframe in which a client can connect without being banned\nfor repeated attempts (in seconds).\n","example":"","internal":false,"name":"services.murmur.autobanTimeframe","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Maximum bandwidth (in bits per second) that clients may send\nspeech at.\n","example":"","internal":false,"name":"services.murmur.bandwidth","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Enable Bonjour auto-discovery, which allows clients over\nyour LAN to automatically discover Murmur servers.\n","example":"","internal":false,"name":"services.murmur.bonjour","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Require clients to authenticate via certificates.","example":"","internal":false,"name":"services.murmur.clientCertRequired","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"If enabled, start the Murmur Service.","example":"","internal":false,"name":"services.murmur.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Host to bind to. Defaults binding on all addresses.","example":"","internal":false,"name":"services.murmur.hostName","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Max length of image messages. Set 0 for no limit.","example":"","internal":false,"name":"services.murmur.imgMsgLength","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"How long to store RPC logs for in the database. Set 0 to\nkeep logs forever, or -1 to disable DB logging.\n","example":"","internal":false,"name":"services.murmur.logDays","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Required password to join server, if specified.","example":"","internal":false,"name":"services.murmur.password","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Path to PID file for Murmur daemon.","example":"","internal":false,"name":"services.murmur.pidfile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Ports to bind to (UDP and TCP).","example":"","internal":false,"name":"services.murmur.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"DNS hostname where your server can be reached. This is only\nneeded if you want your server to be accessed by its\nhostname and not IP - but the name *must* resolve on the\ninternet properly.\n","example":"","internal":false,"name":"services.murmur.registerHostname","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Public server registration name, and also the name of the\nRoot channel. Even if you don't publicly register your\nserver, you probably still want to set this.\n","example":"","internal":false,"name":"services.murmur.registerName","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Public server registry password, used authenticate your\nserver to the registry to prevent impersonation; required for\nsubsequent registry updates.\n","example":"","internal":false,"name":"services.murmur.registerPassword","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"URL website for your server.","example":"","internal":false,"name":"services.murmur.registerUrl","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Send Murmur version in UDP response.","example":"","internal":false,"name":"services.murmur.sendVersion","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Path to your SSL certificate.","example":"","internal":false,"name":"services.murmur.sslCert","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Path to your SSL key.","example":"","internal":false,"name":"services.murmur.sslKey","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Max length of text messages. Set 0 for no limit.","example":"","internal":false,"name":"services.murmur.textMsgLength","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Maximum number of concurrent clients allowed.","example":"","internal":false,"name":"services.murmur.users","value":"","visible":true},{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Welcome message for connected clients.","example":"","internal":false,"name":"services.murmur.welcome","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Location where MySQL stores its table files","example":"","internal":false,"name":"services.mysql.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"\n          Whether to enable the MySQL server.\n        ","example":"","internal":false,"name":"services.mysql.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Provide extra options to the MySQL configuration file.\n\nPlease note, that these options are added to the\n<literal>[mysqld]</literal> section so you don't need to explicitly\nstate it again.\n","example":"","internal":false,"name":"services.mysql.extraOptions","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"List of database names and their initial schemas that should be used to create databases on the first startup of MySQL","example":"","internal":false,"name":"services.mysql.initialDatabases","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"A file containing SQL statements to be executed on the first startup. Can be used for granting certain permissions on the database","example":"","internal":false,"name":"services.mysql.initialScript","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"\n          Which MySQL derivation to use.\n        ","example":"","internal":false,"name":"services.mysql.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Location of the file which stores the PID of the MySQL server","example":"","internal":false,"name":"services.mysql.pidDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Port of MySQL","example":"","internal":false,"name":"services.mysql.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Hostname of the MySQL master server","example":"","internal":false,"name":"services.mysql.replication.masterHost","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Password of the MySQL replication user","example":"","internal":false,"name":"services.mysql.replication.masterPassword","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Port number on which the MySQL master server runs","example":"","internal":false,"name":"services.mysql.replication.masterPort","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Username of the MySQL replication user","example":"","internal":false,"name":"services.mysql.replication.masterUser","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Role of the MySQL server instance. Can be either: master, slave or none","example":"","internal":false,"name":"services.mysql.replication.role","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Id of the MySQL server instance. This number must be unique for each instance","example":"","internal":false,"name":"services.mysql.replication.serverId","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Path to a file containing the root password, modified on the first startup. Not specifying a root password will leave the root password empty.","example":"","internal":false,"name":"services.mysql.rootPassword","value":"","visible":true},{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"User account under which MySQL runs","example":"","internal":false,"name":"services.mysql.user","value":"","visible":true},{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"","description":"List of database names to dump.\n","example":"","internal":false,"name":"services.mysqlBackup.databases","value":"","visible":true},{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"","description":"Whether to enable MySQL backups.\n","example":"","internal":false,"name":"services.mysqlBackup.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"","description":"Location to put the gzipped MySQL database dumps.\n","example":"","internal":false,"name":"services.mysqlBackup.location","value":"","visible":true},{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"","description":"This option defines (in the format used by cron) when the\ndatabases should be dumped.\nThe default is to update at 01:15 (at night) every day.\n","example":"","internal":false,"name":"services.mysqlBackup.period","value":"","visible":true},{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"","description":"Whether to create database dump in a single transaction\n","example":"","internal":false,"name":"services.mysqlBackup.singleTransaction","value":"","visible":true},{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"","description":"User to be used to perform backup.\n","example":"","internal":false,"name":"services.mysqlBackup.user","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/nagios/default.nix"],"default":"","description":"\n          Whether to use <link\n          xlink:href='http://www.nagios.org/'>Nagios</link> to monitor\n          your system or network.\n        ","example":"","internal":false,"name":"services.nagios.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/nagios/default.nix"],"default":"","description":"\n          Whether to enable the Nagios web interface.  You should also\n          enable Apache (<option>services.httpd.enable</option>).\n        ","example":"","internal":false,"name":"services.nagios.enableWebInterface","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/nagios/default.nix"],"default":"","description":"\n          A list of Nagios object configuration files that must define\n          the hosts, host groups, services and contacts for the\n          network that you want Nagios to monitor.\n        ","example":"","internal":false,"name":"services.nagios.objectDefs","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/nagios/default.nix"],"default":"","description":"\n          Packages to be added to the Nagios <envar>PATH</envar>.\n          Typically used to add plugins, but can be anything.\n        ","example":"","internal":false,"name":"services.nagios.plugins","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/nagios/default.nix"],"default":"","description":"\n          The URL path under which the Nagios web interface appears.\n          That is, you can access the Nagios web interface through\n          <literal>http://<replaceable>server</replaceable>/<replaceable>urlPath</replaceable></literal>.\n        ","example":"","internal":false,"name":"services.nagios.urlPath","value":"","visible":true},{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":"","description":"Whether to enable websockify to forward websocket connections to TCP connections.","example":"","internal":false,"name":"services.networking.websockify.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":"","description":"Ports to map by default.","example":"","internal":false,"name":"services.networking.websockify.portMap","value":"","visible":true},{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":"","description":"Path to the SSL certificate.","example":"","internal":false,"name":"services.networking.websockify.sslCert","value":"","visible":true},{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":"","description":"Path to the SSL key.","example":"","internal":false,"name":"services.networking.websockify.sslKey","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":"","description":"Whether to create the mount points in the exports file at startup time.","example":"","internal":false,"name":"services.nfs.server.createMountPoints","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":"","description":"Whether to enable the kernel's NFS server.\n","example":"","internal":false,"name":"services.nfs.server.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":"","description":"Contents of the /etc/exports file.  See\n<citerefentry><refentrytitle>exports</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for the format.\n","example":"","internal":false,"name":"services.nfs.server.exports","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":"","description":"Hostname or address on which NFS requests will be accepted.\nDefault is all.  See the <option>-H</option> option in\n<citerefentry><refentrytitle>nfsd</refentrytitle>\n<manvolnum>8</manvolnum></citerefentry>.\n","example":"","internal":false,"name":"services.nfs.server.hostName","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":"","description":"Number of NFS server threads.  Defaults to the recommended value of 8.\n","example":"","internal":false,"name":"services.nfs.server.nproc","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"Configuration lines appended to the generated Nginx\nconfiguration file. Commonly used by different modules\nproviding http snippets. <option>appendConfig</option>\ncan be specified more than once and it's value will be\nconcatenated (contrary to <option>config</option> which\ncan be set only once).\n","example":"","internal":false,"name":"services.nginx.appendConfig","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Verbatim nginx.conf configuration.\n        ","example":"","internal":false,"name":"services.nginx.config","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Enable the nginx Web Server.\n        ","example":"","internal":false,"name":"services.nginx.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"Group account under which nginx runs.","example":"","internal":false,"name":"services.nginx.group","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"Configuration lines to be appended inside of the http {} block.","example":"","internal":false,"name":"services.nginx.httpConfig","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Nginx package to use.\n        ","example":"","internal":false,"name":"services.nginx.package","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Directory holding all state for nginx to run.\n        ","example":"","internal":false,"name":"services.nginx.stateDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"User account under which nginx runs.","example":"","internal":false,"name":"services.nginx.user","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ngircd.nix"],"default":"","description":"The ngircd configuration (see ngircd.conf(5)).","example":"","internal":false,"name":"services.ngircd.config","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ngircd.nix"],"default":"","description":"Whether to enable the ngircd IRC server.","example":"","internal":false,"name":"services.ngircd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ngircd.nix"],"default":"","description":"The ngircd package.","example":"","internal":false,"name":"services.ngircd.package","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":"","description":"Browser used to show the manual.\n","example":"","internal":false,"name":"services.nixosManual.browser","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":"","description":"Whether to build the NixOS manual pages.\n","example":"","internal":false,"name":"services.nixosManual.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":"","description":"Whether to show the NixOS manual on one of the virtual\nconsoles.\n","example":"","internal":false,"name":"services.nixosManual.showManual","value":"","visible":true},{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":"","description":"Virtual console on which to show the manual.\n","example":"","internal":false,"name":"services.nixosManual.ttyNumber","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"If true, notbit will allow connections to to RFC 1918 addresses.","example":"","internal":false,"name":"services.notbit.allowPrivateAddresses","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"Enables the notbit daemon and provides a sendmail binary named `notbit-system-sendmail` for sending mail over the system instance of notbit. Users must be in the notbit group in order to send mail over the system notbit instance. Currently mail recipt is not supported.\n","example":"","internal":false,"name":"services.notbit.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"The addresses which notbit will use to listen for incoming connections. These addresses are advertised to connecting clients.","example":"","internal":false,"name":"services.notbit.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"Set the nice level for the notbit daemon","example":"","internal":false,"name":"services.notbit.nice","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"If true, notbit will not bootstrap an initial peerlist from bitmessage.org servers","example":"","internal":false,"name":"services.notbit.noBootstrap","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"The initial set of peers notbit will connect to.","example":"","internal":false,"name":"services.notbit.peers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"The port which the daemon listens for other bitmessage clients","example":"","internal":false,"name":"services.notbit.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/notbit.nix"],"default":"","description":"If true, notbit will only connect to peers specified by the peers option.","example":"","internal":false,"name":"services.notbit.specifiedPeersOnly","value":"","visible":true},{"declarations":["nixos/modules/services/system/nscd.nix"],"default":"","description":"Configuration to use for Name Service Cache Daemon.","example":"","internal":false,"name":"services.nscd.config","value":"","visible":true},{"declarations":["nixos/modules/services/system/nscd.nix"],"default":"","description":"Whether to enable the Name Service Cache Daemon.","example":"","internal":false,"name":"services.nscd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Whether to enable the NSD authoritative domain name server.\n","example":"","internal":false,"name":"services.nsd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Extra nsd config.\n","example":"","internal":false,"name":"services.nsd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Wheter NSD should answer VERSION.BIND and VERSION.SERVER CHAOS class queries.\n","example":"","internal":false,"name":"services.nsd.hideVersion","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Identify the server (CH TXT ID.SERVER entry).\n","example":"","internal":false,"name":"services.nsd.identity","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"What addresses the server should listen to.\n","example":"","internal":false,"name":"services.nsd.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Allow binding to non local addresses.\n","example":"","internal":false,"name":"services.nsd.ipTransparent","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Wheter to listen on IPv4 connections.\n","example":"","internal":false,"name":"services.nsd.ipv4","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Preferred EDNS buffer size for IPv4.\n","example":"","internal":false,"name":"services.nsd.ipv4EDNSSize","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Wheter to listen on IPv6 connections.\n","example":"","internal":false,"name":"services.nsd.ipv6","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Preferred EDNS buffer size for IPv6.\n","example":"","internal":false,"name":"services.nsd.ipv6EDNSSize","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Define your TSIG keys here.\n","example":"","internal":false,"name":"services.nsd.keys","value":"","visible":true},{"declarations":[],"default":"","description":"Authentication algorithm for this key.\n","example":"","internal":false,"name":"services.nsd.keys.<name>.algorithm","value":"","visible":true},{"declarations":[],"default":"","description":"Path to the file which contains the actual base64 encoded\nkey. The key will be copied into \"/var/lib/nsd/private\" before\nNSD starts. The copied file is only accessibly by the NSD\nuser.\n","example":"","internal":false,"name":"services.nsd.keys.<name>.keyFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"NSID identity (hex string, or \"ascii_somestring\").\n","example":"","internal":false,"name":"services.nsd.nsid","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Port the service should bind do.\n","example":"","internal":false,"name":"services.nsd.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"","example":"","internal":false,"name":"services.nsd.ratelimit","value":"","visible":true},{"declarations":[],"default":"","description":"Enable ratelimit capabilities.\n","example":"","internal":false,"name":"services.nsd.ratelimit.enable","value":"","visible":true},{"declarations":[],"default":"","description":"IPv4 prefix length. Addresses are grouped by netblock.\n","example":"","internal":false,"name":"services.nsd.ratelimit.ipv4PrefixLength","value":"","visible":true},{"declarations":[],"default":"","description":"IPv6 prefix length. Addresses are grouped by netblock.\n","example":"","internal":false,"name":"services.nsd.ratelimit.ipv6PrefixLength","value":"","visible":true},{"declarations":[],"default":"","description":"Max qps allowed from any query source.\n0 means unlimited. With an verbosity of 2 blocked and\nunblocked subnets will be logged.\n","example":"","internal":false,"name":"services.nsd.ratelimit.ratelimit","value":"","visible":true},{"declarations":[],"default":"","description":"Size of the hashtable. More buckets use more memory but lower\nthe chance of hash hash collisions.\n","example":"","internal":false,"name":"services.nsd.ratelimit.size","value":"","visible":true},{"declarations":[],"default":"","description":"Number of packets that get discarded before replying a SLIP response.\n0 disables SLIP responses. 1 will make every response a SLIP response.\n","example":"","internal":false,"name":"services.nsd.ratelimit.slip","value":"","visible":true},{"declarations":[],"default":"","description":"Max qps allowed from whitelisted sources.\n0 means unlimited. Set the rrl-whitelist option for specific\nqueries to apply this limit instead of the default to them.\n","example":"","internal":false,"name":"services.nsd.ratelimit.whitelistRatelimit","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"","example":"","internal":false,"name":"services.nsd.remoteControl","value":"","visible":true},{"declarations":[],"default":"","description":"Path to the client certificate signed with the server certificate.\nThis file is used by nsd-control and generated by nsd-control-setup.\n","example":"","internal":false,"name":"services.nsd.remoteControl.controlCertFile","value":"","visible":true},{"declarations":[],"default":"","description":"Path to the client private key, which is used by nsd-control\nbut not by the server. This file is generated by nsd-control-setup.\n","example":"","internal":false,"name":"services.nsd.remoteControl.controlKeyFile","value":"","visible":true},{"declarations":[],"default":"","description":"Wheter to enable remote control via nsd-control(8).\n","example":"","internal":false,"name":"services.nsd.remoteControl.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Which interfaces NSD should bind to for remote control.\n","example":"","internal":false,"name":"services.nsd.remoteControl.interfaces","value":"","visible":true},{"declarations":[],"default":"","description":"Port number for remote control operations (uses TLS over TCP).\n","example":"","internal":false,"name":"services.nsd.remoteControl.port","value":"","visible":true},{"declarations":[],"default":"","description":"Path to the server self signed certificate, which is used by the server\nbut and by nsd-control. This file is generated by nsd-control-setup.\n","example":"","internal":false,"name":"services.nsd.remoteControl.serverCertFile","value":"","visible":true},{"declarations":[],"default":"","description":"Path to the server private key, which is used by the server\nbut not by nsd-control. This file is generated by nsd-control-setup.\n","example":"","internal":false,"name":"services.nsd.remoteControl.serverKeyFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Wheter if this server will be a root server (a DNS root server, you\nusually don't want that).\n","example":"","internal":false,"name":"services.nsd.rootServer","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Number of NSD servers to fork. Put the number of CPUs to use here.\n","example":"","internal":false,"name":"services.nsd.serverCount","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Statistics are produced every number of seconds. Prints to log.\nIf null no statistics are logged.\n","example":"","internal":false,"name":"services.nsd.statistics","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Maximum number of concurrent TCP connections per server.\n","example":"","internal":false,"name":"services.nsd.tcpCount","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Maximum number of queries served on a single TCP connection.\n0 means no maximum.\n","example":"","internal":false,"name":"services.nsd.tcpQueryCount","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"TCP timeout in seconds.\n","example":"","internal":false,"name":"services.nsd.tcpTimeout","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Verbosity level.\n","example":"","internal":false,"name":"services.nsd.verbosity","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Number of seconds between reloads triggered by xfrd.\n","example":"","internal":false,"name":"services.nsd.xfrdReloadTimeout","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Wheter to check mtime of all zone files on start and sighup.\n","example":"","internal":false,"name":"services.nsd.zonefilesCheck","value":"","visible":true},{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Define your zones here. Zones can cascade other zones and therefore\ninherit settings from parent zones. Look at the definition of\nchildren to learn about inheritance and child zones.\nThe given example will define 3 zones (example.(com|org|net).). Both\nexample.com. and example.org. inherit their configuration from\nserverGroup1.\n","example":"","internal":false,"name":"services.nsd.zones","value":"","visible":true},{"declarations":[],"default":"","description":"If NSD as secondary server should be allowed to AXFR if the primary\nserver does not allow IXFR.\n","example":"","internal":false,"name":"services.nsd.zones.<name>.allowAXFRFallback","value":"","visible":true},{"declarations":[],"default":"","description":"Listed primary servers are allowed to notify this secondary server.\n<screen><![CDATA[\nFormat: <ip> <key-name | NOKEY | BLOCKED>\n\n<ip> either a plain IPv4/IPv6 address or range. Valid patters for ranges:\n* 10.0.0.0/24            # via subnet size\n* 10.0.0.0&255.255.255.0 # via subnet mask\n* 10.0.0.1-10.0.0.254    # via range\n\nA optional port number could be added with a '@':\n* 2001:1234::1@1234\n\n<key-name | NOKEY | BLOCKED>\n* <key-name> will use the specified TSIG key\n* NOKEY      no TSIG signature is required\n* BLOCKED    notifies from non-listed or blocked IPs will be ignored\n* ]]></screen>\n","example":"","internal":false,"name":"services.nsd.zones.<name>.allowNotify","value":"","visible":true},{"declarations":[],"default":"","description":"Children zones inherit all options of their parents. Attributes\ndefined in a child will overwrite the ones of its parent. Only\nleaf zones will be actually served. This way it's possible to\ndefine maybe zones which share most attributes without\nduplicating everything. This mechanism replaces nsd's patterns\nin a save and functional way.\n","example":"","internal":false,"name":"services.nsd.zones.<name>.children","value":"","visible":true},{"declarations":[],"default":"","description":"The actual zone data. This is the content of your zone file.\nUse imports or pkgs.lib.readFile if you don't want this data in your config file.\n","example":"","internal":false,"name":"services.nsd.zones.<name>.data","value":"","visible":true},{"declarations":[],"default":"","description":"This primary server will notify all given secondary servers about\nzone changes.\n<screen><![CDATA[\nFormat: <ip> <key-name | NOKEY>\n\n<ip> a plain IPv4/IPv6 address with on optional port number (ip@port)\n\n<key-name | NOKEY>\n* <key-name> sign notifies with the specified key\n* NOKEY      don't sign notifies\n]]></screen>\n","example":"","internal":false,"name":"services.nsd.zones.<name>.notify","value":"","visible":true},{"declarations":[],"default":"","description":"Specifies the number of retries for failed notifies. Set this along with notify.\n","example":"","internal":false,"name":"services.nsd.zones.<name>.notifyRetry","value":"","visible":true},{"declarations":[],"default":"","description":"This address will be used for zone-transfere requests if configured\nas a secondary server or notifications in case of a primary server.\nSupply either a plain IPv4 or IPv6 address with an optional port\nnumber (ip@port).\n","example":"","internal":false,"name":"services.nsd.zones.<name>.outgoingInterface","value":"","visible":true},{"declarations":[],"default":"","description":"Allow these IPs and TSIG to transfer zones, addr TSIG|NOKEY|BLOCKED\naddress range 192.0.2.0/24, 1.2.3.4&amp;255.255.0.0, 3.0.2.20-3.0.2.40\n","example":"","internal":false,"name":"services.nsd.zones.<name>.provideXFR","value":"","visible":true},{"declarations":[],"default":"","description":"Format: <code>[AXFR|UDP] &lt;ip-address&gt; &lt;key-name | NOKEY&gt;</code>\n","example":"","internal":false,"name":"services.nsd.zones.<name>.requestXFR","value":"","visible":true},{"declarations":[],"default":"","description":"Whitelists the given rrl-types.\nThe RRL classification types are:  nxdomain,  error, referral, any,\nrrsig, wildcard, nodata, dnskey, positive, all\n","example":"","internal":false,"name":"services.nsd.zones.<name>.rrlWhitelist","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"Overridable configuration file contents to use for ntopng. By\ndefault, use the contents automatically generated by NixOS.\n","example":"","internal":false,"name":"services.ntopng.configText","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"Enable ntopng, a high-speed web-based traffic analysis and flow\ncollection tool.\n\nWith the default configuration, ntopng monitors all network\ninterfaces and displays its findings at http://localhost:3000. Default username and password is admin/admin.\n\nSee the ntopng(8) manual page and http://www.ntop.org/products/ntop/\nfor more info.\n\nNote that enabling ntopng will also enable redis (key-value\ndatabase server) for persistent data storage.\n","example":"","internal":false,"name":"services.ntopng.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"Configuration lines that will be appended to the generated ntopng\nconfiguration file. Note that this mechanism does not work when the\nmanual <option>configText</option> option is used.\n","example":"","internal":false,"name":"services.ntopng.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"Sets the HTTP port of the embedded web server.\n","example":"","internal":false,"name":"services.ntopng.http-port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"List of interfaces to monitor. Use \"any\" to monitor all interfaces.\n","example":"","internal":false,"name":"services.ntopng.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntpd.nix"],"default":"","description":"Whether to synchronise your machine's time using the NTP\nprotocol.\n","example":"","internal":false,"name":"services.ntp.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ntpd.nix"],"default":"","description":"The set of NTP servers from which to synchronise.\n","example":"","internal":false,"name":"services.ntp.servers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/oidentd.nix"],"default":"","description":"Whether to enable ‘oidentd’, an implementation of the Ident\nprotocol (RFC 1413).  It allows remote systems to identify the\nname of the user associated with a TCP connection.\n","example":"","internal":false,"name":"services.oidentd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"","description":"Cache directory.","example":"","internal":false,"name":"services.openafsClient.cacheDirectory","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"","description":"Cache size.","example":"","internal":false,"name":"services.openafsClient.cacheSize","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"","description":"Cell name.","example":"","internal":false,"name":"services.openafsClient.cellName","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"","description":"Whether to enable (weak) protocol encryption.","example":"","internal":false,"name":"services.openafsClient.crypt","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"","description":"Whether to enable the OpenAFS client.","example":"","internal":false,"name":"services.openafsClient.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"","description":"Minimal cell list in /afs.","example":"","internal":false,"name":"services.openafsClient.sparse","value":"","visible":true},{"declarations":["nixos/modules/services/networking/openfire.nix"],"default":"","description":"\n          Whether to enable OpenFire XMPP server.\n        ","example":"","internal":false,"name":"services.openfire.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/openfire.nix"],"default":"","description":"\n          Whether you use PostgreSQL service for your storage back-end.\n        ","example":"","internal":false,"name":"services.openfire.usePostgreSQL","value":"","visible":true},{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"","description":"\n          Whether to enable the ldap server.\n        ","example":"","internal":false,"name":"services.openldap.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"","description":"\n          sldapd.conf configuration\n        ","example":"","internal":false,"name":"services.openldap.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"","description":"Group account under which slapd runs.","example":"","internal":false,"name":"services.openldap.group","value":"","visible":true},{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"","description":"User account under which slapd runs.","example":"","internal":false,"name":"services.openldap.user","value":"","visible":true},{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":"","description":"Whether to enable the OpenSMTPD server.","example":"","internal":false,"name":"services.opensmtpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":"","description":"Extra command line arguments provided when the smtpd process\nis started.\n","example":"","internal":false,"name":"services.opensmtpd.extraServerArgs","value":"","visible":true},{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":"","description":"The contents of the smtpd.conf configuration file. See the\nOpenSMTPD documentation for syntax information. If this option\nis left empty, the OpenSMTPD server will not start.\n","example":"","internal":false,"name":"services.opensmtpd.serverConfiguration","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Whether to enable the SFTP subsystem in the SSH daemon.  This\nenables the use of commands such as <command>sftp</command> and\n<command>sshfs</command>.\n","example":"","internal":false,"name":"services.openssh.allowSFTP","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Files from with authorized keys are read.","example":"","internal":false,"name":"services.openssh.authorizedKeysFiles","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Specifies whether challenge/response authentication is allowed.\n","example":"","internal":false,"name":"services.openssh.challengeResponseAuthentication","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Whether to enable the OpenSSH secure shell daemon, which\nallows secure remote logins.\n","example":"","internal":false,"name":"services.openssh.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Verbatim contents of <filename>sshd_config</filename>.","example":"","internal":false,"name":"services.openssh.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Whether to allow X11 connections to be forwarded.\n","example":"","internal":false,"name":"services.openssh.forwardX11","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Specifies whether remote hosts are allowed to connect to\nports forwarded for the client.  See\n<citerefentry><refentrytitle>sshd_config</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.\n","example":"","internal":false,"name":"services.openssh.gatewayPorts","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"NixOS can automatically generate SSH host keys.  This option\nspecifies the path, type and size of each key.  See\n<citerefentry><refentrytitle>ssh-keygen</refentrytitle>\n<manvolnum>1</manvolnum></citerefentry> for supported types\nand sizes.\n","example":"","internal":false,"name":"services.openssh.hostKeys","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"The set of system-wide known SSH hosts.\n","example":"","internal":false,"name":"services.openssh.knownHosts","value":"","visible":true},{"declarations":[],"default":"","description":"A list of host names and/or IP numbers used for accessing\nthe host's ssh service.\n","example":"","internal":false,"name":"services.openssh.knownHosts.<name?>.hostNames","value":"","visible":true},{"declarations":[],"default":"","description":"The public key data for the host. You can fetch a public key\nfrom a running SSH server with the <command>ssh-keyscan</command>\ncommand.\n","example":"","internal":false,"name":"services.openssh.knownHosts.<name?>.publicKey","value":"","visible":true},{"declarations":[],"default":"","description":"The path to the public key file for the host. The public\nkey file is read at build time and saved in the Nix store.\nYou can fetch a public key file from a running SSH server\nwith the <command>ssh-keyscan</command> command.\n","example":"","internal":false,"name":"services.openssh.knownHosts.<name?>.publicKeyFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Specifies whether password authentication is allowed.\n","example":"","internal":false,"name":"services.openssh.passwordAuthentication","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Whether the root user can login using ssh. Valid values are\n<literal>yes</literal>, <literal>without-password</literal>,\n<literal>forced-commands-only</literal> or\n<literal>no</literal>.\n","example":"","internal":false,"name":"services.openssh.permitRootLogin","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Specifies on which ports the SSH daemon listens.\n","example":"","internal":false,"name":"services.openssh.ports","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"If set, <command>sshd</command> is socket-activated; that\nis, instead of having it permanently running as a daemon,\nsystemd will start an instance for each incoming connection.\n","example":"","internal":false,"name":"services.openssh.startWhenNeeded","value":"","visible":true},{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":"","description":"Whether to enable OpenVPN.","example":"","internal":false,"name":"services.openvpn.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":"","description":"Each attribute of this option defines a systemd service that\nruns an OpenVPN instance.  These can be OpenVPN servers or\nclients.  The name of each systemd service is\n<literal>openvpn-<replaceable>name</replaceable>.service</literal>,\nwhere <replaceable>name</replaceable> is the corresponding\nattribute name.\n","example":"","internal":false,"name":"services.openvpn.servers","value":"","visible":true},{"declarations":[],"default":"","description":"Whether this OpenVPN instance should be started automatically.","example":"","internal":false,"name":"services.openvpn.servers.<name>.autoStart","value":"","visible":true},{"declarations":[],"default":"","description":"Configuration of this OpenVPN instance.  See\n<citerefentry><refentrytitle>openvpn</refentrytitle><manvolnum>8</manvolnum></citerefentry>\nfor details.\n","example":"","internal":false,"name":"services.openvpn.servers.<name>.config","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed when the instance is shutting down.\n","example":"","internal":false,"name":"services.openvpn.servers.<name>.down","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed when the instance is starting.\n","example":"","internal":false,"name":"services.openvpn.servers.<name>.up","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/pcscd.nix"],"default":"","description":"Whether to enable the PCSC-Lite daemon.","example":"","internal":false,"name":"services.pcscd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/phpfpm.nix"],"default":"","description":"Extra configuration that should be put in the global section of\nthe PHP FPM configuration file. Do not specify the options\n<literal>pid</literal>, <literal>error_log</literal> or\n<literal>daemonize</literal> here, since they are generated by\nNixOS.\n","example":"","internal":false,"name":"services.phpfpm.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/phpfpm.nix"],"default":"","description":"The PHP package to use for running the FPM service.\n","example":"","internal":false,"name":"services.phpfpm.phpPackage","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/phpfpm.nix"],"default":"","description":"A mapping between PHP FPM pool names and their configurations.\nSee the documentation on <literal>php-fpm.conf</literal> for\ndetails on configuration directives. If no pools are defined,\nthe phpfpm service is disabled.\n","example":"","internal":false,"name":"services.phpfpm.poolConfigs","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Full (!) list of domains we deliver locally. Leave blank for\n          acceptable Postfix default.\n        ","example":"","internal":false,"name":"services.postfix.destination","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Domain to use. Leave blank to use hostname minus first component.\n        ","example":"","internal":false,"name":"services.postfix.domain","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"Whether to run the Postfix mail server.","example":"","internal":false,"name":"services.postfix.enable","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Additional entries to put verbatim into aliases file.\n        ","example":"","internal":false,"name":"services.postfix.extraAliases","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Extra lines to be added verbatim to the main.cf configuration file.\n        ","example":"","internal":false,"name":"services.postfix.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"Extra lines to append to the generated master.cf file.","example":"","internal":false,"name":"services.postfix.extraMasterConf","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"What to call the Postfix group (must be used only for postfix).","example":"","internal":false,"name":"services.postfix.group","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Hostname to use. Leave blank to use just the hostname of machine.\n          It should be FQDN.\n        ","example":"","internal":false,"name":"services.postfix.hostname","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Whether relay specified is just domain whose MX must be used.\n        ","example":"","internal":false,"name":"services.postfix.lookupMX","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Net masks for trusted - allowed to relay mail to third parties -\n          hosts. Leave empty to use mynetworks_style configuration or use\n          default (localhost-only).\n        ","example":"","internal":false,"name":"services.postfix.networks","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Name of standard way of trusted network specification to use,\n          leave blank if you specify it explicitly or if you want to use\n          default (localhost-only).\n        ","example":"","internal":false,"name":"services.postfix.networksStyle","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Origin to use in outgoing e-mail. Leave blank to use hostname.\n        ","example":"","internal":false,"name":"services.postfix.origin","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"Who should receive postmaster e-mail.","example":"","internal":false,"name":"services.postfix.postmasterAlias","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Delimiter for address extension: so mail to user+test can be handled by ~user/.forward+test\n        ","example":"","internal":false,"name":"services.postfix.recipientDelimiter","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          List of domains we agree to relay to. Default is the same as\n          destination.\n        ","example":"","internal":false,"name":"services.postfix.relayDomains","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Mail relay for outbound mail.\n        ","example":"","internal":false,"name":"services.postfix.relayHost","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Who should receive root e-mail. Blank for no redirection.\n        ","example":"","internal":false,"name":"services.postfix.rootAlias","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"Whether to set the system sendmail to postfix's.","example":"","internal":false,"name":"services.postfix.setSendmail","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          How to call postfix setgid group (for postdrop). Should\n          be uniquely used group.\n        ","example":"","internal":false,"name":"services.postfix.setgidGroup","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"SSL certificate of CA.","example":"","internal":false,"name":"services.postfix.sslCACert","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"SSL certificate to use.","example":"","internal":false,"name":"services.postfix.sslCert","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"SSL key to use.","example":"","internal":false,"name":"services.postfix.sslKey","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"What to call the Postfix user (must be used only for postfix).","example":"","internal":false,"name":"services.postfix.user","value":"","visible":true},{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Entries for the virtual alias map.\n        ","example":"","internal":false,"name":"services.postfix.virtual","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Defines how users authenticate themselves to the server. By\ndefault, \"trust\" access to local users will always be granted\nalong with any other custom options. If you do not want this,\nset this option using \"pkgs.lib.mkForce\" to override this\nbehaviour.\n","example":"","internal":false,"name":"services.postgresql.authentication","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Data directory for PostgreSQL.\n","example":"","internal":false,"name":"services.postgresql.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Whether to run PostgreSQL.\n","example":"","internal":false,"name":"services.postgresql.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Whether PostgreSQL should listen on all network interfaces.\nIf disabled, the database can only be accessed via its Unix\ndomain socket or via TCP connections to localhost.\n","example":"","internal":false,"name":"services.postgresql.enableTCPIP","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Additional text to be appended to <filename>postgresql.conf</filename>.","example":"","internal":false,"name":"services.postgresql.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"When this list contains elements a new store path is created.\nPostgreSQL and the elments are symlinked into it. Then pg_config,\npostgres and pc_ctl are copied to make them use the new\n$out/lib directory as pkglibdir. This makes it possible to use postgis\nwithout patching the .sql files which reference $libdir/postgis-1.5.\n","example":"","internal":false,"name":"services.postgresql.extraPlugins","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Defines the mapping from system users to database users.\n","example":"","internal":false,"name":"services.postgresql.identMap","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"A file containing SQL statements to execute on first startup.\n","example":"","internal":false,"name":"services.postgresql.initialScript","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"PostgreSQL package to use.\n","example":"","internal":false,"name":"services.postgresql.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"The port on which PostgreSQL listens.\n","example":"","internal":false,"name":"services.postgresql.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Contents of the <filename>recovery.conf</filename> file.\n","example":"","internal":false,"name":"services.postgresql.recoveryConfig","value":"","visible":true},{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":"","description":"List of database names to dump.\n","example":"","internal":false,"name":"services.postgresqlBackup.databases","value":"","visible":true},{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":"","description":"Whether to enable PostgreSQL dumps.\n","example":"","internal":false,"name":"services.postgresqlBackup.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":"","description":"Location to put the gzipped PostgreSQL database dumps.\n","example":"","internal":false,"name":"services.postgresqlBackup.location","value":"","visible":true},{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":"","description":"This option defines (in the format used by cron) when the\ndatabases should be dumped.\nThe default is to update at 01:15 (at night) every day.\n","example":"","internal":false,"name":"services.postgresqlBackup.period","value":"","visible":true},{"declarations":["nixos/modules/services/networking/prayer.nix"],"default":"","description":"Whether to run the prayer webmail http server.\n","example":"","internal":false,"name":"services.prayer.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/prayer.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the configuration file.\n","example":"","internal":false,"name":"services.prayer.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/prayer.nix"],"default":"","description":"Port the prayer http server is listening to.\n","example":"","internal":false,"name":"services.prayer.port","value":"","visible":true},{"declarations":["nixos/modules/security/prey.nix"],"default":"","description":"API key obtained from https://panel.preyproject.com/profile","example":"","internal":false,"name":"services.prey.apiKey","value":"","visible":true},{"declarations":["nixos/modules/security/prey.nix"],"default":"","description":"Device Key obtained from https://panel.preyproject.com/devices (and clicking on the device)","example":"","internal":false,"name":"services.prey.deviceKey","value":"","visible":true},{"declarations":["nixos/modules/security/prey.nix"],"default":"","description":"Enables http://preyproject.com/ bash client. Be sure to specify api and device keys.\nOnce setup, cronjob will run evert 15 minutes and report status.\n","example":"","internal":false,"name":"services.prey.enable","value":"","visible":true},{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"The contents of the configuration file of the CUPS daemon\n(<filename>cupsd.conf</filename>).\n","example":"","internal":false,"name":"services.printing.cupsdConf","value":"","visible":true},{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"CUPS drivers to use. Drivers provided by CUPS, Ghostscript\nand Samba are added unconditionally.\n","example":"","internal":false,"name":"services.printing.drivers","value":"","visible":true},{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"Whether to enable printing support through the CUPS daemon.\n","example":"","internal":false,"name":"services.printing.enable","value":"","visible":true},{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"A list of addresses and ports on which to listen.\n","example":"","internal":false,"name":"services.printing.listenAddresses","value":"","visible":true},{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"CUPSd temporary directory.\n","example":"","internal":false,"name":"services.printing.tempDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":"","description":"Whether to run the machine as a HTTP proxy server.\n","example":"","internal":false,"name":"services.privoxy.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the configuration file.\n","example":"","internal":false,"name":"services.privoxy.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":"","description":"Address the proxy server is listening to.\n","example":"","internal":false,"name":"services.privoxy.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":"","description":"Location for privoxy log files.\n","example":"","internal":false,"name":"services.privoxy.logDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"","description":"The directory holding configuration files, the SQlite database and the SSL Cert.\n","example":"","internal":false,"name":"services.quassel.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"","description":"Whether to run the Quassel IRC client daemon.\n","example":"","internal":false,"name":"services.quassel.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"","description":"The interface the Quassel daemon will be listening to.  If `127.0.0.1',\nonly clients on the local host can connect to it; if `0.0.0.0', clients\ncan access it from any network interface.\n","example":"","internal":false,"name":"services.quassel.interface","value":"","visible":true},{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"","description":"The port number the Quassel daemon will be listening to.\n","example":"","internal":false,"name":"services.quassel.portNumber","value":"","visible":true},{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"","description":"The existing user the Quassel daemon should run as. If left empty, a default \"quassel\" user will be created.\n","example":"","internal":false,"name":"services.quassel.user","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"","description":"Data directory for rabbitmq.\n","example":"","internal":false,"name":"services.rabbitmq.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"","description":"Whether to enable the RabbitMQ server, an Advanced Message\nQueuing Protocol (AMQP) broker.\n","example":"","internal":false,"name":"services.rabbitmq.enable","value":"","visible":true},{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"","description":"IP address on which RabbitMQ will listen for AMQP\nconnections.  Set to the empty string to listen on all\ninterfaces.  Note that RabbitMQ creates a user named\n<literal>guest</literal> with password\n<literal>guest</literal> by default, so you should delete\nthis user if you intend to allow external access.\n","example":"","internal":false,"name":"services.rabbitmq.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/networking/radvd.nix"],"default":"","description":"The contents of the radvd configuration file.\n","example":"","internal":false,"name":"services.radvd.config","value":"","visible":true},{"declarations":["nixos/modules/services/networking/radvd.nix"],"default":"","description":"Whether to enable the Router Advertisement Daemon\n(<command>radvd</command>), which provides link-local\nadvertisements of IPv6 router addresses and prefixes using\nthe Neighbor Discovery Protocol (NDP).  This enables\nstateless address autoconfiguration in IPv6 clients on the\nnetwork.\n","example":"","internal":false,"name":"services.radvd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/rdnssd.nix"],"default":"","description":"Whether to enable the RDNSS daemon\n(<command>rdnssd</command>), which configures DNS servers in\n<filename>/etc/resolv.conf</filename> from RDNSS\nadvertisements sent by IPv6 routers.\n","example":"","internal":false,"name":"services.rdnssd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"How often to fsync the append-only log, options: no, always, everysec","example":"","internal":false,"name":"services.redis.appendFsync","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"By default data is only periodically persisted to disk, enable this option to use an append-only file for improved persistence.","example":"","internal":false,"name":"services.redis.appendOnly","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Filename for the append-only file (stored inside of dbpath)","example":"","internal":false,"name":"services.redis.appendOnlyFilename","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"The IP interface to bind to","example":"","internal":false,"name":"services.redis.bind","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Set the number of databases.","example":"","internal":false,"name":"services.redis.databases","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"The filename where to dump the DB","example":"","internal":false,"name":"services.redis.dbFilename","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"The DB will be written inside this directory, with the filename specified using the 'dbFilename' configuration","example":"","internal":false,"name":"services.redis.dbpath","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Whether to enable the Redis server.","example":"","internal":false,"name":"services.redis.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Extra configuration options for redis.conf","example":"","internal":false,"name":"services.redis.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Specify the server verbosity level, options: debug, verbose, notice, warning","example":"","internal":false,"name":"services.redis.logLevel","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Specify the log file name. Also 'stdout' can be used to force Redis to log on the standard output.","example":"","internal":false,"name":"services.redis.logfile","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"If the master is password protected (using the requirePass configuration)\n        it is possible to tell the slave to authenticate before starting the replication synchronization\n        process, otherwise the master will refuse the slave request.\n        (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE)","example":"","internal":false,"name":"services.redis.masterAuth","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Which Redis derivation to use.","example":"","internal":false,"name":"services.redis.package","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"","example":"","internal":false,"name":"services.redis.pidFile","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"The port for Redis to listen to","example":"","internal":false,"name":"services.redis.port","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Password for database (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE)","example":"","internal":false,"name":"services.redis.requirePass","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"The schedule in which data is persisted to disk, represented as a list of lists where the first element represent the amount of seconds and the second the number of changes.","example":"","internal":false,"name":"services.redis.save","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"An attribute set with two attributes: ip and port to which this redis instance acts as a slave","example":"","internal":false,"name":"services.redis.slaveOf","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Log queries whose execution take longer than X in milliseconds","example":"","internal":false,"name":"services.redis.slowLogLogSlowerThan","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Maximum number of items to keep in slow log","example":"","internal":false,"name":"services.redis.slowLogMaxLen","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Enable logging to the system logger.","example":"","internal":false,"name":"services.redis.syslog","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"The path to the socket to bind to","example":"","internal":false,"name":"services.redis.unixSocket","value":"","visible":true},{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"User account under which Redis runs","example":"","internal":false,"name":"services.redis.user","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Screen brightness to apply during the day (between 0.1 and 1.0)","example":"","internal":false,"name":"services.redshift.brightness.day","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Screen brightness to apply during the night (between 0.1 and 1.0)","example":"","internal":false,"name":"services.redshift.brightness.night","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Enable Redshift to change your screen's colour temperature depending on the time of day","example":"","internal":false,"name":"services.redshift.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Your current latitude","example":"","internal":false,"name":"services.redshift.latitude","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Your current longitude","example":"","internal":false,"name":"services.redshift.longitude","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Colour temperature to use during day time","example":"","internal":false,"name":"services.redshift.temperature.day","value":"","visible":true},{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"","description":"Colour temperature to use during night time","example":"","internal":false,"name":"services.redshift.temperature.night","value":"","visible":true},{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"Whether to enable rippled","example":"","internal":false,"name":"services.rippled.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"\t  Extra lines to be added verbatim to the rippled.cfg configuration file.\n\t","example":"","internal":false,"name":"services.rippled.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"\t  IP address or domain to bind to allow external connections from peers.\n\t  Defaults to not binding, which disallows external connections from peers.\n","example":"","internal":false,"name":"services.rippled.peerIp","value":"","visible":true},{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"\t  If peerIp is supplied, corresponding port to bind to for peer connections.\n\t","example":"","internal":false,"name":"services.rippled.peerPort","value":"","visible":true},{"declarations":["nixos/modules/services/misc/rogue.nix"],"default":"","description":"Whether to enable the Rogue game on one of the virtual\nconsoles.\n","example":"","internal":false,"name":"services.rogue.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/rogue.nix"],"default":"","description":"Virtual console on which to run Rogue.\n","example":"","internal":false,"name":"services.rogue.tty","value":"","visible":true},{"declarations":["nixos/modules/services/networking/rpcbind.nix"],"default":"","description":"Whether to enable `rpcbind', an ONC RPC directory service\nnotably used by NFS and NIS, and which can be queried\nusing the rpcinfo(1) command. `rpcbind` is a replacement for\n`portmap`.\n","example":"","internal":false,"name":"services.rpcbind.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":"","description":"Periodicity at which intervals should be run by cron.\nNote that the intervals also have to exist in configuration\nas retain options.\n","example":"","internal":false,"name":"services.rsnapshot.cronIntervals","value":"","visible":true},{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":"","description":"Whether to enable rsnapshot backups.","example":"","internal":false,"name":"services.rsnapshot.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":"","description":"rsnapshot configuration option in addition to the defaults from\nrsnapshot and this module.\n\nNote that tabs are required to separate option arguments, and\ndirectory names require trailing slashes.\n\nThe \"extra\" in the option name might be a little misleading right\nnow, as it is required to get a functional configuration.\n","example":"","internal":false,"name":"services.rsnapshot.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"\t  IP address the daemon will listen on; rsyncd will listen on\n\t  all addresses if this is not specified.\n\t","example":"","internal":false,"name":"services.rsyncd.address","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"Whether to enable the rsync daemon.","example":"","internal":false,"name":"services.rsyncd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"\t  Lines of configuration to add to rsyncd globally.\n\t  See <literal>man rsyncd.conf</literal> for more options.\n\t","example":"","internal":false,"name":"services.rsyncd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"The list of file paths to export.","example":"","internal":false,"name":"services.rsyncd.modules","value":"","visible":true},{"declarations":[],"default":"","description":"\t      Description string that is displayed next to the module name\n\t      when clients obtain a list of available modules.\n\t    ","example":"","internal":false,"name":"services.rsyncd.modules.*.comment","value":"","visible":true},{"declarations":[],"default":"","description":"\t      Lines of configuration to add to this module.\n\t      See <literal>man rsyncd.conf</literal> for more options.\n\t    ","example":"","internal":false,"name":"services.rsyncd.modules.*.extraConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Name of export module.","example":"","internal":false,"name":"services.rsyncd.modules.*.name","value":"","visible":true},{"declarations":[],"default":"","description":"Directory to make available in this module.","example":"","internal":false,"name":"services.rsyncd.modules.*.path","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"\t  Message of the day to display to clients on each connect.\n\t  This usually contains site information and any legal notices.\n\t","example":"","internal":false,"name":"services.rsyncd.motd","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"TCP port the daemon will listen on.","example":"","internal":false,"name":"services.rsyncd.port","value":"","visible":true},{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":"","description":"The default <filename>syslog.conf</filename> file configures a\nfairly standard setup of log files, which can be extended by\nmeans of <varname>extraConfig</varname>.\n","example":"","internal":false,"name":"services.rsyslogd.defaultConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":"","description":"Whether to enable syslogd.  Note that systemd also logs\nsyslog messages, so you normally don't need to run syslogd.\n","example":"","internal":false,"name":"services.rsyslogd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":"","description":"Additional text appended to <filename>syslog.conf</filename>,\ni.e. the contents of <varname>defaultConfig</varname>.\n","example":"","internal":false,"name":"services.rsyslogd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":"","description":"Additional parameters passed to <command>rsyslogd</command>.\n","example":"","internal":false,"name":"services.rsyslogd.extraParams","value":"","visible":true},{"declarations":["nixos/modules/services/networking/sabnzbd.nix"],"default":"","description":"Path to config file. (You need to create this file yourself!)","example":"","internal":false,"name":"services.sabnzbd.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/sabnzbd.nix"],"default":"","description":"Whether to enable the sabnzbd FTP server.","example":"","internal":false,"name":"services.sabnzbd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"\n          internal use to pass filepath to samba pam module\n        ","example":"","internal":false,"name":"services.samba.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"Whether to share /home/smbd as 'default'.","example":"","internal":false,"name":"services.samba.defaultShare.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"Whether to allow guest access to default share.","example":"","internal":false,"name":"services.samba.defaultShare.guest","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"Whether to allow write access to default share.","example":"","internal":false,"name":"services.samba.defaultShare.writeable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"\n          Whether to enable Samba, which provides file and print\n          services to Windows clients through the SMB/CIFS protocol.\n        ","example":"","internal":false,"name":"services.samba.enable","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"\n          additional global section and extra section lines go in here.\n        ","example":"","internal":false,"name":"services.samba.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"Whether to enable the WINS NSS (Name Service Switch) plug-in.\nEnabling it allows applications to resolve WINS/NetBIOS names (a.k.a.\nWindows machine names) by transparently querying the winbindd daemon.\n","example":"","internal":false,"name":"services.samba.nsswins","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"Samba security type","example":"","internal":false,"name":"services.samba.securityType","value":"","visible":true},{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"\n          enabling this will add a line directly after pam_unix.so.\n          Whenever a password is changed the samba password will be updated as well.\n          However you still yave to add the samba password once using smbpasswd -a user\n          If you don't want to maintain an extra pwd database you still can send plain text\n          passwords which is not secure.\n        ","example":"","internal":false,"name":"services.samba.syncPasswordsByPam","value":"","visible":true},{"declarations":["nixos/modules/services/networking/searx.nix"],"default":"","description":"\n          The path of the Searx server configuration file. If no file\n          is specified, a default file is used (default config file has\n          debug mode enabled).\n        ","example":"","internal":false,"name":"services.searx.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/searx.nix"],"default":"","description":"\n          Whether to enable the Searx server. See https://github.com/asciimoo/searx\n        ","example":"","internal":false,"name":"services.searx.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/sitecopy-backup.nix"],"default":"","description":"List of attributesets describing the backups.\n\nUsername/password are extracted from <filename>/var/spool/sitecopy/sitecopy.secrets</filename> at activation\ntime. The secrets file lines should have the following structure:\n<screen>\n  server username password\n</screen>\n","example":"","internal":false,"name":"services.sitecopy.backups","value":"","visible":true},{"declarations":["nixos/modules/services/backup/sitecopy-backup.nix"],"default":"","description":"Whether to enable sitecopy backups of specified directories.\n","example":"","internal":false,"name":"services.sitecopy.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/sitecopy-backup.nix"],"default":"","description":"This option defines (in the format used by cron) when the\nsitecopy backup are being run.\nThe default is to update at 04:15 (at night) every day.\n","example":"","internal":false,"name":"services.sitecopy.period","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"","description":"Additional options for each device that is monitored. The example\nturns on SMART Automatic Offline Testing on startup, and schedules short\nself-tests daily, and long self-tests weekly.\n","example":"","internal":false,"name":"services.smartd.deviceOpts","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"","description":"List of devices to monitor. By default -- if this list is empty --,\nsmartd will monitor all devices connected to the machine at the time\nit's being run. Configuring this option has the added benefit of\nenabling e-mail notifications to \"root\" every time smartd detects an\nerror.\n","example":"","internal":false,"name":"services.smartd.devices","value":"","visible":true},{"declarations":[],"default":"","description":"Location of the device.","example":"","internal":false,"name":"services.smartd.devices.*.device","value":"","visible":true},{"declarations":[],"default":"","description":"Options that determine how smartd monitors the device.","example":"","internal":false,"name":"services.smartd.devices.*.options","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"","description":"Run smartd from the smartmontools package. Note that e-mail\nnotifications will not be enabled unless you configure the list of\ndevices with <varname>services.smartd.devices</varname> as well.\n","example":"","internal":false,"name":"services.smartd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"Enables the solr service.\n","example":"","internal":false,"name":"services.solr.enable","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"List of paths pointing to jars. Jars are copied to commonLibFolder to be available to java/solr.\n","example":"","internal":false,"name":"services.solr.extraJars","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"Extra command line options given to the java process running\nsolr.\n","example":"","internal":false,"name":"services.solr.extraJavaOptions","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"Extra command line options given to the Winstone, which is\nthe servlet container hosting solr.\n","example":"","internal":false,"name":"services.solr.extraWinstoneOptions","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"The group that will own the working directory.\n","example":"","internal":false,"name":"services.solr.group","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"Which Java derivation to use for running solr.\n","example":"","internal":false,"name":"services.solr.javaPackage","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"Contents of the <literal>log4j.properties</literal> used. By default,\neverything is logged to stdout (picked up by systemd) with level INFO.\n","example":"","internal":false,"name":"services.solr.log4jConfiguration","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"The solr home directory. It is your own responsibility to\nmake sure this directory contains a working solr configuration,\nand is writeable by the the user running the solr service.\nFailing to do so, the solr will not start properly.\n","example":"","internal":false,"name":"services.solr.solrHome","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"Which solr derivation to use for running solr.\n","example":"","internal":false,"name":"services.solr.solrPackage","value":"","visible":true},{"declarations":["nixos/modules/services/search/solr.nix"],"default":"","description":"The user that should run the solr process and.\nthe working directories.\n","example":"","internal":false,"name":"services.solr.user","value":"","visible":true},{"declarations":["nixos/modules/services/mail/spamassassin.nix"],"default":"","description":"Whether to run the SpamAssassin daemon in debug mode.","example":"","internal":false,"name":"services.spamassassin.debug","value":"","visible":true},{"declarations":["nixos/modules/services/mail/spamassassin.nix"],"default":"","description":"Whether to run the SpamAssassin daemon.","example":"","internal":false,"name":"services.spamassassin.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":"","description":"Configuration for a secure pipe daemon. The daemon can be\nstarted, stopped, or examined using\n<literal>systemctl</literal>, under the name\n<literal>spiped@foo</literal>.\n","example":"","internal":false,"name":"services.spiped.config","value":"","visible":true},{"declarations":[],"default":"","description":"Take encrypted connections from the\n<literal>source</literal> socket and send unencrypted\nconnections to the <literal>target</literal> socket.\n","example":"","internal":false,"name":"services.spiped.config.<name>.decrypt","value":"","visible":true},{"declarations":[],"default":"","description":"Disable transport layer keep-alives.","example":"","internal":false,"name":"services.spiped.config.<name>.disableKeepalives","value":"","visible":true},{"declarations":[],"default":"","description":"Disable target address re-resolution.","example":"","internal":false,"name":"services.spiped.config.<name>.disableReresolution","value":"","visible":true},{"declarations":[],"default":"","description":"Take unencrypted connections from the\n<literal>source</literal> socket and send encrypted\nconnections to the <literal>target</literal> socket.\n","example":"","internal":false,"name":"services.spiped.config.<name>.encrypt","value":"","visible":true},{"declarations":[],"default":"","description":"Name of a file containing the spiped key. As the\ndaemon runs as the <literal>spiped</literal> user, the\nkey file must be somewhere owned by that user. By\ndefault, we recommend putting the keys for any spipe\nservices in <literal>/var/lib/spiped</literal>.\n","example":"","internal":false,"name":"services.spiped.config.<name>.keyfile","value":"","visible":true},{"declarations":[],"default":"","description":"Limit on the number of simultaneous connections allowed.\n","example":"","internal":false,"name":"services.spiped.config.<name>.maxConns","value":"","visible":true},{"declarations":[],"default":"","description":"Resolution refresh time for the target socket, in seconds.\n","example":"","internal":false,"name":"services.spiped.config.<name>.resolveRefresh","value":"","visible":true},{"declarations":[],"default":"","description":"Address on which spiped should listen for incoming\nconnections.  Must be in one of the following formats:\n<literal>/absolute/path/to/unix/socket</literal>,\n<literal>host.name:port</literal>,\n<literal>[ip.v4.ad.dr]:port</literal> or\n<literal>[ipv6::addr]:port</literal> - note that\nhostnames are resolved when spiped is launched and are\nnot re-resolved later; thus if DNS entries change\nspiped will continue to connect to the expired\naddress.\n","example":"","internal":false,"name":"services.spiped.config.<name>.source","value":"","visible":true},{"declarations":[],"default":"","description":"Address to which spiped should connect.","example":"","internal":false,"name":"services.spiped.config.<name>.target","value":"","visible":true},{"declarations":[],"default":"","description":"Timeout, in seconds, after which an attempt to connect to\nthe target or a protocol handshake will be aborted (and the\nconnection dropped) if not completed\n","example":"","internal":false,"name":"services.spiped.config.<name>.timeout","value":"","visible":true},{"declarations":[],"default":"","description":"Wait for DNS. Normally when <literal>spiped</literal> is\nlaunched it resolves addresses and binds to its source\nsocket before the parent process returns; with this option\nit will daemonize first and retry failed DNS lookups until\nthey succeed. This allows <literal>spiped</literal> to\nlaunch even if DNS isn't set up yet, but at the expense of\nlosing the guarantee that once <literal>spiped</literal> has\nfinished launching it will be ready to create pipes.\n","example":"","internal":false,"name":"services.spiped.config.<name>.waitForDNS","value":"","visible":true},{"declarations":[],"default":"","description":"Use fast/weak handshaking: This reduces the CPU time spent\nin the initial connection setup, at the expense of losing\nperfect forward secrecy.\n","example":"","internal":false,"name":"services.spiped.config.<name>.weakHandshake","value":"","visible":true},{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":"","description":"Enable the spiped service module.","example":"","internal":false,"name":"services.spiped.enable","value":"","visible":true},{"declarations":["nixos/modules/rename.nix"],"default":"","description":"Alias of <option>services.openssh.enable</option>.","example":"","internal":false,"name":"services.sshd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"List of backends statsd will use for data persistance","example":"","internal":false,"name":"services.statsd.backends","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Whether to enable statsd stats aggregation service","example":"","internal":false,"name":"services.statsd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Extra configuration options for statsd","example":"","internal":false,"name":"services.statsd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Hostname or IP of Graphite server","example":"","internal":false,"name":"services.statsd.graphiteHost","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Port of Graphite server (i.e. carbon-cache).","example":"","internal":false,"name":"services.statsd.graphitePort","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Address that statsd listens on over UDP","example":"","internal":false,"name":"services.statsd.host","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Address to run managment TCP interface on","example":"","internal":false,"name":"services.statsd.mgmt_address","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Port to run the management TCP interface on","example":"","internal":false,"name":"services.statsd.mgmt_port","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Port that stats listens for messages on over UDP","example":"","internal":false,"name":"services.statsd.port","value":"","visible":true},{"declarations":["nixos/modules/services/networking/supybot.nix"],"default":"","description":"Path to a supybot config file. This can be generated by\nrunning supybot-wizard.\n\nNote: all paths should include the full path to the stateDir\ndirectory (backup conf data logs logs/plugins plugins tmp web).\n","example":"","internal":false,"name":"services.supybot.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/supybot.nix"],"default":"","description":"Enable Supybot, an IRC bot","example":"","internal":false,"name":"services.supybot.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/supybot.nix"],"default":"","description":"The root directory, logs and plugins are stored here","example":"","internal":false,"name":"services.supybot.stateDir","value":"","visible":true},{"declarations":["nixos/modules/services/misc/svnserve.nix"],"default":"","description":"Whether to enable svnserve to serve Subversion repositories through the SVN protocol.","example":"","internal":false,"name":"services.svnserve.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/svnserve.nix"],"default":"","description":"Base directory from which Subversion repositories are accessed.","example":"","internal":false,"name":"services.svnserve.svnBaseDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"","description":"Path where the `.syncthing` (settings and keys) and `Sync`\n(your synced files) directories will exist. This can be your home\ndirectory.\n","example":"","internal":false,"name":"services.syncthing.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"","description":"Whether to enable the Syncthing, self-hosted open-source alternative\nto Dropbox and BittorrentSync. Initial interface will be\navailable on http://127.0.0.1:8080/.\n","example":"","internal":false,"name":"services.syncthing.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"","description":"Syncthing will be run under this user (user must exist,\nthis can be your user name).\n","example":"","internal":false,"name":"services.syncthing.user","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Whether the Synergy client should be started automatically.","example":"","internal":false,"name":"services.synergy.client.autoStart","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"\n            Whether to enable the Synergy client (receive keyboard and mouse events from a Synergy server).\n          ","example":"","internal":false,"name":"services.synergy.client.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Use the given name instead of the hostname to identify\nourselves to the server.\n","example":"","internal":false,"name":"services.synergy.client.screenName","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"The server address is of the form: [hostname][:port].  The\nhostname must be the address or hostname of the server.  The\nport overrides the default port, 24800.\n","example":"","internal":false,"name":"services.synergy.client.serverAddress","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Address on which to listen for clients.","example":"","internal":false,"name":"services.synergy.server.address","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Whether the Synergy server should be started automatically.","example":"","internal":false,"name":"services.synergy.server.autoStart","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"The Synergy server configuration file.","example":"","internal":false,"name":"services.synergy.server.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Whether to enable the Synergy server (send keyboard and mouse events).\n","example":"","internal":false,"name":"services.synergy.server.enable","value":"","visible":true},{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Use the given name instead of the hostname to identify\nthis screen in the configuration.\n","example":"","internal":false,"name":"services.synergy.server.screenName","value":"","visible":true},{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"The default <filename>syslog.conf</filename> file configures a\nfairly standard setup of log files, which can be extended by\nmeans of <varname>extraConfig</varname>.\n","example":"","internal":false,"name":"services.syslogd.defaultConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"Whether to enable syslogd.  Note that systemd also logs\nsyslog messages, so you normally don't need to run syslogd.\n","example":"","internal":false,"name":"services.syslogd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"Accept logging through UDP. Option -r of syslogd(8).\n","example":"","internal":false,"name":"services.syslogd.enableNetworkInput","value":"","visible":true},{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"Additional text appended to <filename>syslog.conf</filename>,\ni.e. the contents of <varname>defaultConfig</varname>.\n","example":"","internal":false,"name":"services.syslogd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"Additional parameters passed to <command>syslogd</command>.\n","example":"","internal":false,"name":"services.syslogd.extraParams","value":"","visible":true},{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"The tty device on which syslogd will print important log\nmessages. Leave this option blank to disable tty logging.\n","example":"","internal":false,"name":"services.syslogd.tty","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":"","description":"Drives to monitor.\n","example":"","internal":false,"name":"services.systemhealth.drives","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":"","description":"Enable the system health monitor and its generation of graphs.\n","example":"","internal":false,"name":"services.systemhealth.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":"","description":"Interfaces to monitor (minimum one).\n","example":"","internal":false,"name":"services.systemhealth.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":"","description":"The URL prefix under which the System Health web pages appear in httpd.\n","example":"","internal":false,"name":"services.systemhealth.urlPrefix","value":"","visible":true},{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"","description":"Tarsnap operations use a \"cache directory\" which\nallows Tarsnap to identify which blocks of data have\nbeen previously stored; this directory is specified\nvia the <literal>cachedir</literal> option. If the\ncache directory is lost or out of date, tarsnap\ncreation/deletion operations will exit with an error\nmessage instructing you to run <literal>tarsnap\n--fsck</literal> to regenerate the cache directory.\n","example":"","internal":false,"name":"services.tarsnap.cachedir","value":"","visible":true},{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"","description":"Configuration of a Tarsnap archive. In the example, your\nmachine will have two tarsnap archives:\n<literal>gamedata</literal> (backed up every 30 minutes) and\n<literal>nixos</literal> (backed up at 1:15 AM every night by\ndefault). You can control individual archive backups using\n<literal>systemctl</literal>, using the\n<literal>tarsnap@nixos</literal> or\n<literal>tarsnap@gamedata</literal> units. For example,\n<literal>systemctl start tarsnap@nixos</literal> will\nimmediately create a new NixOS archive. By default, archives\nare suffixed with the timestamp of when they were started,\ndown to second resolution. This means you can use GNU\n<literal>sort</literal> to sort output easily.\n","example":"","internal":false,"name":"services.tarsnap.config","value":"","visible":true},{"declarations":[],"default":"","description":"Aggressive network behaviour: Use multiple TCP\nconnections when writing archives.  Use of this\noption is recommended only in cases where TCP\ncongestion control is known to be the limiting\nfactor in upload performance.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.aggressiveNetworking","value":"","visible":true},{"declarations":[],"default":"","description":"Create a checkpoint per a particular amount of\nuploaded data. By default, Tarsnap will create\ncheckpoints once per GB of data uploaded. At\nminimum, <literal>checkpointBytes</literal> must be\n1GB.\n\nCan also be set to <literal>null</literal> to\ndisable checkpointing.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.checkpointBytes","value":"","visible":true},{"declarations":[],"default":"","description":"List of filesystem paths to archive.","example":"","internal":false,"name":"services.tarsnap.config.<name>.directories","value":"","visible":true},{"declarations":[],"default":"","description":"Exclude files and directories matching the specified\npatterns.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.excludes","value":"","visible":true},{"declarations":[],"default":"","description":"Include only files and directories matching the\nspecified patterns.\n\nNote that exclusions specified via\n<literal>excludes</literal> take precedence over\ninclusions.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.includes","value":"","visible":true},{"declarations":[],"default":"","description":"Attempt to reduce tarsnap memory consumption.  This\noption will slow down the process of creating\narchives, but may help on systems where the average\nsize of files being backed up is less than 1 MB.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.lowmem","value":"","visible":true},{"declarations":[],"default":"","description":"If set to <literal>true</literal>, then don't\narchive files which have the\n<literal>nodump</literal> flag set.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.nodump","value":"","visible":true},{"declarations":[],"default":"","description":"This option defines (in the format used by cron)\nwhen tarsnap is run for backups. The default is to\nbackup the specified paths at 01:15 at night every\nday.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.period","value":"","visible":true},{"declarations":[],"default":"","description":"Print statistics when creating archives.","example":"","internal":false,"name":"services.tarsnap.config.<name>.printStats","value":"","visible":true},{"declarations":[],"default":"","description":"Try even harder to reduce tarsnap memory\nconsumption.  This can significantly slow down\ntarsnap, but reduces its memory usage by an\nadditional factor of 2 beyond what the\n<literal>lowmem</literal> option does.\n","example":"","internal":false,"name":"services.tarsnap.config.<name>.verylowmem","value":"","visible":true},{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"","description":"If enabled, NixOS will periodically create backups of the\nspecified directories using the <literal>tarsnap</literal>\nbackup service. This installs a <literal>systemd</literal>\nservice called <literal>tarsnap-backup</literal> which is\nperiodically run by cron, or you may run it on-demand.\n\nSee the Tarsnap <link\nxlink:href='http://www.tarsnap.com/gettingstarted.html'>Getting\nStarted</link> page.\n","example":"","internal":false,"name":"services.tarsnap.enable","value":"","visible":true},{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"","description":"Path to the keyfile which identifies the machine\nassociated with your Tarsnap account. This file can\nbe created using the\n<literal>tarsnap-keygen</literal> utility, and\nproviding your Tarsnap login credentials.\n","example":"","internal":false,"name":"services.tarsnap.keyfile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"Directory to store TS3 database and other state/data files.\n","example":"","internal":false,"name":"services.teamspeak3.dataDir","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"Default UDP port for clients to connect to virtual servers - used for first virtual server, subsequent ones will open on incrementing port numbers by default.\n","example":"","internal":false,"name":"services.teamspeak3.defaultVoicePort","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"Whether to run the Teamspeak3 voice communication server daemon.\n","example":"","internal":false,"name":"services.teamspeak3.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"IP on which the server instance will listen for incoming file transfer connections. Defaults to any IP.\n","example":"","internal":false,"name":"services.teamspeak3.fileTransferIP","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"TCP port opened for file transfers.\n","example":"","internal":false,"name":"services.teamspeak3.fileTransferPort","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"Directory to store log files in.\n","example":"","internal":false,"name":"services.teamspeak3.logPath","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"IP on which the server instance will listen for incoming ServerQuery connections. Defaults to any IP.\n","example":"","internal":false,"name":"services.teamspeak3.queryIP","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"TCP port opened for ServerQuery connections.\n","example":"","internal":false,"name":"services.teamspeak3.queryPort","value":"","visible":true},{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"","description":"IP on which the server instance will listen for incoming voice connections. Defaults to any IP.\n","example":"","internal":false,"name":"services.teamspeak3.voiceIP","value":"","visible":true},{"declarations":["nixos/modules/services/desktops/telepathy.nix"],"default":"","description":"Whether to enable Telepathy service, a communications framework\nthat enables real-time communication via pluggable protocol backends.\n","example":"","internal":false,"name":"services.telepathy.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/tftpd.nix"],"default":"","description":"Whether to enable the anonymous FTP user.\n","example":"","internal":false,"name":"services.tftpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/tftpd.nix"],"default":"","description":"Where the tftp server files are stored\n","example":"","internal":false,"name":"services.tftpd.path","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/thinkfan.nix"],"default":"","description":"Whether to enable thinkfan, fan controller for ibm/lenovo thinkpads.\n","example":"","internal":false,"name":"services.thinkfan.enable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/thinkfan.nix"],"default":"","description":"Sensor used by thinkfan\n","example":"","internal":false,"name":"services.thinkfan.sensor","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Whether to enable an Apache Axis2 container","example":"","internal":false,"name":"services.tomcat.axis2.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"List containing AAR files or directories with AAR files which are web services to be deployed on Axis2","example":"","internal":false,"name":"services.tomcat.axis2.services","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Location where Tomcat stores configuration files, webapplications and logfiles","example":"","internal":false,"name":"services.tomcat.baseDir","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Parameters to pass to the Java Virtual Machine which spawns the Catalina servlet container","example":"","internal":false,"name":"services.tomcat.catalinaOpts","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"List containing JAR files or directories with JAR files which are libraries shared by the web applications and the servlet container","example":"","internal":false,"name":"services.tomcat.commonLibs","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Whether to enable Apache Tomcat","example":"","internal":false,"name":"services.tomcat.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Defines extra groups to which the tomcat user belongs.","example":"","internal":false,"name":"services.tomcat.extraGroups","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Group account under which Apache Tomcat runs.","example":"","internal":false,"name":"services.tomcat.group","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Parameters to pass to the Java Virtual Machine which spawns Apache Tomcat","example":"","internal":false,"name":"services.tomcat.javaOpts","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Whether to enable logging per virtual host.","example":"","internal":false,"name":"services.tomcat.logPerVirtualHost","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"List containing JAR files or directories with JAR files which are libraries shared by the web applications","example":"","internal":false,"name":"services.tomcat.sharedLibs","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"User account under which Apache Tomcat runs.","example":"","internal":false,"name":"services.tomcat.user","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"List consisting of a virtual host name and a list of web applications to deploy on each virtual host","example":"","internal":false,"name":"services.tomcat.virtualHosts","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"List containing WAR files or directories with WAR files which are web applications to be deployed on Tomcat","example":"","internal":false,"name":"services.tomcat.webapps","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Whether to enable Tor daemon to route application connections.\nYou might want to disable this if you plan running a dedicated Tor relay.\n","example":"","internal":false,"name":"services.tor.client.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Extra configuration for Tor's instance of privoxy. Contents will be\nadded verbatim to the configuration file.\n*This does not configure the standard NixOS instance of privoxy.*\nThis is for Tor connections only!\nSee services.privoxy.extraConfig to configure the standard NixOS\ninstace of privoxy.\n","example":"","internal":false,"name":"services.tor.client.privoxy.config","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Whether to enable a special instance of privoxy dedicated to Tor.\nTo have anonymity, protocols need to be scrubbed of identifying\ninformation.\nMost people using Tor want to anonymize their web traffic, so by\ndefault we enable an special instance of privoxy specifically for\nTor.\nHowever, if you are only going to use Tor only for other kinds of\ntraffic then you can disable this option.\n","example":"","internal":false,"name":"services.tor.client.privoxy.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Address that Tor's instance of privoxy is listening to.\n*This does not configure the standard NixOS instance of privoxy.*\nThis is for Tor connections only!\nSee services.privoxy.listenAddress to configure the standard NixOS\ninstace of privoxy.\n","example":"","internal":false,"name":"services.tor.client.privoxy.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Bind to this address to listen for connections from Socks-speaking\napplications.\n","example":"","internal":false,"name":"services.tor.client.socksListenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Same as socksListenAddress but uses weaker circuit isolation to provide\nperformance suitable for a web browser.\n","example":"","internal":false,"name":"services.tor.client.socksListenAddressFaster","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Entry policies to allow/deny SOCKS requests based on IP address.\nFirst entry that matches wins. If no SocksPolicy is set, we accept\nall (and only) requests from SocksListenAddress.\n","example":"","internal":false,"name":"services.tor.client.socksPolicy","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the\nconfiguration file.\n","example":"","internal":false,"name":"services.tor.config","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Specify this to allow bursts of the bandwidth usage of relayed (server)\ntraffic. The average usage will still be as specified in relayBandwidthRate.\nYour own traffic is still unthrottled. Units: bytes/second.\n","example":"","internal":false,"name":"services.tor.relay.bandwidthBurst","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Specify this to limit the bandwidth usage of relayed (server)\ntraffic. Your own traffic is still unthrottled. Units: bytes/second.\n","example":"","internal":false,"name":"services.tor.relay.bandwidthRate","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Whether to enable relaying TOR traffic for others.\n\nSee https://www.torproject.org/docs/tor-doc-relay for details.\n","example":"","internal":false,"name":"services.tor.relay.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"A comma-separated list of exit policies. They're considered first\nto last, and the first match wins. If you want to _replace_\nthe default exit policy, end this with either a reject *:* or an\naccept *:*. Otherwise, you're _augmenting_ (prepending to) the\ndefault exit policy. Leave commented to just use the default, which is\navailable in the man page or at https://www.torproject.org/documentation.html\n\nLook at https://www.torproject.org/faq-abuse.html#TypicalAbuses\nfor issues you might encounter if you use the default exit policy.\n\nIf certain IPs and ports are blocked externally, e.g. by your firewall,\nyou should update your exit policy to reflect this -- otherwise Tor\nusers will be told that those destinations are down.\n","example":"","internal":false,"name":"services.tor.relay.exitPolicy","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Bridge relays (or \"bridges\" ) are Tor relays that aren't listed in the\nmain directory. Since there is no complete public list of them, even if an\nISP is filtering connections to all the known Tor relays, they probably\nwon't be able to block all the bridges.\n\nA bridge relay can't be an exit relay.\n\nYou need to set relay.enable to true for this option to take effect.\n\nThe bridge is set up with an obfuscated transport proxy.\n\nSee https://www.torproject.org/bridges.html.en for more info.\n","example":"","internal":false,"name":"services.tor.relay.isBridge","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"An exit relay allows Tor users to access regular Internet services.\n\nUnlike running a non-exit relay, running an exit relay may expose\nyou to abuse complaints. See https://www.torproject.org/faq.html.en#ExitPolicies for more info.\n\nYou can specify which services Tor users may access via your exit relay using exitPolicy option.\n","example":"","internal":false,"name":"services.tor.relay.isExit","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Set this if you need to listen on a port other than the one advertised\nin relayPort (e.g. to advertise 443 but bind to 9090). You'll need to do\nipchains or other port forwsarding yourself to make this work.\n","example":"","internal":false,"name":"services.tor.relay.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"A unique handle for your TOR relay.\n","example":"","internal":false,"name":"services.tor.relay.nickname","value":"","visible":true},{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"What port to advertise for Tor connections.\n","example":"","internal":false,"name":"services.tor.relay.port","value":"","visible":true},{"declarations":["nixos/modules/services/security/torify.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to TSocks\nconfiguration file.\n","example":"","internal":false,"name":"services.tor.torify.config","value":"","visible":true},{"declarations":["nixos/modules/services/security/torify.nix"],"default":"","description":"Whether to build torify scipt to relay application traffic via TOR.\n","example":"","internal":false,"name":"services.tor.torify.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/torify.nix"],"default":"","description":"IP address of TOR client to use.\n","example":"","internal":false,"name":"services.tor.torify.server","value":"","visible":true},{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to torsocks\nconfiguration file.\n","example":"","internal":false,"name":"services.tor.torsocks.config","value":"","visible":true},{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"","description":"Whether to build torsocks scipt to relay application traffic via TOR.\n","example":"","internal":false,"name":"services.tor.torsocks.enable","value":"","visible":true},{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"","description":"IP address of TOR client to use.\n","example":"","internal":false,"name":"services.tor.torsocks.server","value":"","visible":true},{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"","description":"          IP address of TOR client to use for applications like web browsers which\n\t  need less circuit isolation to achive satisfactory performance.\n","example":"","internal":false,"name":"services.tor.torsocks.serverFaster","value":"","visible":true},{"declarations":["nixos/modules/services/torrent/transmission.nix"],"default":"","description":"Whether or not to enable the headless Transmission BitTorrent daemon.\n\nTransmission daemon can be controlled via the RPC interface using\ntransmission-remote or the WebUI (http://localhost:9091/ by default).\n\nTorrents are downloaded to /var/lib/transmission/Downloads/ by default and are\naccessible to users in the \"transmission\" group.\n","example":"","internal":false,"name":"services.transmission.enable","value":"","visible":true},{"declarations":["nixos/modules/services/torrent/transmission.nix"],"default":"","description":"TCP port number to run the RPC/web interface.","example":"","internal":false,"name":"services.transmission.port","value":"","visible":true},{"declarations":["nixos/modules/services/torrent/transmission.nix"],"default":"","description":"Attribute set whos fields overwrites fields in settings.json (each\ntime the service starts). String values must be quoted, integer and\nboolean values must not.\n\nSee https://trac.transmissionbt.com/wiki/EditConfigFiles for\ndocumentation and/or look at /var/lib/transmission/.config/transmission-daemon/settings.json.\n","example":"","internal":false,"name":"services.transmission.settings","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"Additional <command>udev</command> rules. They'll be written\ninto file <filename>10-local.rules</filename>. Thus they are\nread before all other rules.\n","example":"","internal":false,"name":"services.udev.extraRules","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"List of packages containing <command>udev</command> rules.\nAll files found in\n<filename><replaceable>pkg</replaceable>/etc/udev/rules.d</filename> and\n<filename><replaceable>pkg</replaceable>/lib/udev/rules.d</filename>\nwill be included.\n","example":"","internal":false,"name":"services.udev.packages","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"Packages added to the <envar>PATH</envar> environment variable when\nexecuting programs from Udev rules.\n","example":"","internal":false,"name":"services.udev.path","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/udisks2.nix"],"default":"","description":"Whether to enable Udisks, a DBus service that allows\napplications to query and manipulate storage devices.\n","example":"","internal":false,"name":"services.udisks2.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":"","description":"What networks are allowed to use unbound as a resolver.","example":"","internal":false,"name":"services.unbound.allowedAccess","value":"","visible":true},{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":"","description":"Whether to enable the Unbound domain name server.","example":"","internal":false,"name":"services.unbound.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":"","description":"Extra lines of unbound config.","example":"","internal":false,"name":"services.unbound.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":"","description":"What servers to forward queries to.","example":"","internal":false,"name":"services.unbound.forwardAddresses","value":"","visible":true},{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":"","description":"What addresses the server should listen on.","example":"","internal":false,"name":"services.unbound.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/upower.nix"],"default":"","description":"Whether to enable Upower, a DBus service that provides power\nmanagement support to applications.\n","example":"","internal":false,"name":"services.upower.enable","value":"","visible":true},{"declarations":["nixos/modules/services/hardware/upower.nix"],"default":"","description":"Which upower package to use.\n","example":"","internal":false,"name":"services.upower.package","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":"","description":"The uptime configuration file\n\nIf mongodb: server != localhost, please set usesRemoteMongo = true\n\nIf you only want to run the monitor, please set enableWebService = false\nand enableSeparateMonitoringService = true\n\nIf autoStartMonitor: false (recommended) and you want to run both\nservices, please set enableSeparateMonitoringService = true\n","example":"","internal":false,"name":"services.uptime.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":"","description":"Whether to enable the uptime monitoring service.","example":"","internal":false,"name":"services.uptime.enableSeparateMonitoringService","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":"","description":"Whether to enable the uptime monitoring program web service.","example":"","internal":false,"name":"services.uptime.enableWebService","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":"","description":"The node environment to run in (development, production, etc.)","example":"","internal":false,"name":"services.uptime.nodeEnv","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":"","description":"Whether the configuration file specifies a remote mongo instance","example":"","internal":false,"name":"services.uptime.usesRemoteMongo","value":"","visible":true},{"declarations":["nixos/modules/services/system/uptimed.nix"],"default":"","description":"Uptimed allows you to track your highest uptimes.\n","example":"","internal":false,"name":"services.uptimed.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":"","description":"\n          Verbatim default.vcl configuration.\n        ","example":"","internal":false,"name":"services.varnish.config","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":"","description":"\n          Enable the Varnish Server.\n        ","example":"","internal":false,"name":"services.varnish.enable","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":"","description":"\n          HTTP listen address and port.\n        ","example":"","internal":false,"name":"services.varnish.http_address","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":"","description":"\n          Directory holding all state for Varnish to run.\n        ","example":"","internal":false,"name":"services.varnish.stateDir","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Where cached feeds are stored.\n","example":"","internal":false,"name":"services.venus.cacheDirectory","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the Venus will collect feeds.\n","example":"","internal":false,"name":"services.venus.dates","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Planet Venus is an awesome ‘river of news’ feed reader. It downloads\nnews feeds published by web sites and aggregates their content\ntogether into a single combined feed, latest news first.\n","example":"","internal":false,"name":"services.venus.enable","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"List of feeds.\n","example":"","internal":false,"name":"services.venus.feeds","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Group for running venus script.\n","example":"","internal":false,"name":"services.venus.group","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"How many items to put on each page.\n","example":"","internal":false,"name":"services.venus.itemsPerPage","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Link to the main page.\n","example":"","internal":false,"name":"services.venus.link","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Your planet's name.\n","example":"","internal":false,"name":"services.venus.name","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Directory to place output files.\n","example":"","internal":false,"name":"services.venus.outputDirectory","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Directory containing a config.ini file which is merged with this one.\nThis is typically used to specify templating and bill of material\ninformation.\n","example":"","internal":false,"name":"services.venus.outputTheme","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Your e-mail address.\n","example":"","internal":false,"name":"services.venus.ownerEmail","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"Your name.\n","example":"","internal":false,"name":"services.venus.ownerName","value":"","visible":true},{"declarations":["nixos/modules/programs/venus.nix"],"default":"","description":"User for running venus script.\n","example":"","internal":false,"name":"services.venus.user","value":"","visible":true},{"declarations":["nixos/modules/virtualisation/virtualbox-guest.nix"],"default":"","description":"Whether to enable the VirtualBox service and other guest additions.","example":"","internal":false,"name":"services.virtualbox.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"Extra options to put into Virtuoso configuration file.","example":"","internal":false,"name":"services.virtuoso.config","value":"","visible":true},{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"A list of directories Virtuoso is allowed to access","example":"","internal":false,"name":"services.virtuoso.dirsAllowed","value":"","visible":true},{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"Whether to enable Virtuoso Opensource database server.","example":"","internal":false,"name":"services.virtuoso.enable","value":"","visible":true},{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"ip:port or port for Virtuoso HTTP server to listen on.","example":"","internal":false,"name":"services.virtuoso.httpListenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"ip:port or port to listen on.","example":"","internal":false,"name":"services.virtuoso.listenAddress","value":"","visible":true},{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"Extra options to put into [Parameters] section of Virtuoso configuration file.","example":"","internal":false,"name":"services.virtuoso.parameters","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether any uploads are permitted to anonymous users.\n","example":"","internal":false,"name":"services.vsftpd.anonymousMkdirEnable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Anonymous write umask.","example":"","internal":false,"name":"services.vsftpd.anonymousUmask","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether any uploads are permitted to anonymous users.\n","example":"","internal":false,"name":"services.vsftpd.anonymousUploadEnable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether to enable the anonymous FTP user.\n","example":"","internal":false,"name":"services.vsftpd.anonymousUser","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Directory to consider the HOME of the anonymous user.\n","example":"","internal":false,"name":"services.vsftpd.anonymousUserHome","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether local users are confined to their home directory.\n","example":"","internal":false,"name":"services.vsftpd.chrootlocalUser","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether to enable the vsftpd FTP server.","example":"","internal":false,"name":"services.vsftpd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Only applies if <option>sslEnable</option> is true. Non anonymous (local) users\nmust use a secure SSL connection for sending/receiving data on data connection.\n","example":"","internal":false,"name":"services.vsftpd.forceLocalDataSSL","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Only applies if <option>sslEnable</option> is true. Non anonymous (local) users\nmust use a secure SSL connection to send a password.\n","example":"","internal":false,"name":"services.vsftpd.forceLocalLoginsSSL","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether to enable FTP for local users.\n","example":"","internal":false,"name":"services.vsftpd.localUsers","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"RSA certificate file.","example":"","internal":false,"name":"services.vsftpd.rsaCertFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"","example":"","internal":false,"name":"services.vsftpd.ssl_sslv2","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"","example":"","internal":false,"name":"services.vsftpd.ssl_sslv3","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"","example":"","internal":false,"name":"services.vsftpd.ssl_tlsv1","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"See <option>userlistFile</option>.","example":"","internal":false,"name":"services.vsftpd.userlist","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Specifies whether <option>userlistFile</option> is a list of user\nnames to allow or deny access.\nThe default <literal>false</literal> means whitelist/allow.\n","example":"","internal":false,"name":"services.vsftpd.userlistDeny","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether users are included.\n","example":"","internal":false,"name":"services.vsftpd.userlistEnable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Newline separated list of names to be allowed/denied if <option>userlistEnable</option>\nis <literal>true</literal>. Meaning see <option>userlistDeny</option>.\n\nThe default is a file containing the users from <option>userlist</option>.\n\nIf explicitely set to null userlist_file will not be set in vsftpd's config file.\n","example":"","internal":false,"name":"services.vsftpd.userlistFile","value":"","visible":true},{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Whether any write activity is permitted to users.\n","example":"","internal":false,"name":"services.vsftpd.writeEnable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/wakeonlan.nix"],"default":"","description":"Interfaces where to enable Wake-On-LAN, and how. Two methods available:\n\"magickey\" and \"password\". The password has the shape of six bytes\nin hexadecimal separated by a colon each. For more information,\ncheck the ethtool manual.\n","example":"","internal":false,"name":"services.wakeonlan.interfaces","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"default":"","description":"Defines independent Winstone services, each serving one WAR-file.\n","example":"","internal":false,"name":"services.winstone","value":"","visible":true},{"declarations":[],"default":"","description":"Extra command line options given to the java process running\nWinstone.\n","example":"","internal":false,"name":"services.winstone.<name>.extraJavaOptions","value":"","visible":true},{"declarations":[],"default":"","description":"Extra command line options given to the Winstone process.\n","example":"","internal":false,"name":"services.winstone.<name>.extraOptions","value":"","visible":true},{"declarations":[],"default":"","description":"The group that will own the working directory.\n","example":"","internal":false,"name":"services.winstone.<name>.group","value":"","visible":true},{"declarations":[],"default":"","description":"Which Java derivation to use for running Winstone.\n","example":"","internal":false,"name":"services.winstone.<name>.javaPackage","value":"","visible":true},{"declarations":[],"default":"","description":"The name of the systemd service. By default, it is\nderived from the winstone instance name.\n","example":"","internal":false,"name":"services.winstone.<name>.serviceName","value":"","visible":true},{"declarations":[],"default":"","description":"The user that should run this Winstone process and\nown the working directory.\n","example":"","internal":false,"name":"services.winstone.<name>.user","value":"","visible":true},{"declarations":[],"default":"","description":"The WAR file that Winstone should serve.\n","example":"","internal":false,"name":"services.winstone.<name>.warFile","value":"","visible":true},{"declarations":[],"default":"","description":"The working directory for this Winstone instance. Will\ncontain extracted webapps etc. The directory will be\ncreated if it doesn't exist.\n","example":"","internal":false,"name":"services.winstone.<name>.workDir","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xfs.nix"],"default":"","description":"Whether to enable the X Font Server.","example":"","internal":false,"name":"services.xfs.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"Whether to enable the xinetd super-server daemon.\n","example":"","internal":false,"name":"services.xinetd.enable","value":"","visible":true},{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"Additional configuration lines added to the default section of xinetd's configuration.\n","example":"","internal":false,"name":"services.xinetd.extraDefaults","value":"","visible":true},{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"A list of services provided by xinetd.\n","example":"","internal":false,"name":"services.xinetd.services","value":"","visible":true},{"declarations":[],"default":"","description":"Extra configuration-lines added to the section of the service.","example":"","internal":false,"name":"services.xinetd.services.*.extraConfig","value":"","visible":true},{"declarations":[],"default":"","description":"","example":"","internal":false,"name":"services.xinetd.services.*.flags","value":"","visible":true},{"declarations":[],"default":"","description":"Name of the service.","example":"","internal":false,"name":"services.xinetd.services.*.name","value":"","visible":true},{"declarations":[],"default":"","description":"Port number of the service.","example":"","internal":false,"name":"services.xinetd.services.*.port","value":"","visible":true},{"declarations":[],"default":"","description":"Protocol of the service.  Usually <literal>tcp</literal> or <literal>udp</literal>.","example":"","internal":false,"name":"services.xinetd.services.*.protocol","value":"","visible":true},{"declarations":[],"default":"","description":"Path of the program that implements the service.","example":"","internal":false,"name":"services.xinetd.services.*.server","value":"","visible":true},{"declarations":[],"default":"","description":"Command-line arguments for the server program.","example":"","internal":false,"name":"services.xinetd.services.*.serverArgs","value":"","visible":true},{"declarations":[],"default":"","description":"Whether this server is listed in\n<filename>/etc/services</filename>.  If so, the port\nnumber can be omitted.\n","example":"","internal":false,"name":"services.xinetd.services.*.unlisted","value":"","visible":true},{"declarations":[],"default":"","description":"User account for the service","example":"","internal":false,"name":"services.xinetd.services.*.user","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Whether to start the X server automatically.\n","example":"","internal":false,"name":"services.xserver.autorun","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"The contents of the configuration file of the X server\n(<filename>xorg.conf</filename>).\n","example":"","internal":false,"name":"services.xserver.config","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Default colour depth.","example":"","internal":false,"name":"services.xserver.defaultDepth","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/default.nix"],"default":"","description":"Default desktop manager loaded if none have been chosen.","example":"","internal":false,"name":"services.xserver.desktopManager.default","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/e17.nix"],"default":"","description":"Enable support for the E17 desktop environment.","example":"","internal":false,"name":"services.xserver.desktopManager.e17.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":"","description":"Enable Gnome 3 desktop manager.","example":"","internal":false,"name":"services.xserver.desktopManager.gnome3.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":"","description":"Enable the KDE 4 desktop environment.","example":"","internal":false,"name":"services.xserver.desktopManager.kde4.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":"","description":"Which phonon multimedia backend kde should use","example":"","internal":false,"name":"services.xserver.desktopManager.kde4.phononBackends","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/xbmc.nix"],"default":"","description":"Enable the xbmc multimedia center.","example":"","internal":false,"name":"services.xserver.desktopManager.xbmc.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":"","description":"Enable the Xfce desktop environment.","example":"","internal":false,"name":"services.xserver.desktopManager.xfce.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/desktop-managers/xterm.nix"],"default":"","description":"Enable a xterm terminal as a desktop manager.","example":"","internal":false,"name":"services.xserver.desktopManager.xterm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Device section of the X server configuration file.","example":"","internal":false,"name":"services.xserver.deviceSection","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Display number for the X server.","example":"","internal":false,"name":"services.xserver.display","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/auto.nix"],"default":"","description":"Whether to enable the fake \"auto\" display manager, which\nautomatically logs in the user specified in the\n<option>user</option> option.  This is mostly useful for\nautomated tests.\n","example":"","internal":false,"name":"services.xserver.displayManager.auto.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/auto.nix"],"default":"","description":"The user account to login automatically.","example":"","internal":false,"name":"services.xserver.displayManager.auto.user","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Whether the display manager should prevent systemd from handling\nlid and power events. This is normally handled by the desktop\nenvironment's power manager. Turn this off when using a minimal\nX11 setup without a full power manager.\n","example":"","internal":false,"name":"services.xserver.displayManager.desktopManagerHandlesLidAndPower","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Additional environment variables needed by the display manager.","example":"","internal":false,"name":"services.xserver.displayManager.job.environment","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Command to start the display manager.","example":"","internal":false,"name":"services.xserver.displayManager.job.execCmd","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Whether the display manager redirects the\noutput of the session script to\n<filename>~/.xsession-errors</filename>.\n","example":"","internal":false,"name":"services.xserver.displayManager.job.logsXsession","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Script executed before the display manager is started.","example":"","internal":false,"name":"services.xserver.displayManager.job.preStart","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"Whether to enable the KDE display manager.\n","example":"","internal":false,"name":"services.xserver.displayManager.kdm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"Whether to enable XDMCP, which allows remote logins.\n","example":"","internal":false,"name":"services.xserver.displayManager.kdm.enableXDMCP","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"Options appended to <filename>kdmrc</filename>, the\nconfiguration file of KDM.\n","example":"","internal":false,"name":"services.xserver.displayManager.kdm.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"The path to a KDM setup script. This script is run as root just\nbefore KDM starts. Can be used for setting up\nmonitors with xrandr, for example.\n","example":"","internal":false,"name":"services.xserver.displayManager.kdm.setupScript","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"The path to a KDM theme directory. This theme\nwill be used by the KDM greeter.\n","example":"","internal":false,"name":"services.xserver.displayManager.kdm.themeDirectory","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":"","description":"Whether to enable lightdm as the display manager.\n","example":"","internal":false,"name":"services.xserver.displayManager.lightdm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":"","description":"The LightDM greeter to login via. The package should be a directory\ncontaining a .desktop file matching the name in the 'name' option.\n","example":"","internal":false,"name":"services.xserver.displayManager.lightdm.greeter","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"List of sessions supported with the command used to start each\nsession.  Each session script can set the\n<varname>waitPID</varname> shell variable to make this script\nwait until the end of the user session.  Each script is used\nto define either a windows manager or a desktop manager.  These\ncan be differentiated by setting the attribute\n<varname>manage</varname> either to <literal>\"window\"</literal>\nor <literal>\"desktop\"</literal>.\n\nThe list of desktop manager and window manager should appear\ninside the display manager with the desktop manager name\nfollowed by the window manager name.\n","example":"","internal":false,"name":"services.xserver.displayManager.session","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Shell commands executed just before the window or desktop manager is started.","example":"","internal":false,"name":"services.xserver.displayManager.sessionCommands","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":"","description":"Automatically log in as the default user.\n","example":"","internal":false,"name":"services.xserver.displayManager.slim.autoLogin","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":"","description":"The default user to load. If you put a username here you\nget it automatically loaded into the username field, and\nthe focus is placed on the password.\n","example":"","internal":false,"name":"services.xserver.displayManager.slim.defaultUser","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":"","description":"Whether to enable SLiM as the display manager.\n","example":"","internal":false,"name":"services.xserver.displayManager.slim.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":"","description":"The theme for the SLiM login manager.  If not specified, SLiM's\ndefault theme is used.  See <link\nxlink:href='http://slim.berlios.de/themes01.php'/> for a\ncollection of themes. TODO: berlios shut down.\n","example":"","internal":false,"name":"services.xserver.displayManager.slim.theme","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"List of arguments for the X server.","example":"","internal":false,"name":"services.xserver.displayManager.xserverArgs","value":"","visible":true},{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Path to the X server used by display managers.","example":"","internal":false,"name":"services.xserver.displayManager.xserverBin","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Whether to enable the X server.\n","example":"","internal":false,"name":"services.xserver.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Whether to allow the X server to accept TCP connections.\n","example":"","internal":false,"name":"services.xserver.enableTCP","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Whether to symlink the X server configuration under\n<filename>/etc/X11/xorg.conf</filename>.\n","example":"","internal":false,"name":"services.xserver.exportConfiguration","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Lines to be added to every Display subsection of the Screen section.","example":"","internal":false,"name":"services.xserver.extraDisplaySettings","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Keyboard layout.\n","example":"","internal":false,"name":"services.xserver.layout","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the Module section of the X server configuration file.","example":"","internal":false,"name":"services.xserver.moduleSection","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Packages to be added to the module search path of the X server.","example":"","internal":false,"name":"services.xserver.modules","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Monitor section of the X server configuration file.","example":"","internal":false,"name":"services.xserver.monitorSection","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":"","description":"Whether to enable multitouch touchpad support.","example":"","internal":false,"name":"services.xserver.multitouch.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":"","description":"Whether to ignore touches detected as being the palm (i.e when typing)","example":"","internal":false,"name":"services.xserver.multitouch.ignorePalm","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":"","description":"Whether to invert scrolling direction à la OSX Lion","example":"","internal":false,"name":"services.xserver.multitouch.invertScroll","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"The screen resolutions for the X server.  The first element\nis the default resolution.  If this list is empty, the X\nserver will automatically configure the resolution.\n","example":"","internal":false,"name":"services.xserver.resolutions","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Screen section of the X server configuration file.","example":"","internal":false,"name":"services.xserver.screenSection","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the ServerFlags section of the X server configuration file.","example":"","internal":false,"name":"services.xserver.serverFlagsSection","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the ServerLayout section of the X server configuration file.","example":"","internal":false,"name":"services.xserver.serverLayoutSection","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Whether to start the GnuPG agent when you log in.  The GnuPG agent\nremembers private keys for you so that you don't have to type in\npassphrases every time you make an SSH connection or sign/encrypt\ndata.  Use <command>ssh-add</command> to add a key to the agent.\n","example":"","internal":false,"name":"services.xserver.startGnuPGAgent","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Cursor acceleration (how fast speed increases from minSpeed to maxSpeed).","example":"","internal":false,"name":"services.xserver.synaptics.accelFactor","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Additional options for synaptics touchpad driver.\n","example":"","internal":false,"name":"services.xserver.synaptics.additionalOptions","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Remap touchpad buttons.","example":"","internal":false,"name":"services.xserver.synaptics.buttonsMap","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Path for touchpad device.  Set to null to apply to any\nauto-detected touchpad.\n","example":"","internal":false,"name":"services.xserver.synaptics.dev","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Whether to enable touchpad support.","example":"","internal":false,"name":"services.xserver.synaptics.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Whether to enable horizontal scrolling (on touchpad)","example":"","internal":false,"name":"services.xserver.synaptics.horizontalScroll","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Cursor speed factor for highest-speed finger motion.","example":"","internal":false,"name":"services.xserver.synaptics.maxSpeed","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Cursor speed factor for precision finger motion.","example":"","internal":false,"name":"services.xserver.synaptics.minSpeed","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Whether to enable palm detection (hardware support required)","example":"","internal":false,"name":"services.xserver.synaptics.palmDetect","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Whether to enable tap buttons.","example":"","internal":false,"name":"services.xserver.synaptics.tapButtons","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Whether to enable two-finger drag-scrolling.","example":"","internal":false,"name":"services.xserver.synaptics.twoFingerScroll","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Whether to enable vertical edge drag-scrolling.","example":"","internal":false,"name":"services.xserver.synaptics.vertEdgeScroll","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Virtual console for the X server.","example":"","internal":false,"name":"services.xserver.tty","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Whether to use the Glamor module for 2D acceleration,\nif possible.\n","example":"","internal":false,"name":"services.xserver.useGlamor","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Determines how to connect to the X Font Server.","example":"","internal":false,"name":"services.xserver.useXFS","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Packages providing libva acceleration drivers.\n","example":"","internal":false,"name":"services.xserver.vaapiDrivers","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"The name of the video driver for your graphics card.  This\noption is obsolete; please set the\n<option>services.xserver.videoDrivers</option> instead.\n","example":"","internal":false,"name":"services.xserver.videoDriver","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"The names of the video drivers the configuration\nsupports. They will be tried in order until one that\nsupports your card is found.\n","example":"","internal":false,"name":"services.xserver.videoDrivers","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Virtual screen size for Xrandr.\n","example":"","internal":false,"name":"services.xserver.virtualScreen","value":"","visible":true},{"declarations":["nixos/modules/services/x11/hardware/wacom.nix"],"default":"","description":"Whether to enable the Wacom touchscreen/digitizer/tablet.\nIf you ever have any issues such as, try switching to terminal (ctrl-alt-F1) and back\nwhich will make Xorg reconfigure the device ?\n\nIf you're not satisfied by the default behaviour you can override\n<option>environment.etc.\"X11/xorg.conf.d/50-wacom.conf\"</option> in\nconfiguration.nix easily.\n","example":"","internal":false,"name":"services.xserver.wacom.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/awesome.nix"],"default":"","description":"Enable the Awesome window manager.","example":"","internal":false,"name":"services.xserver.windowManager.awesome.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/compiz.nix"],"default":"","description":"Enable the Compiz window manager.","example":"","internal":false,"name":"services.xserver.windowManager.compiz.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/compiz.nix"],"default":"","description":"Pass the <option>--indirect-rendering</option> flag to Compiz.","example":"","internal":false,"name":"services.xserver.windowManager.compiz.renderingFlag","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/default.nix"],"default":"","description":"Default window manager loaded if none have been chosen.","example":"","internal":false,"name":"services.xserver.windowManager.default","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/herbstluftwm.nix"],"default":"","description":"Enable the herbstluftwm window manager.","example":"","internal":false,"name":"services.xserver.windowManager.herbstluftwm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":"","description":"Path to the i3 configuration file.\nIf left at the default value, $HOME/.i3/config will be used.\n","example":"","internal":false,"name":"services.xserver.windowManager.i3.configFile","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":"","description":"Enable the i3 tiling window manager.","example":"","internal":false,"name":"services.xserver.windowManager.i3.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/icewm.nix"],"default":"","description":"Enable the IceWM window manager.","example":"","internal":false,"name":"services.xserver.windowManager.icewm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/metacity.nix"],"default":"","description":"Enable the metacity window manager.","example":"","internal":false,"name":"services.xserver.windowManager.metacity.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/openbox.nix"],"default":"","description":"Enable the Openbox window manager.","example":"","internal":false,"name":"services.xserver.windowManager.openbox.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/twm.nix"],"default":"","description":"Enable the twm window manager.","example":"","internal":false,"name":"services.xserver.windowManager.twm.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/wmii.nix"],"default":"","description":"Enable the wmii window manager.","example":"","internal":false,"name":"services.xserver.windowManager.wmii.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":"","description":"Enable the xmonad window manager.","example":"","internal":false,"name":"services.xserver.windowManager.xmonad.enable","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":"","description":"Enable xmonad-{contrib,extras} in Xmonad.","example":"","internal":false,"name":"services.xserver.windowManager.xmonad.enableContribAndExtras","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":"","description":"Extra packages available to ghc when rebuilding Xmonad. The\nvalue must be a function which receives the attrset defined\nin <varname>haskellpackages</varname> as the sole argument.\n","example":"","internal":false,"name":"services.xserver.windowManager.xmonad.extraPackages","value":"","visible":true},{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":"","description":"haskellPackages used to build Xmonad and other packages.\nThis can be used to change the GHC version used to build\nXmonad and the packages listed in\n<varname>extraPackages</varname>.\n","example":"","internal":false,"name":"services.xserver.windowManager.xmonad.haskellPackages","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Keyboard model.\n","example":"","internal":false,"name":"services.xserver.xkbModel","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"X keyboard options; layout switching goes here.\n","example":"","internal":false,"name":"services.xserver.xkbOptions","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"X keyboard variant.\n","example":"","internal":false,"name":"services.xserver.xkbVariant","value":"","visible":true},{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Simple multiple monitor configuration, just specify a list of XRandR\noutputs which will be mapped from left to right in the order of the\nlist.\n\nBe careful using this option with multiple graphic adapters or with\ndrivers that have poor support for XRandR, unexpected things might\nhappen with those.\n","example":"","internal":false,"name":"services.xserver.xrandrHeads","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/zabbix-agent.nix"],"default":"","description":"Whether to run the Zabbix monitoring agent on this machine.\nIt will send monitoring data to a Zabbix server.\n","example":"","internal":false,"name":"services.zabbixAgent.enable","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/zabbix-agent.nix"],"default":"","description":"Configuration that is injected verbatim into the configuration file.\n","example":"","internal":false,"name":"services.zabbixAgent.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/zabbix-agent.nix"],"default":"","description":"The IP address or hostname of the Zabbix server to connect to.\n","example":"","internal":false,"name":"services.zabbixAgent.server","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":"","description":"Password used to connect to the database server.","example":"","internal":false,"name":"services.zabbixServer.dbPassword","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":"","description":"Hostname or IP address of the database server.\nUse an empty string (\"\") to use peer authentication.\n","example":"","internal":false,"name":"services.zabbixServer.dbServer","value":"","visible":true},{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":"","description":"Whether to run the Zabbix server on this machine.\n","example":"","internal":false,"name":"services.zabbixServer.enable","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Number of daily auto-snapshots that you wish to keep.\n","example":"","internal":false,"name":"services.zfs.autoSnapshot.daily","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Enable the (OpenSolaris-compatible) ZFS auto-snapshotting service.\nNote that you must set the <literal>com.sun:auto-snapshot</literal>\nproperty to <literal>true</literal> on all datasets which you wish\nto auto-snapshot.\n\nYou can override a child dataset to use, or not use auto-snapshotting\nby setting its flag with the given interval:\n<literal>zfs set com.sun:auto-snapshot:weekly=false DATASET</literal>\n","example":"","internal":false,"name":"services.zfs.autoSnapshot.enable","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Number of frequent (15-minute) auto-snapshots that you wish to keep.\n","example":"","internal":false,"name":"services.zfs.autoSnapshot.frequent","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Number of hourly auto-snapshots that you wish to keep.\n","example":"","internal":false,"name":"services.zfs.autoSnapshot.hourly","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Number of monthly auto-snapshots that you wish to keep.\n","example":"","internal":false,"name":"services.zfs.autoSnapshot.monthly","value":"","visible":true},{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"","description":"Number of weekly auto-snapshots that you wish to keep.\n","example":"","internal":false,"name":"services.zfs.autoSnapshot.weekly","value":"","visible":true},{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":"","description":"zope2 instances to be created automaticaly by the system.","example":"","internal":false,"name":"services.zope2.instances","value":"","visible":true},{"declarations":[],"default":"","description":"Home directory of zope2 instance.","example":"","internal":false,"name":"services.zope2.instances.<name?>.clientHome","value":"","visible":true},{"declarations":[],"default":"","description":"Extra zope.conf","example":"","internal":false,"name":"services.zope2.instances.<name?>.extra","value":"","visible":true},{"declarations":[],"default":"","description":"Give a port and adress for the HTTP server.","example":"","internal":false,"name":"services.zope2.instances.<name?>.http_address","value":"","visible":true},{"declarations":[],"default":"","description":"The name of the zope2 instance. If undefined, the name of the attribute set will be used.","example":"","internal":false,"name":"services.zope2.instances.<name?>.name","value":"","visible":true},{"declarations":[],"default":"","description":"The list of packages you want to make available to the zope2 instance.","example":"","internal":false,"name":"services.zope2.instances.<name?>.packages","value":"","visible":true},{"declarations":[],"default":"","description":"Specify the number of threads that Zope's ZServer web server will use to service requests. ","example":"","internal":false,"name":"services.zope2.instances.<name?>.threads","value":"","visible":true},{"declarations":[],"default":"","description":"The name of the effective user for the Zope process.","example":"","internal":false,"name":"services.zope2.instances.<name?>.user","value":"","visible":true},{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":"","description":"Whether to enable ALSA sound.\n","example":"","internal":false,"name":"sound.enable","value":"","visible":true},{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":"","description":"Whether to enable ALSA OSS emulation (with certain cards sound mixing may not work!).\n","example":"","internal":false,"name":"sound.enableOSSEmulation","value":"","visible":true},{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":"","description":"Set addition configuration for system-wide alsa.\n","example":"","internal":false,"name":"sound.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/tasks/encrypted-devices.nix","nixos/modules/config/swap.nix"],"default":"","description":"The swap devices and swap files.  These must have been\ninitialised using <command>mkswap</command>.  Each element\nshould be an attribute set specifying either the path of the\nswap device or file (<literal>device</literal>) or the label\nof the swap device (<literal>label</literal>, see\n<command>mkswap -L</command>).  Using a label is\nrecommended.\n","example":"","internal":false,"name":"swapDevices","value":"","visible":true},{"declarations":[],"default":"","description":"Path of the device.","example":"","internal":false,"name":"swapDevices.*.device","value":"","visible":true},{"declarations":[],"default":"","description":"Location of the backing encrypted device","example":"","internal":false,"name":"swapDevices.*.encrypted.blkDev","value":"","visible":true},{"declarations":[],"default":"","description":"The block device is backed by an encrypted one, adds this device as a initrd luks entry","example":"","internal":false,"name":"swapDevices.*.encrypted.enable","value":"","visible":true},{"declarations":[],"default":"","description":"File system location of keyfile","example":"","internal":false,"name":"swapDevices.*.encrypted.keyFile","value":"","visible":true},{"declarations":[],"default":"","description":"Label of the backing encrypted device","example":"","internal":false,"name":"swapDevices.*.encrypted.label","value":"","visible":true},{"declarations":[],"default":"","description":"Label of the device.  Can be used instead of <varname>device</varname>.\n","example":"","internal":false,"name":"swapDevices.*.label","value":"","visible":true},{"declarations":[],"default":"","description":"Specify the priority of the swap device. Priority is a value between 0 and 32767.\nHigher numbers indicate higher priority.\nnull lets the kernel choose a priority, which will show up as a negative value.\n","example":"","internal":false,"name":"swapDevices.*.priority","value":"","visible":true},{"declarations":[],"default":"","description":"If this option is set, ‘device’ is interpreted as the\npath of a swapfile that will be created automatically\nwith the indicated size (in megabytes) if it doesn't\nexist.\n","example":"","internal":false,"name":"swapDevices.*.size","value":"","visible":true},{"declarations":["nixos/modules/system/activation/activation-script.nix"],"default":"","description":"A set of shell script fragments that are executed when a NixOS\nsystem configuration is activated.  Examples are updating\n/etc, creating accounts, and so on.  Since these are executed\nevery time you boot the system or run\n<command>nixos-rebuild</command>, it's important that they are\nidempotent and fast.\n","example":"","internal":false,"name":"system.activationScripts","value":"","visible":true},{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":"","description":"If enabled, copies the NixOS configuration file\n<literal>$NIXOS_CONFIG</literal> (usually\n<filename>/etc/nixos/configuration.nix</filename>)\nto the system store path.\n","example":"","internal":false,"name":"system.copySystemConfiguration","value":"","visible":true},{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":"","description":"List of packages to override without doing a full rebuild.\nThe original derivation and replacement derivation must have the same\nname length, and ideally should have close-to-identical directory layout.\n","example":"","internal":false,"name":"system.replaceRuntimeDependencies","value":"","visible":true},{"declarations":[],"default":"","description":"The original package to override.","example":"","internal":false,"name":"system.replaceRuntimeDependencies.*.original","value":"","visible":true},{"declarations":[],"default":"","description":"The replacement package.","example":"","internal":false,"name":"system.replaceRuntimeDependencies.*.replacement","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd automount units.\nThis is a list instead of an attrSet, because systemd mandates the names to be derived from\nthe 'where' attribute.\n","example":"","internal":false,"name":"systemd.automounts","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.automounts.*.after","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Automount]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.automount</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.automounts.*.automountConfig","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.automounts.*.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.automounts.*.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.automounts.*.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.automounts.*.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.automounts.*.enable","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.automounts.*.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.automounts.*.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.automounts.*.requires","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.automounts.*.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.automounts.*.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.automounts.*.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.automounts.*.wants","value":"","visible":true},{"declarations":[],"default":"","description":"Absolute path of a directory of the mount point.\nWill be created if it doesn't exist. (Mandatory)\n","example":"","internal":false,"name":"systemd.automounts.*.where","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Default unit started when the system boots.","example":"","internal":false,"name":"systemd.defaultUnit","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Whether to enable emergency mode, which is an\n<command>sulogin</command> shell started on the console if\nmounting a filesystem fails.  Since some machines (like EC2\ninstances) have no console of any kind, emergency mode doesn't\nmake sense, and it's better to continue with the boot insofar\nas possible.\n","example":"","internal":false,"name":"systemd.enableEmergencyMode","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd. See man systemd-system.conf for\navailable options.\n","example":"","internal":false,"name":"systemd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Environment variables passed to <emphasis>all</emphasis> systemd units.\n","example":"","internal":false,"name":"systemd.globalEnvironment","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd mount units.\nThis is a list instead of an attrSet, because systemd mandates the names to be derived from\nthe 'where' attribute.\n","example":"","internal":false,"name":"systemd.mounts","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.mounts.*.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.mounts.*.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.mounts.*.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.mounts.*.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.mounts.*.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.mounts.*.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Mount]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.mount</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.mounts.*.mountConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Options used to mount the file system.","example":"","internal":false,"name":"systemd.mounts.*.options","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.mounts.*.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.mounts.*.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.mounts.*.requires","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.mounts.*.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"File system type.","example":"","internal":false,"name":"systemd.mounts.*.type","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.mounts.*.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.mounts.*.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.mounts.*.wants","value":"","visible":true},{"declarations":[],"default":"","description":"Absolute path of device node, file or other resource. (Mandatory)","example":"","internal":false,"name":"systemd.mounts.*.what","value":"","visible":true},{"declarations":[],"default":"","description":"Absolute path of a directory of the mount point.\nWill be created if it doesn't exist. (Mandatory)\n","example":"","internal":false,"name":"systemd.mounts.*.where","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"The systemd package.","example":"","internal":false,"name":"systemd.package","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Packages providing systemd units.","example":"","internal":false,"name":"systemd.packages","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd path units.","example":"","internal":false,"name":"systemd.paths","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.paths.<name>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.paths.<name>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.paths.<name>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.paths.<name>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.paths.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.paths.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.paths.<name>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Path]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.path</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.paths.<name>.pathConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.paths.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.paths.<name>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.paths.<name>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.paths.<name>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.paths.<name>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.paths.<name>.wants","value":"","visible":true},{"declarations":["nixos/modules/testing/service-runner.nix","nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd service units.","example":"","internal":false,"name":"systemd.services","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.services.<name>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.services.<name>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.services.<name>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.services.<name>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.services.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.services.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Environment variables passed to the service's processes.","example":"","internal":false,"name":"systemd.services.<name>.environment","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.services.<name>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Packages added to the service's <envar>PATH</envar>\nenvironment variable.  Both the <filename>bin</filename>\nand <filename>sbin</filename> subdirectories of each\npackage are added.\n","example":"","internal":false,"name":"systemd.services.<name>.path","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed after the service's main process\nis started.\n","example":"","internal":false,"name":"systemd.services.<name>.postStart","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed after the service's main process\nhas exited.\n","example":"","internal":false,"name":"systemd.services.<name>.postStop","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed before the service's main process\nis started.\n","example":"","internal":false,"name":"systemd.services.<name>.preStart","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed to stop the service.\n","example":"","internal":false,"name":"systemd.services.<name>.preStop","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the service should be reloaded during a NixOS\nconfiguration switch if its definition has changed.  If\nenabled, the value of <option>restartIfChanged</option> is\nignored.\n","example":"","internal":false,"name":"systemd.services.<name>.reloadIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.services.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.services.<name>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the service should be restarted during a NixOS\nconfiguration switch if its definition has changed.\n","example":"","internal":false,"name":"systemd.services.<name>.restartIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.services.<name>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed as the service's main process.","example":"","internal":false,"name":"systemd.services.<name>.script","value":"","visible":true},{"declarations":[],"default":"","description":"Arguments passed to the main process script.","example":"","internal":false,"name":"systemd.services.<name>.scriptArgs","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Service]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.service</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.services.<name>.serviceConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Automatically start this unit at the given date/time, which\nmust be in the format described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.  This is equivalent\nto adding a corresponding timer unit with\n<option>OnCalendar</option> set to the value given here.\n","example":"","internal":false,"name":"systemd.services.<name>.startAt","value":"","visible":true},{"declarations":[],"default":"","description":"If set, a changed unit is restarted by calling\n<command>systemctl stop</command> in the old configuration,\nthen <command>systemctl start</command> in the new one.\nOtherwise, it is restarted in a single step using\n<command>systemctl restart</command> in the new configuration.\nThe latter is less correct because it runs the\n<literal>ExecStop</literal> commands from the new\nconfiguration.\n","example":"","internal":false,"name":"systemd.services.<name>.stopIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.services.<name>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.services.<name>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.services.<name>.wants","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd socket units.","example":"","internal":false,"name":"systemd.sockets","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.sockets.<name>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.sockets.<name>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.sockets.<name>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.sockets.<name>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.sockets.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.sockets.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"For each item in this list, a <literal>ListenStream</literal>\noption in the <literal>[Socket]</literal> section will be created.\n","example":"","internal":false,"name":"systemd.sockets.<name>.listenStreams","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.sockets.<name>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.sockets.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.sockets.<name>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.sockets.<name>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Socket]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.socket</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.sockets.<name>.socketConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.sockets.<name>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.sockets.<name>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.sockets.<name>.wants","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd target units.","example":"","internal":false,"name":"systemd.targets","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.targets.<name>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.targets.<name>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.targets.<name>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.targets.<name>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.targets.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.targets.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.targets.<name>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.targets.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.targets.<name>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.targets.<name>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.targets.<name>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.targets.<name>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.targets.<name>.wants","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd timer units.","example":"","internal":false,"name":"systemd.timers","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.timers.<name>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.timers.<name>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.timers.<name>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.timers.<name>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.timers.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.timers.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.timers.<name>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.timers.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.timers.<name>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.timers.<name>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Timer]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.timer</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> and\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.timers.<name>.timerConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.timers.<name>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.timers.<name>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.timers.<name>.wants","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Rules for creating and cleaning up temporary files\nautomatically. See\n<citerefentry><refentrytitle>tmpfiles.d</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor the exact format. You should not use this option to create\nfiles required by systemd services, since there is no\nguarantee that <command>systemd-tmpfiles</command> runs when\nthe system is reconfigured using\n<command>nixos-rebuild</command>.\n","example":"","internal":false,"name":"systemd.tmpfiles.rules","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd units.","example":"","internal":false,"name":"systemd.units","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.units.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.units.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Text of this systemd unit.","example":"","internal":false,"name":"systemd.units.<name>.text","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.units.<name>.wantedBy","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd per-user service units.","example":"","internal":false,"name":"systemd.user.services","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","example":"","internal":false,"name":"systemd.user.services.<name>.after","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","example":"","internal":false,"name":"systemd.user.services.<name>.before","value":"","visible":true},{"declarations":[],"default":"","description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","example":"","internal":false,"name":"systemd.user.services.<name>.bindsTo","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","example":"","internal":false,"name":"systemd.user.services.<name>.conflicts","value":"","visible":true},{"declarations":[],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","example":"","internal":false,"name":"systemd.user.services.<name>.description","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.user.services.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Environment variables passed to the service's processes.","example":"","internal":false,"name":"systemd.user.services.<name>.environment","value":"","visible":true},{"declarations":[],"default":"","description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","example":"","internal":false,"name":"systemd.user.services.<name>.partOf","value":"","visible":true},{"declarations":[],"default":"","description":"Packages added to the service's <envar>PATH</envar>\nenvironment variable.  Both the <filename>bin</filename>\nand <filename>sbin</filename> subdirectories of each\npackage are added.\n","example":"","internal":false,"name":"systemd.user.services.<name>.path","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed after the service's main process\nis started.\n","example":"","internal":false,"name":"systemd.user.services.<name>.postStart","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed after the service's main process\nhas exited.\n","example":"","internal":false,"name":"systemd.user.services.<name>.postStop","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed before the service's main process\nis started.\n","example":"","internal":false,"name":"systemd.user.services.<name>.preStart","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed to stop the service.\n","example":"","internal":false,"name":"systemd.user.services.<name>.preStop","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the service should be reloaded during a NixOS\nconfiguration switch if its definition has changed.  If\nenabled, the value of <option>restartIfChanged</option> is\nignored.\n","example":"","internal":false,"name":"systemd.user.services.<name>.reloadIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.user.services.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","example":"","internal":false,"name":"systemd.user.services.<name>.requires","value":"","visible":true},{"declarations":[],"default":"","description":"Whether the service should be restarted during a NixOS\nconfiguration switch if its definition has changed.\n","example":"","internal":false,"name":"systemd.user.services.<name>.restartIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","example":"","internal":false,"name":"systemd.user.services.<name>.restartTriggers","value":"","visible":true},{"declarations":[],"default":"","description":"Shell commands executed as the service's main process.","example":"","internal":false,"name":"systemd.user.services.<name>.script","value":"","visible":true},{"declarations":[],"default":"","description":"Arguments passed to the main process script.","example":"","internal":false,"name":"systemd.user.services.<name>.scriptArgs","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Service]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.service</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.user.services.<name>.serviceConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Automatically start this unit at the given date/time, which\nmust be in the format described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.  This is equivalent\nto adding a corresponding timer unit with\n<option>OnCalendar</option> set to the value given here.\n","example":"","internal":false,"name":"systemd.user.services.<name>.startAt","value":"","visible":true},{"declarations":[],"default":"","description":"If set, a changed unit is restarted by calling\n<command>systemctl stop</command> in the old configuration,\nthen <command>systemctl start</command> in the new one.\nOtherwise, it is restarted in a single step using\n<command>systemctl restart</command> in the new configuration.\nThe latter is less correct because it runs the\n<literal>ExecStop</literal> commands from the new\nconfiguration.\n","example":"","internal":false,"name":"systemd.user.services.<name>.stopIfChanged","value":"","visible":true},{"declarations":[],"default":"","description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"","internal":false,"name":"systemd.user.services.<name>.unitConfig","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.user.services.<name>.wantedBy","value":"","visible":true},{"declarations":[],"default":"","description":"Start the specified units when this unit is started.\n","example":"","internal":false,"name":"systemd.user.services.<name>.wants","value":"","visible":true},{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Definition of systemd per-user units.","example":"","internal":false,"name":"systemd.user.units","value":"","visible":true},{"declarations":[],"default":"","description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","example":"","internal":false,"name":"systemd.user.units.<name>.enable","value":"","visible":true},{"declarations":[],"default":"","description":"Units that require (i.e. depend on and need to go down with) this unit.","example":"","internal":false,"name":"systemd.user.units.<name>.requiredBy","value":"","visible":true},{"declarations":[],"default":"","description":"Text of this systemd unit.","example":"","internal":false,"name":"systemd.user.units.<name>.text","value":"","visible":true},{"declarations":[],"default":"","description":"Units that want (i.e. depend on) this unit.","example":"","internal":false,"name":"systemd.user.units.<name>.wantedBy","value":"","visible":true},{"declarations":["nixos/modules/config/timezone.nix"],"default":"","description":"If set, keep the hardware clock in local time instead of UTC.","example":"","internal":false,"name":"time.hardwareClockInLocalTime","value":"","visible":true},{"declarations":["nixos/modules/config/timezone.nix"],"default":"","description":"The time zone used when displaying times and dates.","example":"","internal":false,"name":"time.timeZone","value":"","visible":true},{"declarations":["nixos/modules/programs/shadow.nix"],"default":"","description":"This option defines the default shell assigned to user\naccounts.  This must not be a store path, since the path is\nused outside the store (in particular in /etc/passwd).\nRather, it should be the path of a symlink that points to the\nactual shell in the Nix store.\n","example":"","internal":false,"name":"users.defaultUserShell","value":"","visible":true},{"declarations":["nixos/modules/config/users-groups.nix"],"default":"","description":"Whether to require that no two users/groups share the same uid/gid.\n","example":"","internal":false,"name":"users.enforceIdUniqueness","value":"","visible":true},{"declarations":["nixos/modules/config/users-groups.nix"],"default":"","description":"Additional groups to be created automatically by the system.\n","example":"","internal":false,"name":"users.extraGroups","value":"","visible":true},{"declarations":[],"default":"","description":"The group GID. If the <literal>mutableUsers</literal> option\nis false, the GID cannot be null. Otherwise, the GID might be\nnull, in which case a free GID is picked on activation (by the\ngroupadd command).\n","example":"","internal":false,"name":"users.extraGroups.<name?>.gid","value":"","visible":true},{"declarations":[],"default":"","description":"The user names of the group members, added to the\n<literal>/etc/group</literal> file.\n","example":"","internal":false,"name":"users.extraGroups.<name?>.members","value":"","visible":true},{"declarations":[],"default":"","description":"The name of the group. If undefined, the name of the attribute set\nwill be used.\n","example":"","internal":false,"name":"users.extraGroups.<name?>.name","value":"","visible":true},{"declarations":["nixos/modules/services/networking/ssh/sshd.nix","nixos/modules/config/users-groups.nix"],"default":"","description":"Additional user accounts to be created automatically by the system.\nThis can also be used to set options for root.\n","example":"","internal":false,"name":"users.extraUsers","value":"","visible":true},{"declarations":[],"default":"","description":"If true, the home directory will be created automatically. If this\noption is true and the home directory already exists but is not\nowned by the user, directory owner and group will be changed to\nmatch the user.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.createHome","value":"","visible":true},{"declarations":[],"default":"","description":"Indicates if the user should be created automatically as a local user.\nSet this to false if the user for instance is an LDAP user. NixOS will\nthen not modify any of the basic properties for the user account.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.createUser","value":"","visible":true},{"declarations":[],"default":"","description":"A short description of the user account, typically the\nuser's full name.  This is actually the “GECOS” or “comment”\nfield in <filename>/etc/passwd</filename>.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.description","value":"","visible":true},{"declarations":[],"default":"","description":"The user's auxiliary groups.","example":"","internal":false,"name":"users.extraUsers.<name?>.extraGroups","value":"","visible":true},{"declarations":[],"default":"","description":"The user's primary group.","example":"","internal":false,"name":"users.extraUsers.<name?>.group","value":"","visible":true},{"declarations":[],"default":"","description":"Specifies the (hashed) password for the user.\nThe options <literal>hashedPassword</literal>,\n<literal>password</literal> and <literal>passwordFile</literal>\ncontrols what password is set for the user.\n<literal>hashedPassword</literal> overrides both\n<literal>password</literal> and <literal>passwordFile</literal>.\n<literal>password</literal> overrides <literal>passwordFile</literal>.\nIf none of these three options are set, no password is assigned to\nthe user, and the user will not be able to do password logins.\nIf the option <literal>users.mutableUsers</literal> is true, the\npassword defined in one of the three options will only be set when\nthe user is created for the first time. After that, you are free to\nchange the password with the ordinary user management commands. If\n<literal>users.mutableUsers</literal> is false, you cannot change\nuser passwords, they will always be set according to the password\noptions.\n\n","example":"","internal":false,"name":"users.extraUsers.<name?>.hashedPassword","value":"","visible":true},{"declarations":[],"default":"","description":"The user's home directory.","example":"","internal":false,"name":"users.extraUsers.<name?>.home","value":"","visible":true},{"declarations":[],"default":"","description":"Indicates if the user is a system user or not. This option\nonly has an effect if <option>mutableUsers</option> is\n<literal>true</literal> and <option>uid</option> is\n<option>null</option>, in which case it determines whether\nthe user's UID is allocated in the range for system users\n(below 500) or in the range for normal users (starting at\n1000).\n","example":"","internal":false,"name":"users.extraUsers.<name?>.isSystemUser","value":"","visible":true},{"declarations":[],"default":"","description":"The name of the user account. If undefined, the name of the\nattribute set will be used.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.name","value":"","visible":true},{"declarations":[],"default":"","description":"A list of files each containing one OpenSSH public key that should be\nadded to the user's authorized keys. The contents of the files are\nread at build time and added to a file that the SSH daemon reads in\naddition to the the user's authorized_keys file. You can combine the\n<literal>keyFiles</literal> and <literal>keys</literal> options.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.openssh.authorizedKeys.keyFiles","value":"","visible":true},{"declarations":[],"default":"","description":"A list of verbatim OpenSSH public keys that should be added to the\nuser's authorized keys. The keys are added to a file that the SSH\ndaemon reads in addition to the the user's authorized_keys file.\nYou can combine the <literal>keys</literal> and\n<literal>keyFiles</literal> options.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.openssh.authorizedKeys.keys","value":"","visible":true},{"declarations":[],"default":"","description":"Specifies the (clear text) password for the user.\nWarning: do not set confidential information here\nbecause it is world-readable in the Nix store. This option\nshould only be used for public accounts.\nThe options <literal>hashedPassword</literal>,\n<literal>password</literal> and <literal>passwordFile</literal>\ncontrols what password is set for the user.\n<literal>hashedPassword</literal> overrides both\n<literal>password</literal> and <literal>passwordFile</literal>.\n<literal>password</literal> overrides <literal>passwordFile</literal>.\nIf none of these three options are set, no password is assigned to\nthe user, and the user will not be able to do password logins.\nIf the option <literal>users.mutableUsers</literal> is true, the\npassword defined in one of the three options will only be set when\nthe user is created for the first time. After that, you are free to\nchange the password with the ordinary user management commands. If\n<literal>users.mutableUsers</literal> is false, you cannot change\nuser passwords, they will always be set according to the password\noptions.\n\n","example":"","internal":false,"name":"users.extraUsers.<name?>.password","value":"","visible":true},{"declarations":[],"default":"","description":"The path to a file that contains the user's password. The password\nfile is read on each system activation. The file should contain\nexactly one line, which should be the password in an encrypted form\nthat is suitable for the <literal>chpasswd -e</literal> command.\nThe options <literal>hashedPassword</literal>,\n<literal>password</literal> and <literal>passwordFile</literal>\ncontrols what password is set for the user.\n<literal>hashedPassword</literal> overrides both\n<literal>password</literal> and <literal>passwordFile</literal>.\n<literal>password</literal> overrides <literal>passwordFile</literal>.\nIf none of these three options are set, no password is assigned to\nthe user, and the user will not be able to do password logins.\nIf the option <literal>users.mutableUsers</literal> is true, the\npassword defined in one of the three options will only be set when\nthe user is created for the first time. After that, you are free to\nchange the password with the ordinary user management commands. If\n<literal>users.mutableUsers</literal> is false, you cannot change\nuser passwords, they will always be set according to the password\noptions.\n\n","example":"","internal":false,"name":"users.extraUsers.<name?>.passwordFile","value":"","visible":true},{"declarations":[],"default":"","description":"The path to the user's shell.","example":"","internal":false,"name":"users.extraUsers.<name?>.shell","value":"","visible":true},{"declarations":[],"default":"","description":"The account UID. If the <option>mutableUsers</option> option\nis false, the UID cannot be null. Otherwise, the UID might be\nnull, in which case a free UID is picked on activation (by the\nuseradd command).\n","example":"","internal":false,"name":"users.extraUsers.<name?>.uid","value":"","visible":true},{"declarations":[],"default":"","description":"If true, the user's shell will be set to\n<literal>cfg.defaultUserShell</literal>.\n","example":"","internal":false,"name":"users.extraUsers.<name?>.useDefaultShell","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"The distinguished name of the search base.","example":"","internal":false,"name":"users.ldap.base","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"The distinguished name to bind to the LDAP server with. If this\nis not specified, an anonymous bind will be done.\n","example":"","internal":false,"name":"users.ldap.bind.distinguishedName","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"The path to a file containing the credentials to use when binding\nto the LDAP server (if not binding anonymously).\n","example":"","internal":false,"name":"users.ldap.bind.password","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Specifies the policy to use for reconnecting to an unavailable\nLDAP server. The default is <literal>hard_open</literal>, which\nreconnects if opening the connection to the directory server\nfailed. By contrast, <literal>hard_init</literal> reconnects if\ninitializing the connection failed. Initializing may not\nactually contact the directory server, and it is possible that\na malformed configuration file will trigger reconnection. If\n<literal>soft</literal> is specified, then\n<literal>nss_ldap</literal> will return immediately on server\nfailure. All hard reconnect policies block with exponential\nbackoff before retrying.\n","example":"","internal":false,"name":"users.ldap.bind.policy","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Specifies the time limit (in seconds) to use when connecting\nto the directory server. This is distinct from the time limit\nspecified in <literal>users.ldap.timeLimit</literal> and affects\nthe initial server connection only.\n","example":"","internal":false,"name":"users.ldap.bind.timeLimit","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Whether to let the nslcd daemon (nss-pam-ldapd) handle the\nLDAP lookups for NSS and PAM. This can improve performance,\nand if you need to bind to the LDAP server with a password,\nit increases security, since only the nslcd user needs to\nhave access to the bindpw file, not everyone that uses NSS\nand/or PAM. If this option is enabled, a local nscd user is\ncreated automatically, and the nslcd service is started\nautomatically when the network get up.\n","example":"","internal":false,"name":"users.ldap.daemon.enable","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Extra configuration options that will be added verbatim at\nthe end of the nslcd configuration file (nslcd.conf).\n","example":"","internal":false,"name":"users.ldap.daemon.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Whether to enable authentication against an LDAP server.","example":"","internal":false,"name":"users.ldap.enable","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Extra configuration options that will be added verbatim at\nthe end of the ldap configuration file (ldap.conf).\nIf <literal>users.ldap.daemon</literal> is enabled, this\nconfiguration will not be used. In that case, use\n<literal>users.ldap.daemon.extraConfig</literal> instead.\n","example":"","internal":false,"name":"users.ldap.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"The URL of the LDAP server.","example":"","internal":false,"name":"users.ldap.server","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Specifies the time limit (in seconds) to use when performing\nsearches. A value of zero (0), which is the default, is to\nwait indefinitely for searches to be completed.\n","example":"","internal":false,"name":"users.ldap.timeLimit","value":"","visible":true},{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"If enabled, use TLS (encryption) over an LDAP (port 389)\nconnection.  The alternative is to specify an LDAPS server (port\n636) in <option>users.ldap.server</option> or to forego\nsecurity.\n","example":"","internal":false,"name":"users.ldap.useTLS","value":"","visible":true},{"declarations":["nixos/modules/security/pam.nix"],"default":"","description":"Message of the day shown to users when they log in.","example":"","internal":false,"name":"users.motd","value":"","visible":true},{"declarations":["nixos/modules/config/users-groups.nix"],"default":"","description":"If true, you are free to add new users and groups to the system\nwith the ordinary <literal>useradd</literal> and\n<literal>groupadd</literal> commands. On system activation, the\nexisting contents of the <literal>/etc/passwd</literal> and\n<literal>/etc/group</literal> files will be merged with the\ncontents generated from the <literal>users.extraUsers</literal> and\n<literal>users.extraGroups</literal> options. If\n<literal>mutableUsers</literal> is false, the contents of the user and\ngroup files will simply be replaced on system activation. This also\nholds for the user passwords; if this option is false, all changed\npasswords will be reset according to the\n<literal>users.extraUsers</literal> configuration on activation. If\nthis option is true, the initial password for a user will be set\naccording to <literal>users.extraUsers</literal>, but existing passwords\nwill not be changed.\n","example":"","internal":false,"name":"users.mutableUsers","value":"","visible":true},{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":"","description":"This option enables libvirtd, a daemon that manages\nvirtual machines. Users in the \"libvirtd\" group can interact with\nthe daemon (e.g. to start or stop VMs) using the\n<command>virsh</command> command line tool, among others.\n","example":"","internal":false,"name":"virtualisation.libvirtd.enable","value":"","visible":true},{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":"","description":"This option enables support for QEMU/KVM in libvirtd.\n","example":"","internal":false,"name":"virtualisation.libvirtd.enableKVM","value":"","visible":true},{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":"","description":"Extra contents appended to the libvirtd configuration file,\nlibvirtd.conf.\n","example":"","internal":false,"name":"virtualisation.libvirtd.extraConfig","value":"","visible":true},{"declarations":["nixos/modules/config/zram.nix"],"default":"","description":"Enable in-memory compressed swap space provided by the zram kernel\nmodule. It is recommended to enable only for kernel 3.14 or higher.\n","example":"","internal":false,"name":"zramSwap.enable","value":"","visible":true},{"declarations":["nixos/modules/config/zram.nix"],"default":"","description":"Maximum amount of memory that can be used by the zram swap devices\n(as a percentage of your total memory). Defaults to 1/2 of your total\nRAM.\n","example":"","internal":false,"name":"zramSwap.memoryPercent","value":"","visible":true},{"declarations":["nixos/modules/config/zram.nix"],"default":"","description":"Number of zram swap devices to create. It should be equal to the\nnumber of CPU cores your system has.\n","example":"","internal":false,"name":"zramSwap.numDevices","value":"","visible":true},{"declarations":["nixos/modules/config/zram.nix"],"default":"","description":"Priority of the zram swap devices. It should be a number higher than\nthe priority of your disk-based swap devices (so that the system will\nfill the zram swap devices before falling back to disk swap).\n","example":"","internal":false,"name":"zramSwap.priority","value":"","visible":true}]